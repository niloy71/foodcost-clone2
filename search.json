[
  {
    "objectID": "sales_initiatives_latem.html",
    "href": "sales_initiatives_latem.html",
    "title": "Chocolate mousses",
    "section": "",
    "text": "core.get_shop_names()\n\nconfig.ini file available... using that\n\n\n['La Hulpe',\n 'Fort Jaco',\n 'Woluwe',\n 'Tongres',\n 'Wemmel',\n 'CHATELAIN',\n 'OVERIJSE',\n 'LATEM']\n\n\n\nchicken_sales_latem_woluwe = core.get_sales_by_day(core.get_previous_n_day(1), core.get_previous_n_day(-1), ['Woluwe','LATEM'], 18191)\nchicken_sales_latem_woluwe\n# 40977\n\ndf_chicken_sales = pd.DataFrame(\n    chicken_sales_latem_woluwe,\n    columns=['shop','date','product','qty_sold','rev']\n)\n\ndf_chicken_sales.fillna(value=0, inplace=True)\ndf_chicken_sales.set_index('date', inplace=True)\n\nconfig.ini file available... using that\n\n\n\nimport matplotlib.pyplot as plt\n\ndef plot_dataframe(df):\n    ax = df.plot()\n    ax.set_xlabel('Date')\n    ax.set_ylabel('Revenue')\n    ax.set_title('Poulet romarin')\n    plt.show()\n\n\ndisplay(df_chicken_sales)\n\n\n\n\n\n\n\n\nshop\nproduct\nqty_sold\nrev\n\n\ndate\n\n\n\n\n\n\n\n\n2023-03-14\nWoluwe\nPOULET AU ROMARIN\n2.276\n29.36040\n\n\n\n\n\n\n\n\ndisplay(df_chicken_sales.head())\n\n\n\n\n\n\n\n\nshop\nproduct\nqty_sold\nrev\n\n\ndate\n\n\n\n\n\n\n\n\n2023-03-14\nWoluwe\nPOULET AU ROMARIN\n2.276\n29.36040\n\n\n\n\n\n\n\n\n# Select sales data for Latem and Woluwe\nlatem_sales = df_chicken_sales[df_chicken_sales['shop'] == 'LATEM']\nwoluwe_sales = df_chicken_sales[df_chicken_sales['shop'] == 'Woluwe']\n\n# Create a Figure and Axes object\nfig, ax = plt.subplots()\n\n# Plot the sales data for Latem and Woluwe on the same chart\nax.plot(latem_sales.index, latem_sales['rev'], label='Latem')\nax.plot(woluwe_sales.index, woluwe_sales['rev'], color='red', label='Woluwe')\n\n# Add labels, legend, and title to the chart\nax.set_xlabel('Date')\nax.set_ylabel('Revenue')\nax.legend()\nax.set_title('Chicken Sales by Shop')\n\n# Show the chart\nplt.show()\n\n\n\n\n\nsource\n\ndid_latem_make_chicken_today\n\n did_latem_make_chicken_today ()\n\n\ndid_latem_make_chicken_today()\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\nTrue\n\n\n\ndef get_chicken_sales_lat_10_days():\n    chicken_sales_latem_woluwe = core.get_sales_by_day(\n        core.get_previous_n_day(18), \n        core.get_previous_n_day(-1), ['LATEM'], \n        18191\n    )\n    df_chicken_sales = pd.DataFrame(\n        chicken_sales_latem_woluwe,\n        columns=['shop','date','product','qty_sold','rev']\n    )\n    df_chicken_sales.fillna(value=0, inplace=True)\n    df_chicken_sales.set_index('date', inplace=True)\n    return df_chicken_sales\n\n\nevolution_of_chicken_sales = get_chicken_sales_lat_10_days()\n\nconfig.ini file available... using that\n\n\n\nevolution_of_chicken_sales.rev = evolution_of_chicken_sales.rev.astype(float)\n\n\nevolution_of_chicken_sales\n\n\n\n\n\n\n\n\nshop\nproduct\nqty_sold\nrev\n\n\ndate\n\n\n\n\n\n\n\n\n2023-02-25\nLATEM\nPOULET AU ROMARIN\n4.502\n58.0758\n\n\n2023-02-26\nLATEM\nPOULET AU ROMARIN\n2.716\n35.0364\n\n\n2023-02-27\nLATEM\nPOULET AU ROMARIN\n3.056\n39.4224\n\n\n2023-03-01\nLATEM\nPOULET AU ROMARIN\n0.414\n5.3406\n\n\n2023-03-02\nLATEM\nPOULET AU ROMARIN\n1.348\n17.3892\n\n\n2023-03-03\nLATEM\nPOULET AU ROMARIN\n2.686\n34.6494\n\n\n2023-03-04\nLATEM\nPOULET AU ROMARIN\n0.752\n9.7008\n\n\n2023-03-05\nLATEM\nPOULET AU ROMARIN\n3.214\n41.4606\n\n\n2023-03-06\nLATEM\nPOULET AU ROMARIN\n1.368\n17.6472\n\n\n2023-03-08\nLATEM\nPOULET AU ROMARIN\n1.040\n13.4160\n\n\n2023-03-11\nLATEM\nPOULET AU ROMARIN\n2.646\n34.1334\n\n\n\n\n\n\n\n\nevolution_of_chicken_sales.rev.plot()\n\n&lt;AxesSubplot:xlabel='date'&gt;\n\n\n\n\n\n\nchocolate_mousses = [\n    19772\n]\nchocolate_mouse = core.get_sales_by_day(\n    core.get_previous_n_day(30), \n    core.get_today_date_string(), \n    ['Woluwe','LATEM'], \n    chocolate_mousses[0]\n)\n# 40977\n\nchocolate_mouse_df = pd.DataFrame(\n    chocolate_mouse,\n    columns=['shop','date','product','qty_sold','rev']\n)\nchocolate_mouse_df.fillna(value=0, inplace=True)\nchocolate_mouse_df.set_index('date', inplace=True)\n\nconfig.ini file available... using that\n\n\n\nchocolate_mouse_df\n\n\n\n\n\n\n\n\nshop\nproduct\nqty_sold\nrev\n\n\ndate\n\n\n\n\n\n\n\n\n2023-02-13\nLATEM\nMOUSSE CHOCOLAT 110G\n6.000\n18.60000\n\n\n2023-02-14\nLATEM\nMOUSSE CHOCOLAT 110G\n12.000\n37.20000\n\n\n2023-02-15\nLATEM\nMOUSSE CHOCOLAT 110G\n2.000\n6.20000\n\n\n2023-02-16\nLATEM\nMOUSSE CHOCOLAT 110G\n5.000\n15.50000\n\n\n2023-02-17\nLATEM\nMOUSSE CHOCOLAT 110G\n6.000\n18.60000\n\n\n2023-02-18\nLATEM\nMOUSSE CHOCOLAT 110G\n4.000\n12.40000\n\n\n2023-02-19\nLATEM\nMOUSSE CHOCOLAT 110G\n8.000\n24.80000\n\n\n2023-02-20\nLATEM\nMOUSSE CHOCOLAT 110G\n11.000\n34.10000\n\n\n2023-02-21\nLATEM\nMOUSSE CHOCOLAT 110G\n1.000\n3.10000\n\n\n2023-02-23\nLATEM\nMOUSSE CHOCOLAT 110G\n7.000\n21.70000\n\n\n2023-02-24\nLATEM\nMOUSSE CHOCOLAT 110G\n8.000\n24.80000\n\n\n2023-02-25\nLATEM\nMOUSSE CHOCOLAT 110G\n10.000\n31.00000\n\n\n2023-02-26\nLATEM\nMOUSSE CHOCOLAT 110G\n6.000\n18.60000\n\n\n2023-03-01\nLATEM\nMOUSSE CHOCOLAT 110G\n1.000\n3.10000\n\n\n2023-03-02\nLATEM\nMOUSSE CHOCOLAT 110G\n6.000\n18.60000\n\n\n2023-03-03\nLATEM\nMOUSSE CHOCOLAT 110G\n9.000\n27.90000\n\n\n2023-03-04\nLATEM\nMOUSSE CHOCOLAT 110G\n9.000\n27.90000\n\n\n2023-03-05\nLATEM\nMOUSSE CHOCOLAT 110G\n6.000\n18.60000\n\n\n2023-03-08\nLATEM\nMOUSSE CHOCOLAT 110G\n3.000\n9.30000\n\n\n2023-03-09\nLATEM\nMOUSSE CHOCOLAT 110G\n2.000\n6.20000\n\n\n2023-03-10\nLATEM\nMOUSSE CHOCOLAT 110G\n14.000\n43.40000\n\n\n2023-03-11\nLATEM\nMOUSSE CHOCOLAT 110G\n4.000\n12.40000\n\n\n2023-03-14\nLATEM\nMOUSSE CHOCOLAT 110G\n2.000\n6.20000\n\n\n2023-02-13\nWoluwe\nMOUSSE CHOCOLAT 110G\n12.000\n37.20000\n\n\n2023-02-14\nWoluwe\nMOUSSE CHOCOLAT 110G\n18.000\n55.80000\n\n\n2023-02-15\nWoluwe\nMOUSSE CHOCOLAT 110G\n5.000\n15.50000\n\n\n2023-02-17\nWoluwe\nMOUSSE CHOCOLAT 110G\n4.000\n12.40000\n\n\n2023-02-18\nWoluwe\nMOUSSE CHOCOLAT 110G\n5.000\n15.50000\n\n\n2023-02-19\nWoluwe\nMOUSSE CHOCOLAT 110G\n12.000\n37.20000\n\n\n2023-02-20\nWoluwe\nMOUSSE CHOCOLAT 110G\n6.000\n18.60000\n\n\n2023-02-21\nWoluwe\nMOUSSE CHOCOLAT 110G\n9.000\n27.90000\n\n\n2023-02-22\nWoluwe\nMOUSSE CHOCOLAT 110G\n6.000\n18.60000\n\n\n2023-02-23\nWoluwe\nMOUSSE CHOCOLAT 110G\n14.000\n43.40000\n\n\n2023-02-24\nWoluwe\nMOUSSE CHOCOLAT 110G\n9.000\n27.90000\n\n\n2023-02-25\nWoluwe\nMOUSSE CHOCOLAT 110G\n4.000\n12.40000\n\n\n2023-02-26\nWoluwe\nMOUSSE CHOCOLAT 110G\n17.000\n52.70000\n\n\n2023-02-27\nWoluwe\nMOUSSE CHOCOLAT 110G\n5.000\n15.50000\n\n\n2023-02-28\nWoluwe\nMOUSSE CHOCOLAT 110G\n6.000\n18.60000\n\n\n2023-03-01\nWoluwe\nMOUSSE CHOCOLAT 110G\n10.000\n31.00000\n\n\n2023-03-02\nWoluwe\nMOUSSE CHOCOLAT 110G\n6.000\n18.60000\n\n\n2023-03-03\nWoluwe\nMOUSSE CHOCOLAT 110G\n12.000\n37.20000\n\n\n2023-03-04\nWoluwe\nMOUSSE CHOCOLAT 110G\n13.000\n40.30000\n\n\n2023-03-05\nWoluwe\nMOUSSE CHOCOLAT 110G\n16.000\n49.60000\n\n\n2023-03-06\nWoluwe\nMOUSSE CHOCOLAT 110G\n9.000\n27.90000\n\n\n2023-03-07\nWoluwe\nMOUSSE CHOCOLAT 110G\n3.000\n9.30000\n\n\n2023-03-08\nWoluwe\nMOUSSE CHOCOLAT 110G\n16.000\n49.60000\n\n\n2023-03-09\nWoluwe\nMOUSSE CHOCOLAT 110G\n10.000\n31.00000\n\n\n2023-03-10\nWoluwe\nMOUSSE CHOCOLAT 110G\n10.000\n31.00000\n\n\n2023-03-11\nWoluwe\nMOUSSE CHOCOLAT 110G\n11.000\n34.10000\n\n\n2023-03-12\nWoluwe\nMOUSSE CHOCOLAT 110G\n13.000\n40.30000\n\n\n2023-03-13\nWoluwe\nMOUSSE CHOCOLAT 110G\n6.000\n18.60000\n\n\n2023-03-14\nWoluwe\nMOUSSE CHOCOLAT 110G\n5.000\n15.50000\n\n\n\n\n\n\n\n\ndate_range = pd.date_range(\n    datetime.datetime.strptime('2022-10-12', '%Y-%m-%d').date(),\n    datetime.datetime.strptime('2022-10-13', '%Y-%m-%d').date()\n)\n\n\ndate_range\n\nDatetimeIndex(['2022-10-12', '2022-10-13'], dtype='datetime64[ns]', freq='D')\n\n\n\ndef missing_sales(start_date, end_date, df):\n    date_range = pd.date_range(\n        datetime.datetime.strptime(start_date, '%Y-%m-%d').date() if isinstance(start_date, str) else start_date,\n        datetime.datetime.strptime(end_date, '%Y-%m-%d').date() if isinstance(end_date, str) else end_date\n    )\n    df_dates = list(set(df.index))\n    missing_dates = [d for d in date_range if d.date() not in df_dates]\n    return [str(d) for d in missing_dates]\n\n\ndef nbr_days_product_not_sold_this_month():\n    today = datetime.date.today()\n    \n    first_day = datetime.date(today.year, today.month, 1)\n    \n    return missing_sales(\n        first_day,\n        today,\n        chocolate_mouse_df.loc[ chocolate_mouse_df['shop'] == 'LATEM']\n    )\nnbr_days_product_not_sold_this_month()\n\n['2023-03-06 00:00:00',\n '2023-03-07 00:00:00',\n '2023-03-12 00:00:00',\n '2023-03-13 00:00:00',\n '2023-03-15 00:00:00']\n\n\n\nchocolate_mouse_df.index"
  },
  {
    "objectID": "fruit_basket.html",
    "href": "fruit_basket.html",
    "title": "foodcosts",
    "section": "",
    "text": "import sys\nsys.path.append('..')\n\nimport json\nimport psycopg2\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport datetime\nimport pandas as pd\nimport foodcosts.core as core\n\n\n\ncore.get_sales_by_day\n\n\ntoday = datetime.datetime.now().date()\nstart_date = (today - datetime.timedelta(days=1000)).strftime(\"%Y-%m-%d\")\nend_date = today.strftime(\"%Y-%m-%d\")\n\nFRUIT_BASKET_PRODUCT_ID = 53445\n    \nprint(core.get_sales_by_day(start_date, end_date, [], FRUIT_BASKET_PRODUCT_ID))\n\n[]\n\n\n\ndef get_last_week_best_selling_products(shops=[]):\n    today = datetime.datetime.now().date()\n    start_date = (today - datetime.timedelta(days=7)).strftime(\"%Y-%m-%d\")\n    end_date = today.strftime(\"%Y-%m-%d\")    \n    return get_best_selling_products(start_date, end_date, shops)\n\n\ndef display_top_selling_products_per_column(shops, top_n=10):\n    data = {'rank': range(1, top_n+1)}\n    for shop in shops:\n        best_selling_products = get_last_week_best_selling_products(shops=[shop])\n        top_selling_products = best_selling_products[:top_n]\n        data[shop] = [product for [shop, product, amount] in top_selling_products]                \n    \n    def get_color_for_product(existing_bag, product_id):\n        def generate_color(product_name):\n            id = hash(product_name)\n            red = (id * 13) % 256\n            green = (id * 7) % 256\n            blue = (id * 19) % 256\n            return f\"#{red:02x}{green:02x}{blue:02x}99\"\n\n        if product_id not in existing_bag:\n            existing_bag[product_id] = generate_color(product_id)\n        return existing_bag[product_id]\n        \n    existing_bag = {}\n    df = pd.DataFrame(data)\n    df_style = df.style.applymap(lambda x: 'background-color: '+ get_color_for_product(existing_bag, x))\n    display(df_style)\n\n\ndef get_best_selling_products(start_date, end_date, shops=[]):\n    translation_dict = core.get_product_names()\n    query = \"\"\"\n    SELECT\n       v_shop.name AS shop_name, \n       v_product.name AS product_name, \n       SUM(v_product.price * v_pos_order_line.quantity) AS total_sales,\n       v_product.id AS product_id\n    FROM v_pos_order_line\n    LEFT JOIN v_product ON v_product.id = v_pos_order_line.product_id\n    LEFT JOIN v_pos_order ON v_pos_order.id = v_pos_order_line.order_id\n    LEFT JOIN v_pos_session ON v_pos_session.id = v_pos_order.session_id\n    LEFT JOIN v_pos ON v_pos.id = v_pos_session.pos_id\n    LEFT JOIN v_shop ON v_shop.id = v_pos.shop_id\n    WHERE v_pos_order.created_at BETWEEN '{}' AND '{}'\n    \"\"\".format(start_date, end_date)\n    \n    if len(shops) &gt; 0:\n        query += \"AND v_shop.name in ('{}')\".format(\"','\".join(shops))\n    \n    query += \"GROUP BY v_shop.id, v_shop.name, v_product.id, v_product.name ORDER BY total_sales DESC\" \n    return [[row[0], translation_dict.get(row[3],'None')+ f\"({str(row[3])})\", row[2]] for row in core.make_sql_query(query)]\n\n\nget_best_selling_products(start_date = '2022-01-01', end_date = '2022-01-31', shops = ['Woluwe'])\n\n[['Woluwe', 'PAVLOVA AUX FRUITS ROUGES JETABLE(36501)', Decimal('5555.60000')],\n ['Woluwe', 'BAR EPICE(50689)', Decimal('2605.98400')],\n ['Woluwe', 'POULET AU ROMARIN (18191)', Decimal('2463.51300')],\n ['Woluwe', 'SAUMON MI CUIT EPICE(53011)', Decimal('2291.96000')],\n ['Woluwe', 'CHAMPIGNONS DES BOIS SAUTES(51532)', Decimal('2194.29370')],\n ['Woluwe',\n  'SALADE GO GREEN SUCRINE / HARICOTS VERTS / COURGETTES / EDAMAME / AVOCATS(52986)',\n  Decimal('2154.18580')],\n ['Woluwe', 'DIVERS PIECE BALANCE(54437)', Decimal('2000.00000')],\n ['Woluwe',\n  'SCAMPIS / OIGNONS / TOMATES SECHEES(50615)',\n  Decimal('1930.3680')],\n ['Woluwe', 'THON ALBACORE EPICE CUIT(18440)', Decimal('1727.9400')],\n ['Woluwe',\n  \"FILET DE BOEUF / CROUTE D'HERBES / GRAINES DE MOUTARDE(40750)\",\n  Decimal('1713.5040000')],\n ['Woluwe', 'COQUELET CUIT + SAUCE COMPTOIR(55577)', Decimal('1592.10000')],\n ['Woluwe', 'POMMES DE TERRE AU PARMESAN(50645)', Decimal('1573.84500')],\n ['Woluwe', 'ASPERGE VERTE ET SUGAR SNAPS (40762)', Decimal('1565.45280')],\n ['Woluwe',\n  'BELLES DE FONTENAY / GROS SEL / ROMARIN(18602)',\n  Decimal('1477.25640')],\n ['Woluwe',\n  'HARICOTS VERTS / EDAMAME / OIGNONS(40728)',\n  Decimal('1411.16040')],\n ['Woluwe',\n  'CHICONS BRAISES / UNION SQUARE NUTS / OIGNONS(51524)',\n  Decimal('1373.39300')],\n ['Woluwe',\n  'JARDINIERE LEGUMES MARCHE / AIL / HERBES / CITRON(18521)',\n  Decimal('1365.93600')],\n ['Woluwe', 'GAMBAS GEANTES (50610)', Decimal('1347.0120')],\n ['Woluwe', 'CAROTTES, CELERI CORIANDRE(36719)', Decimal('1330.21200')],\n ['Woluwe', 'PUREE NATURE 400G(19281)', Decimal('1244.60000')],\n ['Woluwe', 'SAUCE COMPTOIR CHAUDE(38021)', Decimal('1223.97600')],\n ['Woluwe', 'LEGUMES PROVENCAUX(18517)', Decimal('1176.59100')],\n ['Woluwe',\n  'TARTARE DE SAUMON / SESAME NOIRE / WAKAME - 200G(43712)',\n  Decimal('1144.25000')],\n ['Woluwe', 'LOTTE EPICEE(51181)', Decimal('1122.35400')],\n ['Woluwe',\n  'TIRADITO DE SAUMON / SESAME / PIMENTS(53784)',\n  Decimal('1048.83880')],\n ['Woluwe', 'CABILLAUD EPICE(51837)', Decimal('953.21600')],\n ['Woluwe', 'MOUSSE CHOCOLAT 110G(19772)', Decimal('936.20000')],\n ['Woluwe',\n  'TERRINE MILLEFEUILLE DE TRUITE / SAUMON (Tranche)(53145)',\n  Decimal('902.70000')],\n ['Woluwe', 'WATERZOOI DE POULET(51344)', Decimal('893.02960')],\n ['Woluwe', 'BOITE 4PCS CUPCAKES(19671)', Decimal('892.80000')],\n ['Woluwe',\n  \"PUREE A L'HUILE D'OLIVE / BASILIC 400G(19285)\",\n  Decimal('861.40000')],\n ['Woluwe', 'BROCHETTE POISSON EPICEE(18323)', Decimal('836.7024')],\n ['Woluwe',\n  \"FILET DE DINDE FARCI (HACHE 100% VOLAILLE) / FRUITS D'HIVER (54441)\",\n  Decimal('826.27200')],\n ['Woluwe', 'BICHE FILET CUIT(18244)', Decimal('814.50180')],\n ['Woluwe',\n  'COURGETTES FARCIES / COULIS DE TOMATES(51394)',\n  Decimal('777.88620')],\n ['Woluwe', 'BOULETTES SAUCE TOMATE(52751)', Decimal('758.0414400')],\n ['Woluwe', 'PUREE NATURE(55798)', Decimal('719.36900')],\n ['Woluwe', 'PLAT TOO GOOD TO GO(51672)', Decimal('718.5600000')],\n ['Woluwe', 'BOX 5 PLATS (S4)(44080)', Decimal('690.00000')],\n ['Woluwe', 'OSSO BUCO DE VEAU CLASSICO(51285)', Decimal('680.19040')],\n ['Woluwe', 'PAIN DE VIANDE NATURE(51722)', Decimal('656.77500')],\n ['Woluwe', 'SAUCE BOLOGNAISE(51287)', Decimal('643.03200')],\n ['Woluwe', 'BUFFET DOLCE FARNIENTE (prix/pers)(19531)', Decimal('630.00000')],\n ['Woluwe', 'PLAT DU JOUR 9,90(19326)', Decimal('584.10000')],\n ['Woluwe', 'MAGRET DE CANARD CUIT(18218)', Decimal('583.22920')],\n ['Woluwe',\n  'PAIN DE VIANDE AUX HERBES / TOMATES SECHEES(51698)',\n  Decimal('575.08920')],\n ['Woluwe', 'SPAGHETTI BOLOGNAISE 550G(19312)', Decimal('568.80000')],\n ['Woluwe', 'COQUELET MIEL 2PCS(20181)', Decimal('556.80000')],\n ['Woluwe', 'TIRAMISU SPECULOOS 110G(19777)', Decimal('551.80000')],\n ['Woluwe', 'RADIATORI JAMBON FROMAGE 400G(53690)', Decimal('543.00000')],\n ['Woluwe', 'AUBERGINES FARCIES A LA LIBANAISE(55576)', Decimal('541.48500')],\n ['Woluwe', 'None(53502)', Decimal('533.2000000')],\n ['Woluwe',\n  'PATES ORZO / TOMATES SECHEES / FETA / AMANDES / OLIVES / CITRON / KALE(52979)',\n  Decimal('527.52700')],\n ['Woluwe', 'FAMILY FIT 40 EURO(19377)', Decimal('520.00000')],\n ['Woluwe', 'SAUCE BOLOGNAISE(51288)', Decimal('516.59400')],\n ['Woluwe', 'HACHIS PARMENTIER(17959)', Decimal('503.04240')],\n ['Woluwe',\n  'CANNELLONI BOLOGNAISE / TOMATES / CAROTTES / FENOUIL / OIGNONS(51539)',\n  Decimal('492.60900')],\n ['Woluwe', 'SAUMON FUME TRANCHE MAIN (250gr)(38138)', Decimal('473.48000')],\n ['Woluwe',\n  'CAILLE FARCIE DESOSSEE / HACHE 100% VOLAILLE / HERBES (55411)',\n  Decimal('462.80000')],\n ['Woluwe',\n  'SAUMON FUME / 12 BLINIS /  CREME CARDAMOME(53358)',\n  Decimal('462.40000')],\n ['Woluwe', 'VOL-AU-VENT(51185)', Decimal('462.08220')],\n ['Woluwe', 'PANNA COTTA(55849)', Decimal('455.70000')],\n ['Woluwe',\n  'LASAGNE / SAUCE BOLOGNAISE (HACHE 100% VOLAILLE) / EMMENTAL(51292)',\n  Decimal('452.65220')],\n ['Woluwe', 'BOL SALADE THAI AUX SCAMPIS 400G(19082)', Decimal('449.0000000')],\n ['Woluwe', 'TIRAMISU CLASSIQUE 110G(19783)', Decimal('446.40000')],\n ['Woluwe',\n  'CAILLE FARCIE DESOSSEE / HACHE 100% VOLAILLE / TRUFFEE (19161)',\n  Decimal('445.00000')],\n ['Woluwe',\n  'ESCALOPE DE DINDE / STRACCIATELLA DI BUFALA / SAUCE TOMATE AU BASILIC (51731)',\n  Decimal('440.46720')],\n ['Woluwe',\n  'TARTARE DE DAURADE / SESAME NOIR / WAKAME 200G(53552)',\n  Decimal('438.55000')],\n ['Woluwe', 'POTAGE DE POISSONS (1L)(38562)', Decimal('434.00000')],\n ['Woluwe', 'SALADE CREVETTE PDT HARICOT 400G(19017)', Decimal('428.2200000')],\n ['Woluwe', 'PLAT DU JOUR 10.9(19322)', Decimal('425.10000')],\n ['Woluwe',\n  'TABOULE LIBANAIS / TOMATES / HERBES VERTES(52962)',\n  Decimal('421.15360')],\n ['Woluwe', 'BISQUE HOMARD 1L(19565)', Decimal('420.0000000')],\n ['Woluwe',\n  'DINDE ESCALOPE PANEE SAUCE + COULIS(18249)',\n  Decimal('411.50200')],\n ['Woluwe', 'PUREE BASILIC(55790)', Decimal('410.05000')],\n ['Woluwe',\n  'TORTELLONI RICOTTA / EPINARD / CHAMPIGNONS DES BOIS(56151)',\n  Decimal('409.6898000')],\n ['Woluwe',\n  'BONBONS TRUFFES SAUCE TARTUFATA 1PERS.(53692)',\n  Decimal('408.80000')],\n ['Woluwe', 'NOUILLE SAUTEE LEGUME CROQUANT(52478)', Decimal('405.8984800')],\n ['Woluwe', 'POMMES  JONAGOLD / AIRELLES(50660)', Decimal('393.85500')],\n ['Woluwe', 'BOULETTES SAUCE TOMATE(52753)', Decimal('387.7468200')],\n ['Woluwe',\n  'GIRASOLE NOIR AUX CEPES ET TRUFFES / SAUCE TARTUFATA(55822)',\n  Decimal('379.8144000')],\n ['Woluwe', 'CHAMPAGNE(53608)', Decimal('379.6800000')],\n ['Woluwe', 'WATERZOOI POISSON(51330)', Decimal('375.36000')],\n ['Woluwe',\n  'LASAGNE / SAUCE BOLOGNAISE (HACHE 100% VOLAILLE) / EMMENTAL(51290)',\n  Decimal('372.29660')],\n ['Woluwe', '7/7 WHOLE WEEK (1PERS)(19385)', Decimal('372.00000')],\n ['Woluwe', 'SAUMON FUME TRANCHE MAIN (100gr)(38137)', Decimal('371.80000')],\n ['Woluwe', 'TARTE MOELLEUX CHOCOLAT 4PERS(19724)', Decimal('371.80000')],\n ['Woluwe', 'OSSO BUCO DE VEAU CLASSICO(51282)', Decimal('368.70620')],\n ['Woluwe',\n  'VELOUTE TOMATES ET MINI BOULETTES 1L(20201)',\n  Decimal('368.0000000')],\n ['Woluwe', 'TABOULE(52911)', Decimal('366.77340')],\n ['Woluwe',\n  'SALADE TIKKA AU POULET / CONCOMBRE / VINAIGRETTE / WASABI (52973)',\n  Decimal('364.21280')],\n ['Woluwe', 'VOL-AU-VENT(51184)', Decimal('362.52600')],\n ['Woluwe', 'COQUELET AU MIEL CUIT (1 PIECE)(19155)', Decimal('356.70000')],\n ['Woluwe', 'VELOUTE CHAMPIGNONS DES BOIS 1L(38203)', Decimal('351.0000000')],\n ['Woluwe', 'CHICON AU GRATIN(53082)', Decimal('350.48840')],\n ['Woluwe', 'DOS DE CABILLAUD EPICE(53764)', Decimal('349.92000')],\n ['Woluwe', 'NAVARIN AGNEAU ET PDT 450G(36596)', Decimal('349.30000')],\n ['Woluwe',\n  'SALADE DE LENTILLES VERTES / HERBES VERTES(18053)',\n  Decimal('346.41880')],\n ['Woluwe',\n  'POTAGE AUX CAROTTES / LAIT DE COCO (1L)(38559)',\n  Decimal('344.0000000')],\n ['Woluwe', 'PUREE TRUFFEE 400G(19286)', Decimal('339.70000')],\n ['Woluwe',\n  \"BURGER D'AUBERGINES / COULIS DE TOMATES(51386)\",\n  Decimal('336.04200')],\n ['Woluwe', 'POTAGE MINESTRONE ROUGE (1L)(38588)', Decimal('336.0000000')],\n ['Woluwe', 'COQUELET LAQUE (1PCE)(40466)', Decimal('330.60000')],\n ['Woluwe', 'TERRINE HOMARD LEGUME(18824)', Decimal('329.99280')],\n ['Woluwe',\n  'TAJINE AGNEAU / LEGUMES DE SAISON / ABRICOTS(51378)',\n  Decimal('327.91680')],\n ['Woluwe',\n  'LEMONGRASS / RAISINS / CORIANDRE / CITRONNELLE(52757)',\n  Decimal('326.10060')],\n ['Woluwe',\n  'TABOULE LIBANAIS / TOMATES / HERBES VERTES(52961)',\n  Decimal('325.45660')],\n ['Woluwe', 'GRATIN DAUPHINOIS (2 PERS.)(19288)', Decimal('322.40000')],\n ['Woluwe',\n  'ESCALOPE DE DINDE ESTRAGON JEUNE CAROTTE ET OIGNON(51202)',\n  Decimal('321.86880')],\n ['Woluwe', 'CHOUCROUTE GARNIE (34616)', Decimal('318.33840')],\n ['Woluwe', 'MINI CHICKPEA BALLS ET HOUMOUS(39120)', Decimal('315.0000000')],\n ['Woluwe',\n  'LEMONGRASS / RAISINS / CORIANDRE / CITRONNELLE(52756)',\n  Decimal('313.05960')],\n ['Woluwe', 'MOUSSE CHOCOLAT 85G(19769)', Decimal('309.60000')],\n ['Woluwe', 'LINGUINI ROQUETTE TOMATE SECHEE(38619)', Decimal('308.9962600')],\n ['Woluwe', 'VELOUTE POTIRON CREME 1L(19561)', Decimal('304.0000000')],\n ['Woluwe', 'CHICON GRATIN ET PUREE(19273)', Decimal('303.36000')],\n ['Woluwe', 'MOUSSAKA(51395)', Decimal('302.36220')],\n ['Woluwe', 'MAGRET DE CANARD EN SAUCE(40752)', Decimal('296.54800')],\n ['Woluwe',\n  'CHICKEN FINGERS / SAUCE TIKKA MASALA(51528)',\n  Decimal('293.67060')],\n ['Woluwe', 'CANNELE DE BORDEAUX - 4PCS(32525)', Decimal('289.9400000')],\n ['Woluwe', 'POTAGE COURGETTE ET CRESSON 1L(19568)', Decimal('288.0000000')],\n ['Woluwe',\n  'POTIRONS CARAMELISES AU MIEL / SOJA / OIGNONS / CAROTTES / AIRELLES(50678)',\n  Decimal('287.23500')],\n ['Woluwe', 'LINGUINI CHAMPIGNONS DES BOIS 450G(50022)', Decimal('285.12000')],\n ['Woluwe', 'WATERZOOI DE POULET ET PDT 450G(36601)', Decimal('284.40000')],\n ['Woluwe', 'CHICON AU GRATIN(53083)', Decimal('280.07940')],\n ['Woluwe', 'POTAGE THAI POULET 1L(38589)', Decimal('280.0000000')],\n ['Woluwe',\n  'MINI BOULETTES THAI CURRY CORIANDRE(51353)',\n  Decimal('279.0346000')],\n ['Woluwe', 'SALADE POULET AUX HERBES 400G(19104)', Decimal('278.3800000')],\n ['Woluwe',\n  'SALADE DE QUINOA / POIS CHICHES / HARICOTS ROUGES / AZUKI / TOMATES SECHEES  / KALE(56143)',\n  Decimal('277.41280')],\n ['Woluwe', 'SAUCE BOLOGNAISE(51289)', Decimal('276.82200')],\n ['Woluwe', 'GUILLAUME CHARDONNAY 75CL(51369)', Decimal('275.65000')],\n ['Woluwe',\n  '4 - 12P FILET DE SOLE LIMANDE, SAUCE VERTE, CHAMPIGNONS ET ÉPINARDS, STOEMP AUX POIREAUX. (GF)(44000)',\n  Decimal('274.92000')],\n ['Woluwe',\n  'POTAGE AUX POIREAUX ET NOIX DE MUSCADE 1L(50725)',\n  Decimal('272.0000000')],\n ['Woluwe',\n  'PETIT SABLE PUR BEURRE PARMESAN ET ROMARIN(34182)',\n  Decimal('272.0000')],\n ['Woluwe', 'PLAT DU JOUR 12.90(19320)', Decimal('270.90000')],\n ['Woluwe',\n  'VELOUTE DE PATATES DOUCES AU LAIT DE COCO 1L(54395)',\n  Decimal('270.00000')],\n ['Woluwe', '5/7 FIVE A WEEK (1PERS)(38227)', Decimal('269.60000')],\n ['Woluwe', 'AUBERGINES À LA PARMIGIANA(51560)', Decimal('268.9128')],\n ['Woluwe', 'TARTE FROMAGE SPECULOOS PORTION(19705)', Decimal('268.45000')],\n ['Woluwe',\n  'PATATES DOUCES / HUILE ITALIENNE / POIS CHICHES / EPICES CHAI / PERSIL(50727)',\n  Decimal('266.79900')],\n ['Woluwe', 'JAMBON A L OS LAQUE(55641)', Decimal('265.47840')],\n ['Woluwe', 'GRATIN DAUPHINOIS(18599)', Decimal('265.01900')],\n ['Woluwe', 'POTAGE COURGETTE EPINARD 1L(56117)', Decimal('264.00000')],\n ['Woluwe',\n  'PAPPARDELLE CHAMPIGNONS DES BOIS / TARTUFATA ET PARMESAN(56149)',\n  Decimal('262.99380')],\n ['Woluwe', 'POIRES ROTIES AUX EPICES(54418)', Decimal('259.53200')],\n ['Woluwe',\n  'CHICKEN FINGERS / SAUCE TIKKA MASALA(51529)',\n  Decimal('259.40820')],\n ['Woluwe',\n  'FILET DE PINTADEAU / SAUCE CREME AUX CHAMPIGNONS DES BOIS / MARJOLAINE(52236)',\n  Decimal('259.35700')],\n ['Woluwe',\n  'TARTARE DE SAUMON / SESAME NOIRE / WAKAME 400G (Gluten Free)(55885)',\n  Decimal('258.70000')],\n ['Woluwe', 'VELOUTE DE TOMATES / BASILIC 1L(38766)', Decimal('256.0000000')],\n ['Woluwe', 'POTAGE LEGUMES DU MARCHE 1L(19545)', Decimal('256.0000000')],\n ['Woluwe',\n  'QUICKLUNCHL SPAGHETTI BOLOGNAISE 410g(19308)',\n  Decimal('253.45000')],\n ['Woluwe', 'ACC 1 : GRATIN 600G(55422)', Decimal('251.10000')],\n ['Woluwe', 'LASAGNE VEGE(51421)', Decimal('250.5642000')],\n ['Woluwe',\n  'RIZ SAUVAGE / AMANDES / FRUITS SECS / CUMIN / JEUNES CAROTTES GRILLEES(55631)',\n  Decimal('243.04000')],\n ['Woluwe', 'PUREE DE CELERI-RAVE (400g)(19282)', Decimal('241.80000')],\n ['Woluwe', 'MOUSSE CHOCOLAT 400G(19773)', Decimal('241.5000')],\n ['Woluwe',\n  'SALADE DE LENTILLES VERTES / HERBES VERTES(54331)',\n  Decimal('241.47760')],\n ['Woluwe', 'VELOUTE DE CHICONS(51780)', Decimal('240.00000')],\n ['Woluwe', 'PLAT DU JOUR 9.9 COMPTOIR(34712)', Decimal('237.6000')],\n ['Woluwe', 'TARTE MOELLEUX CHOCOLAT PORTION(19723)', Decimal('236.60000')],\n ['Woluwe',\n  'FILET DE PINTADEAU / SAUCE CREME AUX CHAMPIGNONS DES BOIS / MARJOLAINE(52237)',\n  Decimal('236.05200')],\n ['Woluwe',\n  'CHICKEN FINGERS / SAUCE TIKKA MASALA(55499)',\n  Decimal('231.07200')],\n ['Woluwe', 'SUSHI GRAND(19458)', Decimal('231.0000000')],\n ['Woluwe', 'CHOUCROUTE ET PUREE(19792)', Decimal('227.52000')],\n ['Woluwe', 'VOL AU VENT PUREE(19301)', Decimal('227.52000')],\n ['Woluwe',\n  'ESCALOPE DE POULET / MISO / CHAMPIGNONS(54417)',\n  Decimal('225.54420')],\n ['Woluwe', 'LINGUINI ZUCHINE AL LIMONE 500G(49998)', Decimal('221.00000')],\n ['Woluwe', 'TARTE GALETTE DES ROIS 4PERS(34088)', Decimal('219.70000')],\n ['Woluwe',\n  'CHICKEN FINGERS / SAUCE TIKKA MASALA(51527)',\n  Decimal('218.47260')],\n ['Woluwe',\n  'CANNELLONI RICOTTA ET EPINARDS / SAUCE TOMATES / BASILIC(51538)',\n  Decimal('218.43640')],\n ['Woluwe',\n  '3 - 14P HACHIS PARMENTIER (100% HACHÉ DE VOLAILLE, ÉPINARDS, TOMATES,..)(44009)',\n  Decimal('218.04000')],\n ['Woluwe',\n  '1 - 11P MAFALDE, SAUCE TARTUFATA, CHAMPIGNONS DES BOIS, OIGNONS ET PARMESAN(43949)',\n  Decimal('217.58000')],\n ['Woluwe',\n  '1 - 12P FILET DE DAURADE EN CROÛTE D’ÉPICES, SAUCE VERTE, BUTTERNUT GRILLÉ ET NOIX DE CAJOU, STOEMP AUX POIREAUX(43953)',\n  Decimal('217.58000')],\n ['Woluwe', 'POUILLY FUME 75CL(50788)', Decimal('216.90000')],\n ['Woluwe',\n  'ACC 1 : GRATIN / CELERI RAVE POTIRON / POMME AIRELLES / CHICON CONFIT(18850)',\n  Decimal('213.60000')],\n ['Woluwe',\n  'PATES ORZO / TOMATES SECHEES / FETA / AMANDES / OLIVES / CITRON / KALE(52980)',\n  Decimal('213.09400')],\n ['Woluwe',\n  'PUREE AUX CAROTTES / EPICES RAS EL HANOUT 400G(19284)',\n  Decimal('212.40000')],\n ['Woluwe',\n  'VELOUTÉ DE POIVRONS DOUX / MASCARPONE (50736)',\n  Decimal('208.00000')],\n ['Woluwe', 'JAMBONNEAU MIEL / MOUATDE (18228)', Decimal('207.37080')],\n ['Woluwe',\n  'SUPREME DE POULET / STRACCIATELLA DI BUFALA / CHAMPIGNONS / ESTRAGON(55643)',\n  Decimal('206.89920')],\n ['Woluwe',\n  'LES 3 COQUILLES SAINT JACQUES GRILLEES / SAUCE VERTE AUX COURGETTES / GROS CRESSON(19595)',\n  Decimal('206.40000')],\n ['Woluwe', 'MINI-SATE DE POULET + SAUCE(20018)', Decimal('205.8000')],\n ['Woluwe', 'PETIT JAMBONNEAU LAQUE SESAMISO(55640)', Decimal('203.75760')],\n ['Woluwe', 'GUILLAUME MERLOT 75CL(51368)', Decimal('201.15000')],\n ['Woluwe', 'CAROTTE POTIRON AIRELLE(18490)', Decimal('200.81100')],\n ['Woluwe',\n  'TARTE ABRICOTS ROTIS / CREME DE NOISETTES  (PORTION)(55484)',\n  Decimal('200.20000')],\n ['Woluwe', 'POTAGE BROCOLI ET THYM 1L(19553)', Decimal('200.00000')],\n ['Woluwe', 'POTAGE CHAMPIGNONS DE PARIS 1L(38566)', Decimal('200.00000')],\n ['Woluwe',\n  'SALADE COLESLAW : CHOU BLANC / CAROTTES / JEUNES OIGNONS / VINAIGRETTE YAOURT(52967)',\n  Decimal('199.29280')],\n ['Woluwe',\n  '2 - 13P JAMBONNEAU EN HOCHEPOT DE LÉGUMES D’HIVER ET POMMES DE TERRE. (GF)(43992)',\n  Decimal('199.08000')],\n ['Woluwe',\n  '2 - 1P FILET DE SAUMON LAQUÉ , NOUILLES SAUTÉES, POIREAUX GRILLÉS À L’HUILE ET LAURIER ET CORIANDRE.(43970)',\n  Decimal('199.08000')],\n ['Woluwe', 'SASHIMI 16 PCS(19464)', Decimal('198.0000000')],\n ['Woluwe', 'BISQUE HOMARD 1/2L(19564)', Decimal('196.00000')],\n ['Woluwe', 'RIZ BASMATI NATURE 400G(19272)', Decimal('193.8000000')],\n ['Woluwe',\n  'RAVIOLE OUVERTE DE GAMBAS / LAIT DE COCO / DUXELLES DE PETITS LÉGUMES(53160)',\n  Decimal('193.70000')],\n ['Woluwe', 'MINI KEFTA(51349)', Decimal('192.9330000')],\n ['Woluwe', 'REPAS A TABLE(19391)', Decimal('192.00000')],\n ['Woluwe',\n  'LASAGNE / SAUCE BOLOGNAISE (HACHE 100% VOLAILLE) / EMMENTAL(51291)',\n  Decimal('191.87220')],\n ['Woluwe',\n  '1 - 12P FILET DE SOLE LIMANDE, SAUCE À LA MOUTARDE DOUCE (CRÈME 5%) CHAMPIGNONS SAUTÉS ET ÉPINARDS AUX OIGNONS, STOEMP AUX POIREAUX. (GF)(43854)',\n  Decimal('189.60000')],\n ['Woluwe',\n  'CHICKEN FINGERS TIKKA + ACCOMPAGNEMENT (19381)',\n  Decimal('189.60000')],\n ['Woluwe',\n  '1 - 1P FILET D’AIGLEFIN, SAUCE AUX POIVRONS DOUX, BLETTES AUX OIGNONS, PUREE DE CELERI-RAVE(43927)',\n  Decimal('187.91000')],\n ['Woluwe',\n  'COMPOTE DE POMMES / AIRELLES / FIGUES / RAISINS / ABRICOTS (400g)(19694)',\n  Decimal('186.30000')],\n ['Woluwe', 'SALADE FREEKEH POTIRON AIRELLE(56141)', Decimal('183.88580')],\n ['Woluwe', 'CHAMPAGNE(53609)', Decimal('182.2500000')],\n ['Woluwe', 'RATATOUILLE LEGUME(51441)', Decimal('181.85700')],\n ['Woluwe',\n  'FENOUIL GRILLE / OIGNONS / LAURIER / CORIANDRE / GRAINES DE MOUTARDE(36796)',\n  Decimal('180.68700')],\n ['Woluwe',\n  'CELERI-RAVE GRILLE / OIGNONS / POTIRON(49421)',\n  Decimal('180.57000')],\n ['Woluwe', 'SALADE THAI(52963)', Decimal('180.28360')],\n ['Woluwe', \"NAVARIN D'AGNEAU(51381)\", Decimal('178.73280')],\n ['Woluwe',\n  'ZAKOUSKIS RONDS : (CREVETTES / FROMAGE / CHAMPIGNONS)(19967)',\n  Decimal('178.08000')],\n ['Woluwe', 'MOUSSE CHOCOLAT DUO(51237)', Decimal('176.9000000')],\n ['Woluwe',\n  'PAELLA VEGAN AUX LEGUMES DE SAISON 500G(54552)',\n  Decimal('176.80000')],\n ['Woluwe',\n  'CAILLE FARCIE AU FOIE GRAS (DESOSSÉE / 100% HACHÉ DE VOLAILLE) / JUS BRUN AU THYM(40535)',\n  Decimal('176.40000')],\n ['Woluwe',\n  \"FILET DE DINDE DE FERME / FARCE AUX FRUITS D'HIVER CUIT / SAUSE LÉGÈREMENT CRÉMÉE(50392)\",\n  Decimal('175.50000')],\n ['Woluwe', 'MISE EN PLACE/SUPPORT FORFAIT(51140)', Decimal('175.45000')],\n ['Woluwe', 'PLAT DU JOUR 15,90(19323)', Decimal('174.90000')],\n ['Woluwe',\n  'SARRASIN / HARICOTS ROUGES / POTIRON / SESAME ET PERSIL(56137)',\n  Decimal('173.73020')],\n ['Woluwe', 'PANNA COTTA(55850)', Decimal('173.60000')],\n ['Woluwe',\n  'FEUILLETE AU FROMAGE DE CHEVRE (PESTO ET FIGUES) / GARNITURE DE SAISON(19493)',\n  Decimal('172.80000')],\n ['Woluwe', 'POTAGE MINESTRONE ROUGE (1/2 L)(19588)', Decimal('172.0000000')],\n ['Woluwe', 'SPUMANTE PINOT ROSE 75CL(55951)', Decimal('170.55000')],\n ['Woluwe', 'TARTE FRUIT ROUGE MERINGUE 4PERS(19687)', Decimal('169.00000')],\n ['Woluwe',\n  '2 - 6P CHICONS AU GRATIN,  PURÉE DE POMMES DE TERRE(43993)',\n  Decimal('168.13000')],\n ['Woluwe', 'POTAGE CHOU FLEUR CURRY DOUX 1L(51712)', Decimal('168.0000000')],\n ['Woluwe', 'PUREE POIREAUX 400G(19283)', Decimal('167.40000')],\n ['Woluwe',\n  'FILET DE PINTADEAU SAUCE MOUTARDE COCO MASSALA(38233)',\n  Decimal('166.23360')],\n ['Woluwe',\n  'BATONNET POULET GINGEMBRE/SESAME CUIT(18157)',\n  Decimal('165.68760')],\n ['Woluwe', 'COMPOTE POMME 400G(19292)', Decimal('164.1500000')],\n ['Woluwe', 'GNOCCHI / CREME PARMESAN / BASILIC(53566)', Decimal('163.36320')],\n ['Woluwe', \"NAVARIN D'AGNEAU(51382)\", Decimal('163.12320')],\n ['Woluwe', 'TIRAMISU CLASSIQUE 400G(19785)', Decimal('162.50000')],\n ['Woluwe',\n  '1 - 10P BOULETTE DE VOLAILLE, JUS BRUN À LA MOUTARDE TIERENTYN, POTIRON CARAMÉLISÉ AU MIEL ET AU SOJA, OIGNONS ET AIRELLES, PURÉE DE CÉLERI-RAVE(43852)',\n  Decimal('161.16000')],\n ['Woluwe',\n  '1 - 3P SUPRÊME DE POULET AUX CHICONS ET STRACCIATELLA, CHICONS ET OIGNONS AU FOUR, PURÉE DE POMMES DE TERRE. (GF)(43845)',\n  Decimal('161.16000')],\n ['Woluwe',\n  '2 - 7P PAËLLA VÉGAN AUX LÉGUMES DE SAISON. (GF)(V)(43980)',\n  Decimal('161.16000')],\n ['Woluwe',\n  '1 - 14P HACHIS PARMENTIER (100% HACHÉ DE VOLAILLE, ÉPINARDS, TOMATES,..)(43856)',\n  Decimal('161.16000')],\n ['Woluwe',\n  '2 - 8P SCAMPIS SAUCE PUTTANESCA, CAROTTES ET POIVRONS CONFITS, LINGUINES AUX ÉPICES.(43982)',\n  Decimal('161.16000')],\n ['Woluwe', 'VELOUTE CELERI RAVE 1L(19539)', Decimal('160.0000000')],\n ['Woluwe', 'MENU WINTERWONDERLAND(19434)', Decimal('159.45000')],\n ['Woluwe', 'None(53706)', Decimal('158.70000')],\n ['Woluwe',\n  'PUREE AUX CAROTTES / EPICES RAZ EL HANOUT(55792)',\n  Decimal('158.68050')],\n ['Woluwe', '(56140)', Decimal('157.28160')],\n ['Woluwe',\n  'RISOTTO AUX FEUILLES DE CITRONNIER 400G(19274)',\n  Decimal('155.1000000')],\n ['Woluwe', 'SUSHI PETIT(19459)', Decimal('154.5000000')],\n ['Woluwe',\n  'ZAKOUSKIS CARRES : (CROQUES / MINI PIZZAS / QUICHES)(19966)',\n  Decimal('152.64000')],\n ['Woluwe',\n  '2 - 12P FILET DE COLIN, COULIS DE BETTERAVE ROUGE, COURGETTES RÔTIES, RIZ SAUVAGE, AMANDES ET POIS CHICHES. (GF)(43990)',\n  Decimal('151.68000')],\n ['Woluwe', 'BOULETTE NATURE + ACC (prix/pers)(36742)', Decimal('151.68000')],\n ['Woluwe',\n  '4 - 14P VOL AU VENT CHIKKA, LÉGUMES PROVENÇAUX, RIZ BASMATI ET PERSILLADE. (V)(44006)',\n  Decimal('151.68000')],\n ['Woluwe',\n  'DINDE DE FERME FARCIE CRUE (PRIX/PERS.)(50238)',\n  Decimal('148.50000')],\n ['Woluwe',\n  '1 - 5P SCAMPIS, RISOTTO DE SARRASIN AUX CHAMPIGNONS DES BOIS, POTIRONS, OIGNONS ET HERBES VERTES(43934)',\n  Decimal('148.35000')],\n ['Woluwe',\n  '1 - 7P FILET DE SAUMON LAQUE, POIREAUX ET PETITS POIS À L’ÉCHALOTE, RIZ BASMATI AUX POIS CHICHES ET RAISINS(43941)',\n  Decimal('148.35000')],\n ['Woluwe',\n  'VERRINE APERO MIX (BTE - 4PCES) - HORS CAUTION(20011)',\n  Decimal('147.20000')],\n ['Woluwe', \"ROGAN JOSH D'AGNEAU(54385)\", Decimal('146.70720')],\n ['Woluwe', 'MERVEILLEUX AU CHOCOLAT 110G(51176)', Decimal('144.40000')],\n ['Woluwe',\n  'POTAGE CHOU FLEUR AU PERSIL PLAT 1 L(52789)',\n  Decimal('144.0000000')],\n ['Woluwe', 'TERRINE DE CANARD / FOIE GRAS(55584)', Decimal('143.75920')],\n ['Woluwe',\n  'DELUXE ULTIMATE PARTY (prix/ pers.)(52273)',\n  Decimal('143.00000')],\n ['Woluwe', 'RIZ CONDE AUX ABRICOTS 150G(19695)', Decimal('142.60000')],\n ['Woluwe',\n  '2 - 11P BOULETTE DE HACHÉ DE VOLAILLE, JUS DE CUISSON, SALSIFIS ET OIGNONS GRILLÉS, PURÉE DE CAROTTES RAS EL HANOUT(43989)',\n  Decimal('142.20000')],\n ['Woluwe',\n  'LES 3 COQUILLES ST JACQUES / SAUCE CRESSON / GROS CRESSON(44063)',\n  Decimal('141.90000')],\n ['Woluwe',\n  'FILET DE PINTADEAU / STRACCIATELLA / SAUCE CREME AUX CHAMPIGNONS DES BOIS / MARJOLAINE(56292)',\n  Decimal('141.70000')],\n ['Woluwe', 'CAUTION PLATEAU MELAMINE(19947)', Decimal('140.00000')],\n ['Woluwe', 'COQUELET ESTRAGON 2PCS(20180)', Decimal('139.20000')],\n ['Woluwe',\n  'ZAKOUSKIS VEGETARIENS : (FROMAGE BLEU / NOIX - MISO / CHICONS - CHEVRE / SESAME)(53147)',\n  Decimal('135.68000')],\n ['Woluwe', 'POMMES  JONAGOLD / AIRELLES(51871)', Decimal('135.23440')],\n ['Woluwe', 'TARTE NOIX DE PECAN 4PERS(20190)', Decimal('135.20000')],\n ['Woluwe', 'PLAT DU JOUR 8.90(19324)', Decimal('133.50000')],\n ['Woluwe',\n  '4 - 11P HAMBURGER DE POIS CHICHES ET DE QUINOA, CURRY DE LÉGUMES AUX ÉPINARDS, ORZO. (V)(43999)',\n  Decimal('132.72000')],\n ['Woluwe', 'COQUELET ESTRAGON 1PCE(20200)', Decimal('130.50000')],\n ['Woluwe', '5/7 FIVE A WEEK (2PERS)(38408)', Decimal('130.00000')],\n ['Woluwe', 'SALADE POULET SURIMI 150G(53500)', Decimal('129.85000')],\n ['Woluwe',\n  '2 - 2P FILET DE COQ AU VIN, FENOUIL ET POMMES GRILLES, POMMES DE TERRE AU ROMARIN(43984)',\n  Decimal('128.57000')],\n ['Woluwe', 'POTAGE TOM KHA KAI LEGUMES 1L(38591)', Decimal('128.0000000')],\n ['Woluwe',\n  'SUPREME DE POULET CUIT MISO/CACAHUETE/CITRON(54469)',\n  Decimal('127.12320')],\n ['Woluwe', 'TRE DI TRE 75CL(55946)', Decimal('126.50000')],\n ['Woluwe', 'PUREE LARDON ET PERSIL PLAT 400G(40556)', Decimal('126.40000')],\n ['Woluwe',\n  'TARTARE DE DAURADE / SESAME NOIR / WAKAME 400G(55884)',\n  Decimal('125.30000')],\n ['Woluwe', 'MERVEILLEUX SPECULOOS(54433)', Decimal('124.00000')],\n ['Woluwe',\n  '2 - 9P  BŒUF MASSAMAN, CAROTTES ET OIGNONS AU FOUR, RIZ BASMATI AUX HERBES. (GF)(43985)',\n  Decimal('123.24000')],\n ['Woluwe', 'SPAGHETTI VEGETARIEN 550G(19311)', Decimal('123.24000')],\n ['Woluwe',\n  '4 - 13P AUBERGINE AU CHEDDAR (PLANT BASED), FAÇON PARMIGIANA, POIS CHICHES GRILLÉS AUX ÉPICES, SEMOULE AUX HERBES. (V)(44001)',\n  Decimal('123.24000')],\n ['Woluwe', 'PLAT DU JOUR 14,90(19318)', Decimal('119.20000')],\n ['Woluwe', 'VENTE COMPTOIR(34212)', Decimal('119.0000')],\n ['Woluwe',\n  \"2 - 5P SCAMPIS ALL' ARRABBIATA, COURGETTES ET PETITS POIS, RADIATORI EN PERSILLADE AU CITRON(43991)\",\n  Decimal('118.68000')],\n ['Woluwe',\n  'GNOCCHI / CHAMPIGNONS DES BOIS / TARTUFATA ET CREME DE PARMESAN(56098)',\n  Decimal('118.67700')],\n ['Woluwe', 'PAVLOVA AUX FRUITS ROUGES EN VASE(19842)', Decimal('115.60000')],\n ['Woluwe', 'CAILLE FARCIE TOMATE OIGNON(38831)', Decimal('115.2000000')],\n ['Woluwe', 'FROMAGE BATONNET 150G(19743)', Decimal('115.2000')],\n ['Woluwe',\n  'TURDUCKEN (TURKEY, DUCK, CHICKEN) / FARCE TRUFFÉE / SAUCE LÉGÈREMENT CRÉMÉE(18898)',\n  Decimal('113.85000')],\n ['Woluwe',\n  '2 - 6P SUPRÊME DE POULET, SAUCE AU MISO ET CACAHUÈTES, CHICONS RÔTIS AU FOUR, POMMES DE TERRE AU GROS SEL ET ROMARIN(43978)',\n  Decimal('113.76000')],\n ['Woluwe',\n  '1 - 9P SCAMPIS, RISOTTO DE SARRASIN AUX CHAMPIGNONS, COURGETTES, OIGNONS ET HERBES VERTES. (GF)(43851)',\n  Decimal('113.76000')],\n ['Woluwe',\n  '4 - 8P FILET DE DAURADE, SAUCE AU VIN BLANC, CAROTTES ET PETITS POIS, PURÉE AUX PERSIL ET LARDONS. (GF)(43996)',\n  Decimal('113.76000')],\n ['Woluwe', 'SALADE POULET NATURE 150G(53501)', Decimal('111.30000')],\n ['Woluwe',\n  'ESCALOPE DE POULET  / STRACCIATELLA / ESTRAGON(54416)',\n  Decimal('110.65560')],\n ['Woluwe', 'CHILI SIN CARNE AUX LENTILLES(34078)', Decimal('110.2290000')],\n ['Woluwe',\n  'BLANQUETTE DE VEAU AUX OIGNONS GRELOTS(51450)',\n  Decimal('109.42920')],\n ['Woluwe',\n  \"2 - 1P FILET DE SAUMON, SAUCE MOUTARDE A L'ANCIENNE, CHICONS AUX NOIX ET OIGNONS, PURÉE DE CAROTTES RAZ EL HANOUT. (43983)\",\n  Decimal('108.79000')],\n ['Woluwe',\n  '1 - 13P BEIRUT CHICKPEA BALLS, SAUCE TOMATE AU FENOUIL, BLETTES AU CÉLERI, SARRASIN AUX HERBES(43956)',\n  Decimal('108.79000')],\n ['Woluwe', '(52841)', Decimal('106.95580')],\n ['Woluwe', 'CHIPS LEGUMES 100G(18889)', Decimal('106.70000')],\n ['Woluwe',\n  'NOUILLES SAUTEES/ LEGUMES CROQUANTS / SOJA /SCAMPIS(52793)',\n  Decimal('106.68800')],\n ['Woluwe', 'PAVLOVA FRUITS ROUGES (40975)', Decimal('105.0000000')],\n ['Woluwe', 'BUTTER CHICKEN(55574)', Decimal('104.53020')],\n ['Woluwe',\n  '2 - 5P FILET DE DAURADE AUX GRAINES DE MOUTARDE, SAUCE À L’ESTRAGON, ÉPINARDS ET CHAMPIGNONS DE PARIS SAUTÉS À L’ÉCHALOTE, PURÉE AUX POIREAUX. (GF)(43976)',\n  Decimal('104.28000')],\n ['Woluwe',\n  '1 - 1P FILET DE DAURADE EN CROÛTE D’HERBES, SAUCE AUX ÉPINARDS, CÉLERI-RAVE, PETITS POIS ET OIGNONS GRILLÉS, POMMES DE TERRE GRENAILLE AU GROS SEL ET ROMARIN.(43843)',\n  Decimal('104.28000')],\n ['Woluwe',\n  '1 - 4P PAIN DE VIANDE (100%HACHÉ DE VOLAILLE), SAUCE BRUNE À LA MOUTARDE, BLETTES GRILLÉES À L’AIL, QUARTIERS DE POMMES DE TERRE AU PERSIL PLAT(43846)',\n  Decimal('104.28000')],\n ['Woluwe',\n  'SPAGHETTI A LA SAUCE BOLOGNAISE VEGAN 550G(56447)',\n  Decimal('104.28000')],\n ['Woluwe',\n  '2 - 4P TAJINE DE POULARDE AU CITRON, COURGETTES, CORIANDRE ET RAISINS, SEMOULE AUX HERBES VERTES(43975)',\n  Decimal('104.28000')],\n ['Woluwe',\n  '2 - 10P  STEAK DE CÉLERI-RAVE ET POIS CHICHES GRILLÉS, OIGNONS, SIROP D’ÉRABLE, THYM, RICOTTA ET NOIX. (GF)(V)(43987)',\n  Decimal('104.28000')],\n ['Woluwe', 'BROCOLI AUX NOIX(49420)', Decimal('104.01300')],\n ['Woluwe',\n  'VELOUTE DE CHOU-FLEUR DU BARRY (1L)(38567)',\n  Decimal('104.0000000')],\n ['Woluwe', 'POTAGE THAI CITRONNELLE 1L(37731)', Decimal('104.0000000')],\n ['Woluwe', 'BOEUF STROGANOFF(56179)', Decimal('102.47940')],\n ['Woluwe', 'COCKTAIL 4 PCS FINGERFOOD(53067)', Decimal('102.00000')],\n ['Woluwe', 'LEGUMES FARCIS(40761)', Decimal('101.7020000')],\n ['Woluwe', 'TIRAMISU MARRONS 110G(40742)', Decimal('99.20000')],\n ['Woluwe', 'DIPS GUACAMOLE 250G(53649)', Decimal('97.56000')],\n ['Woluwe', 'TAJINE AGNEAU + ACC(36595)', Decimal('94.80000')],\n ['Woluwe', 'CROQUETTE CREVETTE (2 PIECES)(19968)', Decimal('94.8000000')],\n ['Woluwe',\n  '1 - 8P FILET DE SAUMON, MOUSSELINE AUX C PRES, ÉPINARDS, PETITS POIS ET OIGNONS AU GINGEMBRE, POMMES DE TERRE EN PERSILLADE. (GF)(43850)',\n  Decimal('94.80000')],\n ['Woluwe',\n  'SCAMPIS SAUCE VIN BLANC JARDINIERE ET PUREE(19331)',\n  Decimal('94.80000')],\n ['Woluwe',\n  'DEMI FAISAN SAUVAGE / SAUCE LÉGÈREMENT CRÉMÉE AUX CHICONS (Gluten Free)(34790)',\n  Decimal('94.50000')],\n ['Woluwe', 'PAIN BUFFET CAMPAGNE (POCHON) 1,1KG(51407)', Decimal('93.50000')],\n ['Woluwe', \"NAVARIN D'AGNEAU(51380)\", Decimal('93.42720')],\n ['Woluwe', 'HOMEMADE PATE 350G(56228)', Decimal('93.10000')],\n ['Woluwe',\n  'POIS CHICHES GRILLES AU RIZ NOIR / MISO / GRAINE DE SESAME(56139)',\n  Decimal('92.96280')],\n ['Woluwe', 'RIZ AU LAIT SPECULOOS 150G(40741)', Decimal('92.80000')],\n ['Woluwe', 'RIZ CONDE ABRICOT 400G(19696)', Decimal('90.00000')],\n ['Woluwe', 'RIZ AU LAIT NATURE 450G(19796)', Decimal('89.70000')],\n ['Woluwe', 'SANDWICH CESAR GD (POULET)(20055)', Decimal('89.10000')],\n ['Woluwe',\n  'RISOTTO DE SARRASIN CHAMPIGNONS DE SAISON 400G(54409)',\n  Decimal('88.40000')],\n ['Woluwe',\n  \"FILET DE SAUMON EN CROUTE D'HERBES, SAUCE MOUSSELINE, PUREE AUX POIREAUX, CHICONS CONFITS 2PERS(56349)\",\n  Decimal('88.40000')],\n ['Woluwe', 'CHATEAU LA MARZELLE 75CL(55947)', Decimal('88.40000')],\n ['Woluwe',\n  'TACCHINO / SALSA TONNATA / ANCHOIS / CAPRES(51977)',\n  Decimal('88.20000')],\n ['Woluwe', 'POTAGE AU FENOUIL ET TOMATES 1L(38298)', Decimal('88.0000000')],\n ['Woluwe',\n  'FILET DE BICHE / SAUCE GRAND VENEUR LÉGÈREMENT CRÉMÉE / AIRELLES(53164)',\n  Decimal('87.60000')],\n ['Woluwe', 'BOULETTES SAUCE TOMATE(51551)', Decimal('87.5689800')],\n ['Woluwe', 'CROQUETTE FROMAGE (2 PIECES)(19970)', Decimal('85.8800000')],\n ['Woluwe',\n  '4 - 7P LASAGNA VERDE, RICOTTA ÉPINARDS, COURGETTES ET OIGNONS AU FOUR. (V)(43995)',\n  Decimal('85.32000')],\n ['Woluwe',\n  '2 - 2P FILET DE DINDE« SLOW COOKED », JUS BRUN, POTIRON, AIRELLES ET OIGNONS CARAMÉLISÉS, SARRASIN AU CITRON ET PERSIL PLAT.(43972)',\n  Decimal('85.32000')],\n ['Woluwe',\n  '2 - 14P MOUSSAKA (100% HACHÉ DE VOLAILLE, AUBERGINES, TOMATES,..)(43994)',\n  Decimal('85.32000')],\n ['Woluwe',\n  '4 LAITS - 4 NOIRS MINIS MELOCAKES ARTISANAL(56017)',\n  Decimal('85.00000')],\n ['Woluwe',\n  '4 BLANCS - 4 LAITS  MINIS MELOCAKES ARTISANAL(56016)',\n  Decimal('85.00000')],\n ['Woluwe', 'DINDE FILET CUIT FARCI(18246)', Decimal('84.5928600')],\n ['Woluwe', 'SABLE POIRE CREME AMANDE 4PERS(19718)', Decimal('84.50000')],\n ['Woluwe',\n  'TARTE ABRICOTS ROTIS A LA CREME DE NOISETTE 4PERS(55483)',\n  Decimal('84.50000')],\n ['Woluwe', 'SOUFFLE AU POIVRE NOIR 100G(20256)', Decimal('83.75000')],\n ['Woluwe',\n  'BLANQUETTE DE VEAU AUX OIGNONS GRELOTS(51448)',\n  Decimal('83.06720')],\n ['Woluwe',\n  'PAELLA VEGAN AUX LEGUMES DE SAISON(18767)',\n  Decimal('82.6098000')],\n ['Woluwe', 'ASPERGES VERTES CUITES(51360)', Decimal('81.9072000')],\n ['Woluwe', 'MACARONS 12PCS(19910)', Decimal('81.0000')],\n ['Woluwe', 'POMMES  JONAGOLD / AIRELLES(51870)', Decimal('80.24660')],\n ['Woluwe',\n  'ACC 2 : PUREE  DE POMMES DE TERRE HUILE DE TRUFFE ET CHAMPIGNONS DES BOIS(18849)',\n  Decimal('80.10000')],\n ['Woluwe',\n  'VELOUTE TOMATES ET MINI BOULETTES 1/2L(40509)',\n  Decimal('80.0000000')],\n ['Woluwe', 'POTAGE THAI POULET 1/2L(19580)', Decimal('80.0000')],\n ['Woluwe', 'MERVEILLEUX AU LEMON CURD(51177)', Decimal('79.80000')],\n ['Woluwe', 'PUREE BASILIC(55789)', Decimal('79.76800')],\n ['Woluwe', 'CARRE VITELLO TONATO(54368)', Decimal('79.20000')],\n ['Woluwe',\n  '1 - 4P MIJOTÉ DE POULARDE AUX CHAMPIGNONS, CAROTTES ET CÉLERI-RAVE GRILLÉS, PURÉE AUX OIGNONS(43933)',\n  Decimal('79.12000')],\n ['Woluwe',\n  '1 - 3P SPAGHETTI DELLO SPORT (100% HACHÉ DE VOLAILLE, CAROTTES, CÉLERI, OIGNONS,..)(43931)',\n  Decimal('79.12000')],\n ['Woluwe', 'VINAIGRETTE CIBOULETTE 250ML(34737)', Decimal('79.00000')],\n ['Woluwe', 'FOIE GRAS OIE MI CUIT(18711)', Decimal('78.96000')],\n ['Woluwe',\n  'FILET DINDE FARCI (HACHE 100% VOLAILLE) / CHAMPIGNONS DES BOIS(51806)',\n  Decimal('77.35680')],\n ['Woluwe', 'CAVA M&M MILLESIME 75CL(55950)', Decimal('76.80000')],\n ['Woluwe',\n  'TERRINE CAILLEBOTTE CHEVRE / PISTOU (Tranche)(54505)',\n  Decimal('76.50000')],\n ['Woluwe', 'COCA ZERO 50CL PET(52487)', Decimal('76.50000')],\n ['Woluwe', 'TARAMA DE TRUITE 90g(52926)', Decimal('76.45000')],\n ['Woluwe',\n  'DEMI FAISAN + SAUCE (1 PERS.) COMPTOIR(55587)',\n  Decimal('75.60000')],\n ['Woluwe', 'NOEL : 1 SAPIN CHOCOLAT(38345)', Decimal('75.40000')],\n ['Woluwe',\n  'TAJINE AGNEAU / LEGUMES DE SAISON / ABRICOTS(51377)',\n  Decimal('74.53440')],\n ['Woluwe', 'CAP GRIS GRENACHE 75CL(50785)', Decimal('73.75000')],\n ['Woluwe',\n  'MELOCAKES ARTISANAL AU CHOCOLAT NOIR (49406)',\n  Decimal('73.5000000')],\n ['Woluwe', 'NEW YORK CHEESE LIGHT 145G(19851)', Decimal('72.5000000')],\n ['Woluwe', 'POPCAKE SACHET 2PCS(20284)', Decimal('72.20000')],\n ['Woluwe', 'BLINIS 16PCS 135g(37530)', Decimal('72.00000')],\n ['Woluwe', 'RAVIOLI GORGONZOLA NOIX(40780)', Decimal('70.41060')],\n ['Woluwe', 'POULET PILONS CUITS(18195)', Decimal('70.37826')],\n ['Woluwe', 'SOUFFLE AU GROS SEL 100G(20257)', Decimal('70.35000')],\n ['Woluwe', 'CHICON AU GRATIN(53081)', Decimal('70.33660')],\n ['Woluwe', 'COQUELET LAQUE (2PCS)(40467)', Decimal('69.60000')],\n ['Woluwe', 'TARAMA A LA TRUFFE 90G(52924)', Decimal('69.50000')],\n ['Woluwe', 'NOEL : LES 3 BOULES CHOCOLAT(38219)', Decimal('69.30000')],\n ['Woluwe',\n  '1 - 2P CHOU FARCI, JEUNES CAROTTES AU CÉLERI ET ÉCHALOTES, SEMOULE DE BLE AUX HERBES(43929)',\n  Decimal('69.23000')],\n ['Woluwe',\n  'SEMOULE DE BLE AMANDES ET FRUITS SECS 400G(40764)',\n  Decimal('69.20000')],\n ['Woluwe', 'BUITENVERWACHTING 75CL(50779)', Decimal('68.95000')],\n ['Woluwe', 'POULET FILET KATSU(55567)', Decimal('68.87340')],\n ['Woluwe', 'NOUILLE SAUTEE LEGUME CROQUANT(52446)', Decimal('68.4880200')],\n ['Woluwe', 'MICHEL LYNCH BLANC 75CL(50782)', Decimal('67.75000')],\n ['Woluwe',\n  'SALADE FREGOLA PANAIS CAROTTE AIRELLE(56142)',\n  Decimal('67.61720')],\n ['Woluwe',\n  'SABLE MANGUE ET FRUIT DE LA PASSION 4PERS(56154)',\n  Decimal('67.60000')],\n ['Woluwe', 'TARTE FROMAGE SPECULOOS 4PERS(19706)', Decimal('67.60000')],\n ['Woluwe', 'None(53051)', Decimal('67.60000')],\n ['Woluwe',\n  '4 - 9P ESCALOPE DE DINDE, EMMENTAL, LARD ET PARMESAN, CHAMPIGNONS DE PARIS SAUTÉS, BELLES DE FONTENAY AU GROS SEL ET ROMARIN. (GF)(43997)',\n  Decimal('66.36000')],\n ['Woluwe', 'CAVA MVSA 20CL(53606)', Decimal('66.30000')],\n ['Woluwe',\n  'MELOCAKES ARTISANAL AU CHOCOLAT LAIT(49405)',\n  Decimal('66.1500000')],\n ['Woluwe',\n  'CHAPON DESOSSE FARCI CRU (PRIX/PERS.)(53172)',\n  Decimal('65.40000')],\n ['Woluwe',\n  'BLANQUETTE DE VEAU AUX OIGNONS GRELOTS(51451)',\n  Decimal('65.15180')],\n ['Woluwe',\n  'TAJINE DE POULARDE / CITRON / CORIANDRE / RAISINS(51436)',\n  Decimal('64.34160')],\n ['Woluwe', 'POTAGE TOM KHA KAI POULET 1/2L(40850)', Decimal('64.0000000')],\n ['Woluwe',\n  'BOULETTE VOLAILLE SAUCE TOMATE, LEGUMES PROVENCAUX ET PUREE NATURE (40816)',\n  Decimal('64.0000000')],\n ['Woluwe', 'COULIS FRUITS ROUGES 250ML(19801)', Decimal('63.7000')],\n ['Woluwe', 'PAIN MUESLI TRADITION 280G(51411)', Decimal('63.65000')],\n ['Woluwe', 'VOL-AU-VENT(55485)', Decimal('63.60180')],\n ['Woluwe', 'CAILLE DESOSSEE CUITE FOIE GRAS(34621)', Decimal('63.50000')],\n ['Woluwe', 'FINANCIER 250G(55755)', Decimal('63.20000')],\n ['Woluwe',\n  'DEMI HOMARD \"BELLEVUE\" / SAUCE TARTARE AUX HERBES / SALADE VERTE(50614)',\n  Decimal('63.20000')],\n ['Woluwe', 'FINANCIER 250G(55545)', Decimal('63.20000')],\n ['Woluwe', 'POTAGE TOM KHA KOONG SCAMPIS 1/2L(39082)', Decimal('63.0000000')],\n ['Woluwe', 'HOMEMADE PATE 350G(56226)', Decimal('62.79000')],\n ['Woluwe', 'RIZ AU LAIT 150G(19795)', Decimal('62.7000000')],\n ['Woluwe', 'TIRAMISU SPECULOOS 400G(19781)', Decimal('62.50000')],\n ['Woluwe', 'PAVLOVA POIRES ET SPECULOOS JETABLE(51861)', Decimal('61.20000')],\n ['Woluwe',\n  \"CHIA / LAIT DE COCO / COMPOTE DE FRUITD D'AUTOMNE(51809)\",\n  Decimal('60.80000')],\n ['Woluwe',\n  'CIVET DE MARCASSIN CUIT / SAUCE POIVRE VERT DE MADAGASCAR 300G -  (1 PERS.)(50099)',\n  Decimal('60.69000')],\n ['Woluwe', 'CUPCAKE A LA PIECE(20468)', Decimal('60.00000')],\n ['Woluwe', 'MOUSSE CHOCOLAT EN VASE(53166)', Decimal('60.0000000')],\n ['Woluwe',\n  'DUO DE RAVIOLE OUVERTE DE GAMBAS / LAIT DE COCO / DUXELLES DE PETITS LEGUMES(34985)',\n  Decimal('59.60000')],\n ['Woluwe', '8 NOIRS MINIS MELOCAKES ARTISANAL(55939)', Decimal('59.50000')],\n ['Woluwe',\n  '4 BLANCS - 4 NOIRS MINIS MELOCAKES ARTISANAL(56015)',\n  Decimal('59.50000')],\n ['Woluwe', 'PLAT DU JOUR 11.9(19321)', Decimal('59.50000')],\n ['Woluwe',\n  '2 - 3P CHOUCROUTE GARNIE (KÄSSLER, FRANKFURTER, KIELBASSA), POMMES DE TERRE.(43986)',\n  Decimal('59.34000')],\n ['Woluwe',\n  'CAILLE FARCIE AU FOIE GRAS + SAUCE (2PCS)(55446)',\n  Decimal('58.80000')],\n ['Woluwe',\n  '1 - 6P HAUT DE CUISSE DE POULET DÉSOSSÉE, SAUCE BRUNE AU MISO, CÉLERI-RAVE ET POTIRON GRILLÉ AUX OIGNONS, PURÉE AUX CAROTTES RAS EL HANOUT.(43848)',\n  Decimal('56.88000')],\n ['Woluwe',\n  '1 - 2P KORMA DE LÉGUMES DE SAISON AUX NOIX DE CAJOU, COUSCOUS AUX HERBES VERTES (V)(43844)',\n  Decimal('56.88000')],\n ['Woluwe',\n  '1 - 7P CHICONS AU GRATIN, POMMES DE TERRE NATURE. (GF)(43849)',\n  Decimal('56.88000')],\n ['Woluwe', 'NOEL : 1 SAPIN + 1 BOULE CHOCOLAT(38355)', Decimal('56.50000')],\n ['Woluwe', 'None(51409)', Decimal('56.26000')],\n ['Woluwe',\n  '1 - 4E POTAGE DE COURGETTES ET DE CRESSON. (GF)(V)(43832)',\n  Decimal('56.00000')],\n ['Woluwe',\n  '1 - 12E POTAGE DE POIREAUX À LA NOIX DE MUSCADE. (GF)(V)(43840)',\n  Decimal('56.00000')],\n ['Woluwe', 'CARRE TACCHINO TONATO AUX HERBES(54366)', Decimal('55.30000')],\n ['Woluwe', 'BONBON OURS ACIDULE BOUTEILLE 370G(36762)', Decimal('55.20000')],\n ['Woluwe', 'VINAIGRETTE CIBOULETTE 500ML(35032)', Decimal('54.6000')],\n ['Woluwe',\n  'CREVETTES GEANTES / ECHALOTES / AIL(50608)',\n  Decimal('53.9440000')],\n ['Woluwe',\n  'CIVET DE MARCASSIN / SAUCE AU POIVRE VERT DE MADAGASCAR (50619)',\n  Decimal('53.00260')],\n ['Woluwe', 'POULET FERME CUIT(18146)', Decimal('52.73520')],\n ['Woluwe',\n  'PAVLOVA AUX FRUITS ROUGES EN VERRE  (+ caution)(20519)',\n  Decimal('52.50000')],\n ['Woluwe',\n  'CIVET DE MARCASSIN CUIT / SAUCE POIVRE VERT DE MADAGASCAR 600G -  (2 PERS.)(50098)',\n  Decimal('52.02000')],\n ['Woluwe', 'None(52881)', Decimal('52.0000000')],\n ['Woluwe',\n  '1 - 1E SALADE DE CÉLERI-RAVE, CHOU BLANC, CAROTTES, SÉSAME NOIR ET PIMENTS. (GF)(V)(43829)',\n  Decimal('51.80000')],\n ['Woluwe', 'BIMI GOMAE(56130)', Decimal('51.57360')],\n ['Woluwe', '8 LAITS MINIS MELOCAKES ARTISANAL(55940)', Decimal('51.00000')],\n ['Woluwe',\n  '2 GAMBAS GRILLÉES / BOULGOUR AUX HERBES / SAUCE AU LAIT DE COCO ET AU CITRON / CHIMICHURRI(34769)',\n  Decimal('51.00000')],\n ['Woluwe',\n  'TARTE CROUTE VANILLE ET CARAMEL 4PERS(38449)',\n  Decimal('50.70000')],\n ['Woluwe', 'TARTE MISERABLE CITRON 4PERS(49896)', Decimal('50.70000')],\n ['Woluwe', 'FEUILLETE POUR BOUCHEE A LA REINE(55743)', Decimal('50.70000')],\n ['Woluwe', 'ABELARD HELOISE 75CL(50800)', Decimal('50.00000')],\n ['Woluwe', 'LINGUINE SCAMPIS HERBES VERTES(51613)', Decimal('49.84560')],\n ['Woluwe', 'BATONNET POULET CAJUN CUIT(51559)', Decimal('49.55080')],\n ['Woluwe',\n  '1 - 6P GIGUE DE COCHON DE LAIT, JUS BRUN, CHOUX DE BRUXELLES AUX LARDONS, POMMES DE TERRE AU THYM(43936)',\n  Decimal('49.45000')],\n ['Woluwe',\n  'SALADE THAI AUX SCAMPIS / CAROTTES / SOJA / POIVRONS(52977)',\n  Decimal('49.28000')],\n ['Woluwe',\n  'BONBON SOURIS S/SUCRE BOUTEILLE 500G(36764)',\n  Decimal('48.30000')],\n ['Woluwe',\n  '4 - 4E VELOUTÉ DE CAROTTES AU LAIT DE COCO. (GF)(V)(43965)',\n  Decimal('48.00000')],\n ['Woluwe',\n  '2 - 6E  POTAGE TOMATE, FENOUIL ET LAIT DE COCO. (GF)(V)(43954)',\n  Decimal('48.00000')],\n ['Woluwe', 'BOUILLON THAI TOMATE 1L(51191)', Decimal('48.00000')],\n ['Woluwe',\n  'NAVARIN AGNEAU HARICOTS VERTS ET PDT(40815)',\n  Decimal('48.0000000')],\n ['Woluwe', 'CHICKEN SOUP FOR THE SOUL 1L(38659)', Decimal('48.0000000')],\n ['Woluwe',\n  'SUPREME DE POULET CUIT PERSILLADE CITRON(54471)',\n  Decimal('47.98080')],\n ['Woluwe', 'LASAGNE VEGE(50588)', Decimal('47.4708000')],\n ['Woluwe', 'MENU CHRISTMAS AT SEA(50050)', Decimal('47.40000')],\n ['Woluwe', 'BOULETTE KEFTA RATA SEMOULE(19299)', Decimal('47.40000')],\n ['Woluwe', 'ACC 2 : 600G PUREE(55453)', Decimal('47.40000')],\n ['Woluwe', 'ACC 1 : 3 POMMES AIRELLES(55421)', Decimal('46.80000')],\n ['Woluwe',\n  \"DUO DE FOIE GRAS D'OIE / POIVRE CONCASSE / FRUITS DE SAISON (FIGUES - ABRICOTS - RAISINS)(53163)\",\n  Decimal('45.80000')],\n ['Woluwe', 'WATERZOOI DE POULET(51341)', Decimal('45.02400')],\n ['Woluwe',\n  'CROQUETTES POMME DE TERRE FRAICHES 10 PCS(36705)',\n  Decimal('45.0000000')],\n ['Woluwe', 'JUS DE FRUITS FRAIS 250 ML(55928)', Decimal('44.80000')],\n ['Woluwe', 'JUS DE FRUITS FRAIS 250 ML(55927)', Decimal('44.80000')],\n ['Woluwe', 'TERRINE DE LAPIN AUX NOIX(56223)', Decimal('44.5648000')],\n ['Woluwe',\n  'MELOCAKES ARTISANAL AU CHOCOLAT BLANC(56019)',\n  Decimal('44.10000')],\n ['Woluwe', 'MARCASSIN FILET CUIT(18242)', Decimal('43.8480')],\n ['Woluwe', 'DIPS HOUMOUS (200g)(36779)', Decimal('43.40000')],\n ['Woluwe', 'PAIN RUSTIQUE 450G(51410)', Decimal('43.40000')],\n ['Woluwe', 'None(53720)', Decimal('42.0000000')],\n ['Woluwe',\n  'PAVLOVA AUX POIRES ET SPECULOOS EN VERRE (+ caution)(53142)',\n  Decimal('42.00000')],\n ['Woluwe', 'MINI KEFTA(51348)', Decimal('41.8132000')],\n ['Woluwe', 'MENU JINGLE BELLS(34822)', Decimal('41.50000')],\n ['Woluwe',\n  '3 - 9E SALADE DE QUINOA AUX POIS CHICHES, HARICOTS ROUGES ET ADZUKI, PERSIL PLAT.(43945)',\n  Decimal('40.70000')],\n ['Woluwe', 'CREME BRULEE NATURE 130G(19861)', Decimal('40.60000')],\n ['Woluwe',\n  'VELOUTE DE PATATES DOUCES AU LAIT DE COCO 1/2L(54513)',\n  Decimal('40.50000')],\n ['Woluwe',\n  'CIVET DE BICHE / CHAMPIGNONS DES BOIS / MOUTARDE TIERENTEYN(50617)',\n  Decimal('40.38200')],\n ['Woluwe',\n  '3 - 14E VELOUTÉ DE CHAMPIGNONS. (GF)(V)(44008)',\n  Decimal('40.00000')],\n ['Woluwe', 'WATERZOOI DE POULET(51343)', Decimal('39.98560')],\n ['Woluwe', 'HOMEMADE PATE 350G(56227)', Decimal('39.90000')],\n ['Woluwe', '(51058)', Decimal('39.5000000')],\n ['Woluwe',\n  'OSSO BUCO, LINGUINI AUX TOMATES ET ROQUETTE (40819)',\n  Decimal('39.5000000')],\n ['Woluwe', 'SAUCE BOLOGNAISE(55514)', Decimal('38.68800')],\n ['Woluwe',\n  '1/2 POULET, COMPOTE DE POMMES ET PUREE NATURE(40820)',\n  Decimal('38.4000000')],\n ['Woluwe', 'DIPS : TARTARE AUX CAPRES (250g)(53778)', Decimal('37.94000')],\n ['Woluwe', 'COURGETTE + RATATOUILLE + SEM(19246)', Decimal('37.92000')],\n ['Woluwe',\n  '2 - 3P CHOUCROUTE GARNIE (KÄSSLER, FRANKFURTER,KIELBASSA), POMMES DE TERRE(43974)',\n  Decimal('37.92000')],\n ['Woluwe',\n  '4 - 10P POULET MADRAS (MEDIUM HOT), COURGETTES ET PETITS POIS À L’ÉCHALOTE AU FOUR, RIZ BASMATI. (GF)(43998)',\n  Decimal('37.92000')],\n ['Woluwe', 'PLAT DU JOUR 18,90(54459)', Decimal('37.80000')],\n ['Woluwe', 'FILET PINTADEAU SLOW COOKED(53829)', Decimal('37.09440')],\n ['Woluwe',\n  '4 - 7E SALADE DE LENTILLES VERTES DU PUY ET DUXELLES DE LÉGUMES. (GF)(V)(43973)',\n  Decimal('37.00000')],\n ['Woluwe',\n  '3 - 11E SALADE DE LENTILLES NOIRES, EDAMAME, FETA ET GRAINES GRILLÉES. (V)(43950)',\n  Decimal('37.00000')],\n ['Woluwe',\n  'SAUMON MI CUIT, SAUCE VIN BLANC, JARDINIERE DE LEGUMES ET PUREE BASILIC (40818)',\n  Decimal('37.0000000')],\n ['Woluwe',\n  'LIVRAISON BXL COMMANDE INFERIEURE 100 EUROS(19486)',\n  Decimal('36.30000')],\n ['Woluwe',\n  'BARRIERE FRERES - CHATEAU TRUQUET 75 CL(40476)',\n  Decimal('36.10000')],\n ['Woluwe', 'POULET CUISSE CAJUN(51446)', Decimal('36.09224')],\n ['Woluwe',\n  'POTAGE AUX POIREAUX ET NOIX DE MUSCADE 1/2L(50724)',\n  Decimal('36.0000000')],\n ['Woluwe',\n  '1 - 2E VELOUTÉ DE POIVRONS DOUX. (GF)(V)(43830)',\n  Decimal('36.00000')],\n ['Woluwe',\n  '1 - 8E POTAGE DE CHOU FLEUR AU CURRY DOUX. (GF)(V)(43836)',\n  Decimal('36.00000')],\n ['Woluwe',\n  'FILET DE DINDE FARCI AU FRUIT HIVER CUIT (2 PERS.)(55450)',\n  Decimal('36.00000')],\n ['Woluwe', 'SALADE TREVISE / CHICON(51415)', Decimal('35.67480')],\n ['Woluwe', 'ACC 2 : 600G CHAMPIGNONS DES BOIS(55454)', Decimal('35.55000')],\n ['Woluwe', 'PAIN VIANDE TRUFFE(51726)', Decimal('35.07840')],\n ['Woluwe',\n  'COURGETTES FARCIES / COULIS DE TOMATES(51393)',\n  Decimal('34.54920')],\n ['Woluwe', 'CANARD LAQUE(18305)', Decimal('33.63840')],\n ['Woluwe',\n  'NOBLE LATE HARVEST NEDERBURG 37,5 CL(56162)',\n  Decimal('33.50000')],\n ['Woluwe',\n  '1 - 5E SALADE DE CHOU FLEUR GRILLÉ, RAISINS, NOIX ET PERSIL PLAT. (GF)(V)(43833)',\n  Decimal('33.30000')],\n ['Woluwe',\n  '2 - 9E SALADE VERTE PROTÉINÉE (LENTILLES, COURGETTE, EDAMAME,…)(43960)',\n  Decimal('33.30000')],\n ['Woluwe', 'GIGUE DE COCHON DE LAIT (DESOSSE)(51518)', Decimal('32.91780')],\n ['Woluwe', 'COQUELET FARCI CUIT COMPTOIR(38840)', Decimal('32.40000')],\n ['Woluwe',\n  'PUREE DE POMMES DE TERRE / CELERI-RAVE(55795)',\n  Decimal('32.30200')],\n ['Woluwe', 'VELOUTE POTIRON AU LAIT DE COCO 1L(44066)', Decimal('32.00000')],\n ['Woluwe', 'POTAGE FENOUIL ET AZUKI 1L(56075)', Decimal('32.00000')],\n ['Woluwe', 'BOUILLON AU MISO ET ENOKI 1L(52787)', Decimal('32.0000000')],\n ['Woluwe', 'CHAMPIGNONS DES BOIS SAUTES(51533)', Decimal('31.96000')],\n ['Woluwe', 'COFFRET FONTEYNE(56282)', Decimal('31.95000')],\n ['Woluwe', 'FINANCIER 250G(55687)', Decimal('31.60000')],\n ['Woluwe', 'DEMI HOMARD CHAUD ET SA GARNITURE(53429)', Decimal('31.60000')],\n ['Woluwe', 'FINANCIER 250G(55891)', Decimal('31.60000')],\n ['Woluwe', 'VINAIGRETTE YOGHURT 250ML(18974)', Decimal('31.60000')],\n ['Woluwe', 'FINANCIER 250G(56166)', Decimal('31.60000')],\n ['Woluwe', 'DEMI HOMARD COMPTOIR(55580)', Decimal('31.60000')],\n ['Woluwe', 'FINANCIER 250G(55546)', Decimal('31.60000')],\n ['Woluwe', 'CHIPS SHIITAKE 75G(43743)', Decimal('31.2500000')],\n ['Woluwe', 'LINGUINI CHAMPIGNONS DES BOIS(39109)', Decimal('30.87360')],\n ['Woluwe', 'ULTIMATE PARTY CLASSIC PRIX/PERS.(52272)', Decimal('30.00000')],\n ['Woluwe',\n  'CIVET DE BICHE CUIT / CHAMPIGNONS DES BOIS / MOUTARDE TIERENTEYN 300G - (1 PERS.)(50097)',\n  Decimal('29.79000')],\n ['Woluwe', 'ESCALOPE PANEE COMPTOIR(55944)', Decimal('29.68940')],\n ['Woluwe',\n  '2 - 4P SAUCISSE DE VOLAILLE, JUS BRUN À LA MOUTARDE, POIRES AUX NOIX ET AU THYM, PURÉE DE CÉLERI-RAVE. (43988)',\n  Decimal('29.67000')],\n ['Woluwe',\n  '4 - 11E SALADE VERTE PROTÉINÉE (LENTILLES, COURGETTE, EDAMAME, POIS CHICHES)(44003)',\n  Decimal('29.60000')],\n ['Woluwe', 'BLANC DE POIREAUX / TAHINI(55642)', Decimal('29.55540')],\n ['Woluwe', 'SAUCE VEGAN 500G(56448)', Decimal('29.25000')],\n ['Woluwe',\n  'LEMONGRASS / RAISINS / CORIANDRE / CITRONNELLE(51459)',\n  Decimal('28.95480')],\n ['Woluwe',\n  '1 - 13P ROGAN JOSH D’AGNEAU, DUXELLES DE LÉGUMES, ORZO ET PERSILLADE PIQUANTE(43855)',\n  Decimal('28.44000')],\n ['Woluwe', 'MIJOTE AGNEAU + RIZ(53759)', Decimal('28.44000')],\n ['Woluwe',\n  '1 - 11P LINGUINE AUX CHAMPIGNONS DES BOIS, SALSA TARTUFATA, PARMESAN. (V)(43853)',\n  Decimal('28.44000')],\n ['Woluwe',\n  '1 - 5P BEIRUT CHICKPEA BALLS, SAUCE AU CURRY VERT, B TONNETS DE COURGETTES À  L’ÉCHALOTE, RIZ BASMATI AUX ÉPICES(43847)',\n  Decimal('28.44000')],\n ['Woluwe', 'COOKIES CHOCOLAT BLANC CAJOU 4PCS(18972)', Decimal('28.40000')],\n ['Woluwe',\n  '3 - 6E POTAGE DE POIREAUX ET NOIX DE MUSCADE. (GF)(V)(43937)',\n  Decimal('28.00000')],\n ['Woluwe',\n  '4 - 14E VELOUTÉ DE POIVRONS JAUNES ET BASILIC. (GF)(V)(44007)',\n  Decimal('28.00000')],\n ['Woluwe',\n  '2 - 2E POTAGE DE CAROTTES AU LAIT DE COCO. (GF)(V)(43943)',\n  Decimal('28.00000')],\n ['Woluwe', 'BONBON SOURIS NOIRES BOUTEILLE 430G(36758)', Decimal('27.60000')],\n ['Woluwe', 'BONBON OURS S/SUCRE BOUTEILLE 380G(36765)', Decimal('27.60000')],\n ['Woluwe', 'BONBON MELI MELO 480G(36754)', Decimal('27.60000')],\n ['Woluwe',\n  'DES DE POULET / LAIT DE COCO / SAUCE CURRY VERT(51498)',\n  Decimal('27.53940')],\n ['Woluwe', 'MONT BLANC JETABLE(51591)', Decimal('27.20000')],\n ['Woluwe',\n  'BLINIS 12PCS / ELBOT ET CREME DE RAIFORT(19594)',\n  Decimal('27.2000000')],\n ['Woluwe', 'AUBERGINES FARCIES A LA LIBANAISE(55575)', Decimal('27.10260')],\n ['Woluwe', 'DIPS TZATZIKI 250G(40314)', Decimal('27.10000')],\n ['Woluwe', 'DIPS CREMA TONNATA 250G(54393)', Decimal('27.10000')],\n ['Woluwe', 'FILET DE POULET SLOW COOKED(51478)', Decimal('26.97420')],\n ['Woluwe', 'SALADE THAI POULET 400G(19110)', Decimal('26.9400000')],\n ['Woluwe', 'LEGUMES / SALADES 21,7 EURO/KG(54420)', Decimal('26.51740')],\n ['Woluwe',\n  'TERRINE DE FAISAN / CHAMPIGNONS DES BOIS(34759)',\n  Decimal('26.40000')],\n ['Woluwe', 'GRANOLA DE SAISON 340G(55693)', Decimal('26.00000')],\n ['Woluwe',\n  '1 - 3E QUINOA AUX CAROTTES, RAISINS, TOMATES CERISE, GRAINES GRILLÉES ET HERBES VERTES. (V)(43831)',\n  Decimal('25.90000')],\n ['Woluwe',\n  '1 - 11E SALADE DE FREEKEH, POTIRON, FETA, AIRELLES ET GRAINES GRILLÉES. (V)(43839)',\n  Decimal('25.90000')],\n ['Woluwe', 'JUS DE FRUITS FRAIS 250 ML(55926)', Decimal('25.60000')],\n ['Woluwe', 'EL ARITZA TEMPRANILLO 75CL(55948)', Decimal('25.40000')],\n ['Woluwe', 'TARTANA BODEGAS FARINA 75CL(55945)', Decimal('25.00000')],\n ['Woluwe', 'TERRINE DE LIEVRE / NOIX / THYM(18658)', Decimal('24.47200')],\n ['Woluwe',\n  'LIVRAISON BXL COMMANDE SUPERIEURE 100 EUROS(19455)',\n  Decimal('24.2000')],\n ['Woluwe',\n  'PLATEAU CRUDITES (GF) (V) (prix/pers)(19406)',\n  Decimal('24.00000')],\n ['Woluwe', 'VELOUTÉ DE POTIRON(50258)', Decimal('24.00000')],\n ['Woluwe', 'POTAGE TOMATE ET LAIT DE COCO(56168)', Decimal('24.00000')],\n ['Woluwe',\n  'POTAGE MINESTRONE VERDE / LENTILLES (1L)(38586)',\n  Decimal('24.0000000')],\n ['Woluwe',\n  '2 - 14E VELOUTÉ DE TOMATES ET BASILIC. (GF)(V)(43968)',\n  Decimal('24.00000')],\n ['Woluwe', 'SUPPLEMENT SALADE(34429)', Decimal('24.0000')],\n ['Woluwe',\n  '2 - 8E MINESTRONE VERDE AUX LENTILLES. (GF)(V)(43958)',\n  Decimal('24.00000')],\n ['Woluwe',\n  '3 - 12E POTAGE DE COURGETTES ET ÉPINARDS.(GF)(V)(43952)',\n  Decimal('24.00000')],\n ['Woluwe', 'DESSERT EN VERRE (HORS CAUTION)(20249)', Decimal('23.2500000')],\n ['Woluwe',\n  '3 GROSSES CREVETTES BODY PEEL / BOULGOUR AUX HERBES / SESAME(38801)',\n  Decimal('23.20000')],\n ['Woluwe', 'MOUSSE CHOCOLAT DUO(51236)', Decimal('23.0000000')],\n ['Woluwe', \"POULET A L'ITALIENNE(53796)\", Decimal('22.99836')],\n ['Woluwe',\n  'NARCISSUS / TIRADITO DE THON - MARINADE AU SESAME, PIMENTS ET HERBES, TOMATES SECHEES ET CORIANDRE(54526)',\n  Decimal('22.80000')],\n ['Woluwe', 'LINGUINI NATURE(40624)', Decimal('22.6226000')],\n ['Woluwe', 'MINESTRONE (51762)', Decimal('22.5000000')],\n ['Woluwe',\n  '4 - 5E SALADE DE PÂTES GRECQUES, OLIVES, TOMATES SÉCHÉES ET FETA. (V)(43969)',\n  Decimal('22.20000')],\n ['Woluwe',\n  '4 - 3E TABOULÉ LIBANAIS, TOMATES ET HERBES VERTES. (V)(43963)',\n  Decimal('22.20000')],\n ['Woluwe',\n  '4 - 13E SALADE DE CHOU BLANC ET WAKAMÉ, VINAIGRETTE WASABI.(GF)(V)(44005)',\n  Decimal('22.20000')],\n ['Woluwe', 'BOUDIN BLANC / NOIR (19938)', Decimal('22.13042')],\n ['Woluwe',\n  'FILET DE CABILLAUD / SAUCE MOUSSELINE / CREVETTES GRISES / PURÉE AUX POIREAUX / CHICONS CONFITS (Gluten Free)(34806)',\n  Decimal('22.10000')],\n ['Woluwe', 'LINGUINE AUX LENTILLES ET LARDONS(54405)', Decimal('22.10000')],\n ['Woluwe',\n  'TORTELLONI RICOTTA / EPINARD / CHAMPIGNONS DES BOIS(56150)',\n  Decimal('22.0116000')],\n ['Woluwe', 'SALADE CREVETTES 450G(19072)', Decimal('21.9600000')],\n ['Woluwe',\n  'ACC 1 : 2 POMMES AIRELLES / 2 CHICONS / 200 LEGUMES(55420)',\n  Decimal('21.86000')],\n ['Woluwe', 'DIPS SAUCE CHERMOULAH 250G(53777)', Decimal('21.68000')],\n ['Woluwe', 'STOEMP DE POIREAUX(55793)', Decimal('21.39000')],\n ['Woluwe',\n  'HARICOTS PRINCESSES AUX OIGNONS SAUTES ET NOIX DE MUSCADE(50666)',\n  Decimal('21.29140')],\n ['Woluwe', 'ECRASE DE PDT AU CITRON(34115)', Decimal('21.2476000')],\n ['Woluwe',\n  'RISOTTO AUX FEUILLES DE CITRONNIER(18584)',\n  Decimal('21.1970000')],\n ['Woluwe', 'BONBON BATON ACIDULE BOUTEILLE 340G(36761)', Decimal('20.70000')],\n ['Woluwe', 'CRUDITE MINI(19956)', Decimal('20.7000000')],\n ['Woluwe', 'BEURRE ARTISANAL DOUX 250G(39002)', Decimal('20.34000')],\n ['Woluwe', 'COQUELET NATURE CUIT(18869)', Decimal('20.25000')],\n ['Woluwe', 'CAILLE FARCIE CUITE + SAUCE(19160)', Decimal('20.10000')],\n ['Woluwe',\n  '4 - 6E POTAGE DE COURGETTES AUX ÉPINARDS. (GF)(V)(43971)',\n  Decimal('20.00000')],\n ['Woluwe', 'EAU PLATE 50CL(38497)', Decimal('20.0000000')],\n ['Woluwe',\n  '1 - 10E VELOUTÉ DE BETTERAVE ROUGE. (GF)(V)(43838)',\n  Decimal('20.00000')],\n ['Woluwe', 'SPAGHETTI BOLO (34385)', Decimal('19.8000')],\n ['Woluwe',\n  '1 - 10P BOULETTE DE VOLAILLE, SAUCE BRUNE A LA MOUTARDE, CHOU-FLEUR A LA BECHAMEL, PURÉE NATURE.(43947)',\n  Decimal('19.78000')],\n ['Woluwe',\n  '1 - 8P CHICONS AU GRATIN, PURÉE DE POMMES DE TERRE(43938)',\n  Decimal('19.78000')],\n ['Woluwe', 'SALADE MESCLUN PARMESAN(35815)', Decimal('19.71060')],\n ['Woluwe', 'COULIS FRUITS ROUGES 500ML(38102)', Decimal('19.7000000')],\n ['Woluwe',\n  'TIRADITO DE THON ALBACORE / SESAME / PIMENTS(53785)',\n  Decimal('19.59200')],\n ['Woluwe', 'MERINGUE(51577)', Decimal('19.5200000')],\n ['Woluwe', 'SAC ISO FTK GRIS/BLANC(36594)', Decimal('19.5000000')],\n ['Woluwe', 'WASABI PEAS 300G(20282)', Decimal('19.5000')],\n ['Woluwe', 'GRANOLA 340G(19911)', Decimal('19.5000')],\n ['Woluwe', 'SALADE BOULGOUR (18043)', Decimal('19.35640')],\n ['Woluwe', 'SALADE CREVETTES(18093)', Decimal('18.9720000')],\n ['Woluwe', 'TERRINE DE CANARD AU FOIE GRAS (50106)', Decimal('18.60000')],\n ['Woluwe',\n  '2 - 3E SALADE DE CÉLERI-RAVE, CHOU BLANC ET CAROTTES AU SÉSAME NOIR ET PIMENTS. (GF)(V)(43946)',\n  Decimal('18.50000')],\n ['Woluwe',\n  '3 - 3E BOULGOUR, POIS CHICHES, EDAMAME, POTIRON GRILLÉ ET GRENADE. (V)(43930)',\n  Decimal('18.50000')],\n ['Woluwe',\n  '2 - 7E SALADE DE PATES GRECQUES, OLIVES, TOMATES SÉCHÉES, ET FETA. (V)(43957)',\n  Decimal('18.50000')],\n ['Woluwe', 'COOKIE 1PCE(38737)', Decimal('18.1500000')],\n ['Woluwe',\n  'SALADE DE PATES ORZO / TOMATES SECHEES / FETA 180G(51760)',\n  Decimal('18.0000000')],\n ['Woluwe', 'BISQUE DE HOMARD 1/2L(19556)', Decimal('18.0000000')],\n ['Woluwe',\n  'POTAGE CHAMPIGNONS DES BOIS / CREME ALLEGEE 1L(44067)',\n  Decimal('18.0000000')],\n ['Woluwe', 'MIGNARDISE HARICOTS BLANCS(40397)', Decimal('18.0000000')],\n ['Woluwe',\n  'SALADE DE POMMES DE TERRE / CIBOULETTE / OIGNONS(18645)',\n  Decimal('17.81040')],\n ['Woluwe', '(53047)', Decimal('17.7840000')],\n ['Woluwe',\n  'COQUELET CUIT PERSILLADE AU CITRON 2PCS(56152)',\n  Decimal('17.40000')],\n ['Woluwe', 'WASABI NUTS PETIT POT(18875)', Decimal('17.10000')],\n ['Woluwe', 'COOKIES CHOCOLAT NOIR 4PCS(51179)', Decimal('17.0400000')],\n ['Woluwe', '8 BLANCS MINIS MELOCAKES ARTISANAL(56018)', Decimal('17.00000')],\n ['Woluwe',\n  'SALADE DE QUINOA / POIS CHICHES / HARICOTS ROUGES / AZUKI / TOMATES SECHEES  / KALE(54493)',\n  Decimal('16.96940')],\n ['Woluwe',\n  'TARTE GANACHE CHOCOLAT / CREME VANILLE ET ROCHER COCO 4PERS(53816)',\n  Decimal('16.90000')],\n ['Woluwe',\n  'CELERI-RAVE / CHAMPIGNONS DES BOIS / STRACCIATELLA - 1 Pers.(56257)',\n  Decimal('16.60000')],\n ['Woluwe', 'COOKIE CHOCOLAT NOIR 1PCE(51180)', Decimal('16.2800000')],\n ['Woluwe', 'DIPS BABAGANOUSH 250G(53650)', Decimal('16.26000')],\n ['Woluwe',\n  'COQUELET FARCI TRUFFE AUX CHAMPIGNONS DES BOIS (2 PERS.)(51924)',\n  Decimal('16.20000')],\n ['Woluwe',\n  \"COQUELET FARCI AUX FRUITS D'HIVER (2 PERS.)(51922)\",\n  Decimal('16.20000')],\n ['Woluwe', 'POTAGE DETOX POTIRON 1L(50713)', Decimal('16.00000')],\n ['Woluwe', 'FIGUIERE MEDITERRANEE ROSE 75CL(55949)', Decimal('16.00000')],\n ['Woluwe',\n  '1 - 14E VELOUTÉ DE CÉLERI-RAVE. (GF)(V)(43842)',\n  Decimal('16.00000')],\n ['Woluwe',\n  '3 - 2E POTAGE DE CHOU FLEUR DU BARRY. (GF)(V)(43928)',\n  Decimal('16.00000')],\n ['Woluwe', '1 - 6E MINESTRONE. (GF)(V)(43834)', Decimal('16.00000')],\n ['Woluwe',\n  'SALADE THAI AUX SCAMPIS / CAROTTES / SOJA / POIVRONS(52978)',\n  Decimal('16.00000')],\n ['Woluwe',\n  '3 - 8E CHICKEN SOUP FOR THE SOUL. (GF)(43942)',\n  Decimal('16.00000')],\n ['Woluwe',\n  'POTAGE AUX CAROTTES / LAIT DE COCO (1/2L)(19575)',\n  Decimal('16.0000000')],\n ['Woluwe',\n  'VELOUTE DE TOMATES AU BASILIC 1/2L(19569)',\n  Decimal('16.0000000')],\n ['Woluwe', '2 - 4E VELOUTÉ DE CHICONS. (GF)(V)(43948)', Decimal('16.00000')],\n ['Woluwe',\n  'VELOUTE DE POIVRONS JAUNES / BASILIC (1/2L)(55756)',\n  Decimal('16.00000')],\n ['Woluwe',\n  'VELOUTÉ DE POIVRONS DOUX / MASCARPONE (50735)',\n  Decimal('16.00000')],\n ['Woluwe',\n  'VELOUTE POTIRON AU LAIT DE COCO 1/2L (44065)',\n  Decimal('16.00000')],\n ['Woluwe',\n  'COQUELET AU MIEL, SALADE VERTE, PDT AU SEL ET ROMARIN(40817)',\n  Decimal('16.0000000')],\n ['Woluwe', 'UNION SQUARE CAFE NUTS 350G(50452)', Decimal('15.9000000')],\n ['Woluwe', 'AMANDE GROS SEL ET THYM 350G(55766)', Decimal('15.90000')],\n ['Woluwe',\n  'ACC 2 : 400G PUREE + 400G CHAMPIGNON DES BOIS(55452)',\n  Decimal('15.80000')],\n ['Woluwe', 'VINAIGRETTE MIEL BALSAMIQUE 250ML(18987)', Decimal('15.80000')],\n ['Woluwe', 'VINAIGRETTE WASABI 250ML(18975)', Decimal('15.80000')],\n ['Woluwe',\n  'PAIN CIABATTA NATURE HUILE OLIVE 180G(51408)',\n  Decimal('15.60000')],\n ['Woluwe',\n  'DIPS : CREME CARDAMOME / CITRON (180g)(36780)',\n  Decimal('15.60000')],\n ['Woluwe',\n  '4 - 1E SALADE DE CÉLERI-RAVE, CHOU BLANC, CAROTTES, SÉSAME NOIR ET PIMENTS. (GF)(V)(43959)',\n  Decimal('14.80000')],\n ['Woluwe', 'PARMESAN - COPEAU/RAPE(18671)', Decimal('14.7186000')],\n ['Woluwe',\n  'SALADE POIS CHICHE LENTILLES VERTES LIME PIMENTS(55712)',\n  Decimal('14.36540')],\n ['Woluwe',\n  'SALADE GRECQUE : TOMATES / CONCOMBRES / OLIVES / FETA(18001)',\n  Decimal('14.32200')],\n ['Woluwe',\n  'BATONNET POULET CUIT LAQUE MIEL ET SOJA(54477)',\n  Decimal('14.09460')],\n ['Woluwe', 'SAUCE COMPTOIR FROIDE(38022)', Decimal('14.06160')],\n ['Woluwe', 'POTAGE DU JOUR A EMPORTER 7 EURO(35027)', Decimal('14.0000000')],\n ['Woluwe', 'BRIOCHE(20062)', Decimal('13.9000000')],\n ['Woluwe', 'PLAT DU JOUR 13.90(19319)', Decimal('13.90000')],\n ['Woluwe', 'BONBON CITROS BOUTEILLE 340G(36752)', Decimal('13.80000')],\n ['Woluwe', 'PUREE CHOU VERT LARDON(55801)', Decimal('13.77650')],\n ['Woluwe', 'MONT MARRON JETABLE(51860)', Decimal('13.60000')],\n ['Woluwe', 'BEURRE ARTISANAL SALE 250G(39003)', Decimal('13.56000')],\n ['Woluwe',\n  'PUREE AUX CAROTTES / EPICES RAZ EL HANOUT(55791)',\n  Decimal('13.51100')],\n ['Woluwe', 'SALADE TIKKA POULET 180G (51761)', Decimal('13.5000000')],\n ['Woluwe', 'TERRINE DE CANARD AUX CERISES(55677)', Decimal('13.14800')],\n ['Woluwe', 'GRANOLA DE SAISON 340G(55692)', Decimal('13.00000')],\n ['Woluwe', 'HAMBURGER DE VOLAILLE / THYM(50730)', Decimal('12.54960')],\n ['Woluwe', 'TURDUCKEN CUIT(18333)', Decimal('12.34800')],\n ['Woluwe',\n  'SARRASIN / HARICOTS ROUGES / POTIRON / SESAME ET PERSIL(56136)',\n  Decimal('12.19540')],\n ['Woluwe',\n  'VELOUTE DE PATATES DOUCES AU LAIT DE COCO + ACC 1L(54530)',\n  Decimal('12.00000')],\n ['Woluwe',\n  '4 - 10E VELOUTÉ DE CHAMPIGNONS DE PARIS AU THYM. (GF)(V)(43981)',\n  Decimal('12.00000')],\n ['Woluwe', '4 - 8E MINESTRONE. (GF)(V)(43977)', Decimal('12.00000')],\n ['Woluwe', 'MIGNARDISE AMANDAS DULCEY(33691)', Decimal('12.0000000')],\n ['Woluwe', 'MIGNARDISE AMANDE GIANDUJA CACAO(33690)', Decimal('12.0000000')],\n ['Woluwe',\n  'POTAGE AUX CHAMPIGNONS DES BOIS 1L (Gluten Free)(54532)',\n  Decimal('12.00000')],\n ['Woluwe', 'VELOUTE POTIRON CREME 1/2L(19560)', Decimal('12.0000000')],\n ['Woluwe', 'SAUCE JUS BRUN AU THYM 200ML(55464)', Decimal('11.70000')],\n ['Woluwe', 'PDT GRENAILLE CITRON ET ORIGAN(55889)', Decimal('11.54780')],\n ['Woluwe', '(54453)', Decimal('11.50100')],\n ['Woluwe', 'PETIT SAPIN SABLE(54541)', Decimal('11.50000')],\n ['Woluwe',\n  '4 - 9E SALADE DE POTIRON GRILLÉ, CHÈVRE, FIGUES, NOIX ET GRENADE. (V)(43979)',\n  Decimal('11.10000')],\n ['Woluwe', 'GRAND CIABATTA FTK 350G(38094)', Decimal('10.8000000')],\n ['Woluwe', 'MONT BLANC EN VERRE (+ caution)(34091)', Decimal('10.50000')],\n ['Woluwe', 'RAVIER GRANA PADANO COPEAU 150G(55757)', Decimal('10.05000')],\n ['Woluwe',\n  'BOULETTES DE VOLAILLE AU CITRON / GINGEMBRE / PIMENTS(55555)',\n  Decimal('9.97920')],\n ['Woluwe', 'TARTARE DE SAUMON AU WAKAME 200G(20221)', Decimal('9.95000')],\n ['Woluwe',\n  '1 - 9P CUISSE DE POULET DÉSOSSÉE AU MISO ET CACAHUETES, CHICONS CONFITS AUX OIGNONS, POMMES DE TERRE AU ROMARIN. (43944)',\n  Decimal('9.89000')],\n ['Woluwe', 'YAOURT BIO 212ML(56271)', Decimal('9.80000')],\n ['Woluwe', 'KEFTA + SAUCE(51476)', Decimal('9.63560')],\n ['Woluwe', 'CONFITURE FRAISE FTK(38888)', Decimal('9.5800000')],\n ['Woluwe', '(53423)', Decimal('9.40000')],\n ['Woluwe',\n  'POIS CHICHES GRILLES AU RIZ NOIR / MISO / GRAINE DE SESAME(56138)',\n  Decimal('9.33100')],\n ['Woluwe', 'DOMODO PRIMITIVO 75CL(55952)', Decimal('9.15000')],\n ['Woluwe', 'VELOUTE CHAMPIGNONS DES BOIS 1/2L(38202)', Decimal('9.0000000')],\n ['Woluwe', 'GLACE CHOCOLAT 500ML(40921)', Decimal('9.00000')],\n ['Woluwe', 'PLAT DU JOUR VEGE BOT(56033)', Decimal('9.00000')],\n ['Woluwe', 'PLAT DU JOUR TGTG 9,90 EURO(53612)', Decimal('9.0000000')],\n ['Woluwe', '(53113)', Decimal('8.79580')],\n ['Woluwe', 'CACAHUETE MIEL CRANBERRY 200G(20255)', Decimal('8.70000')],\n ['Woluwe',\n  'COQUELET CUIT PERSILLADE AU CITRON 1PCE(50728)',\n  Decimal('8.70000')],\n ['Woluwe', 'CHIPS DE LEGUMES(51430)', Decimal('8.6000000')],\n ['Woluwe', 'ACC 1 : 300G LEGUMES + 3 CHICONS(55423)', Decimal('8.60000')],\n ['Woluwe', 'BAGUETTE A L ANCIENNE(52047)', Decimal('8.4000000')],\n ['Woluwe', 'MERINGUE(51578)', Decimal('8.3840000')],\n ['Woluwe', 'CRUNCHY ALMONDS 60G(55513)', Decimal('8.30000')],\n ['Woluwe', 'AIRELLE MAISON 200G(19290)', Decimal('8.19000')],\n ['Woluwe', 'AUBERGINES À LA PARMIGIANA(50590)', Decimal('8.0886')],\n ['Woluwe',\n  'CUISSE DE POULET DESOSSEE CUITE AU MISO BLANC(44074)',\n  Decimal('8.06400')],\n ['Woluwe', 'POTAGE CREME PARMESAN 1L(39117)', Decimal('8.0000000')],\n ['Woluwe',\n  'POTAGE CHOU FLEUR/ COCO/ CITRONNELLE 1L(51190)',\n  Decimal('8.0000000')],\n ['Woluwe', 'POTAGE TOMATE ET LAIT DE COCO(56169)', Decimal('8.00000')],\n ['Woluwe',\n  '4 - 2E VELOUTÉ DE CÉLERI-RAVE. (GF)(V)(43961)',\n  Decimal('8.00000')],\n ['Woluwe', 'POTAGE DETOX POTIRON 1/2L(50758)', Decimal('8.00000')],\n ['Woluwe', 'VELOUTE DE BETTERAVE 1L(56118)', Decimal('8.00000')],\n ['Woluwe', 'BOUILLON AU MISO ET ENOKI 1/2L(52765)', Decimal('8.0000000')],\n ['Woluwe', 'POTAGE AU FENOUIL ET TOMATES 1/2L(40680)', Decimal('8.0000000')],\n ['Woluwe',\n  'POTAGE BOUILLON POULE LEGUMES DE SAISON ET CURCUMA(39116)',\n  Decimal('8.00000')],\n ['Woluwe', 'TARTARE DE SAUMON AU WAKAME 100G(55840)', Decimal('7.95000')],\n ['Woluwe',\n  'VINAIGRETTE SESAME LEMON POMEGRANATE 250ML(54496)',\n  Decimal('7.90000')],\n ['Woluwe', 'VINAIGRETTE THAI 250ML(18977)', Decimal('7.90000')],\n ['Woluwe', 'NOEL : 5 PETITES BOULES CHOCOLAT(38354)', Decimal('7.90000')],\n ['Woluwe', 'BICHE FILET CRU + BARDE(34095)', Decimal('7.84608')],\n ['Woluwe', 'SAUCE CREME POIVRE VERT 400ML(53420)', Decimal('7.80000')],\n ['Woluwe', 'SAUCE VIN BLANC CREME 400ML(54563)', Decimal('7.80000')],\n ['Woluwe',\n  'SAUCE BRUNE AIRELLES/THYM/TAMARIN 400ML(50132)',\n  Decimal('7.80000')],\n ['Woluwe', 'SACHET HEALTHY 150G(55968)', Decimal('7.80000')],\n ['Woluwe',\n  'TACCHINO / SALSA TONNATA / ANCHOIS / CAPRES(18784)',\n  Decimal('7.7280000')],\n ['Woluwe', 'CIABATTA 1/2 (PCE)(36492)', Decimal('7.7000000')],\n ['Woluwe', 'COQ AU VIN : CUISSE(51515)', Decimal('7.51400')],\n ['Woluwe',\n  'PORTOBELLO CHILI SIN CARNE RICOTTA PARMESAN(40760)',\n  Decimal('7.42560')],\n ['Woluwe',\n  '1 - 7E BOULGOUR, POIS CHICHES, EDAMAME, POTIRON GRILLÉ ET GRENADE. (V)(43835)',\n  Decimal('7.40000')],\n ['Woluwe',\n  '2 - 11E SALADE DE LÉGUMES PROVENÇAUX, QUINOA, POIS CHICHES ET CHERMOULA. (GF)(V)(43964)',\n  Decimal('7.40000')],\n ['Woluwe', 'POTAGE DE POISSONS (1/2L)(40690)', Decimal('7.00000')],\n ['Woluwe', 'BOL BRUSCHETTE NATURE(36809)', Decimal('6.90000')],\n ['Woluwe', 'MONT MARRON EN VASE(40417)', Decimal('6.80000')],\n ['Woluwe',\n  'SALADE LENTILLES NOIRES ET VERTES FETA PETITS POIS(55710)',\n  Decimal('6.77040')],\n ['Woluwe', 'BUTTER CHICKEN(55573)', Decimal('6.32460')],\n ['Woluwe',\n  'KORMA DE LEGUMES DE SAISON ET NOIX DE CAJOU(54461)',\n  Decimal('6.18800')],\n ['Woluwe',\n  'CHAMPIGNONS DE PARIS SAUTES / OIGNONS / HUILE AU PAPRIKA / BASILIC(54426)',\n  Decimal('6.16200')],\n ['Woluwe',\n  'SALADE FREGOLA PANAIS CAROTTE AIRELLE(54492)',\n  Decimal('6.11940')],\n ['Woluwe', 'MIGNARDISE AMANDE GIANDUJA SUCRE(33689)', Decimal('6.0000000')],\n ['Woluwe', 'MIGNARDISE GRAIN CAFE (38905)', Decimal('6.0000000')],\n ['Woluwe', 'BRU PETILLANTE PLASTIQUE 50 CL(19866)', Decimal('6.00000')],\n ['Woluwe', 'SACHET DE CUBERDON(19814)', Decimal('6.0000')],\n ['Woluwe', 'None(51791)', Decimal('5.90000')],\n ['Woluwe',\n  'COMPOTE DE POMMES / FRAISES / RHUBARBE 400G(19263)',\n  Decimal('5.85000')],\n ['Woluwe',\n  'ESCALOPE DE DINDE / GRUYERE / LARD / PARMESAN(54414)',\n  Decimal('5.76000')],\n ['Woluwe', 'WASABI PEAS 90G(20283)', Decimal('5.70000')],\n ['Woluwe', 'SALADE FRUIT SAISON (18708)', Decimal('5.6922000')],\n ['Woluwe',\n  'BOULETTES SAUCE BRUNE AUX PRUNES ET AIRELLES(55590)',\n  Decimal('5.61100')],\n ['Woluwe', 'BATONNET POULET CUIT MISO CACAHUETE(51834)', Decimal('5.61080')],\n ['Woluwe', 'ACC 1  :  2 POMMES AIRELLES(38073)', Decimal('5.2000000')],\n ['Woluwe', 'CREMA TONNATA(52363)', Decimal('5.18700')],\n ['Woluwe', 'GRUYERE/EMMENTAL(18673)', Decimal('5.03880')],\n ['Woluwe', 'FENOUIL CELERI ET PDT(51483)', Decimal('5.03100')],\n ['Woluwe', 'YAOURT BIO 212ML(56270)', Decimal('4.90000')],\n ['Woluwe', 'SALADE QUINOA(18059)', Decimal('4.86080')],\n ['Woluwe', 'PAVLOVA ON THE GO(38903)', Decimal('4.85000')],\n ['Woluwe', 'CONFITURE ORANGE FTK(38890)', Decimal('4.7900000')],\n ['Woluwe', 'CONFITURE ABRICOT FTK(38892)', Decimal('4.7900000')],\n ['Woluwe', 'CONFITURE CERISE FTK(38891)', Decimal('4.7900000')],\n ['Woluwe', 'CONFITURE FRAMBOISE FTK(38894)', Decimal('4.7900000')],\n ['Woluwe', 'SABLE POIRE CREME AMANDE PORTION(19717)', Decimal('4.55000')],\n ['Woluwe', 'MINI SATE POULET SAUCE CACAHUETE(18731)', Decimal('4.5319200')],\n ['Woluwe', 'BOUILLON THAI (19122)', Decimal('4.5000')],\n ['Woluwe',\n  'SALADE DE POMMES DE TERRE AU RAIFORT ET A LA CIBOULETTE(52984)',\n  Decimal('4.48880')],\n ['Woluwe', 'COOKIE CHOCOLAT BLANC CAJOU 1PCE(18973)', Decimal('4.44000')],\n ['Woluwe',\n  'SALADE FREGOLA PANAIS CAROTTE AIRELLE(54491)',\n  Decimal('4.38340')],\n ['Woluwe', 'DIPS CREME DE RAIFORT 200G(54394)', Decimal('4.34000')],\n ['Woluwe', 'SANDWICH SUEDOIS GD (SAUMON)(20053)', Decimal('4.25000')],\n ['Woluwe', 'RIZ BASMATI NATURE(18583)', Decimal('4.16392')],\n ['Woluwe',\n  'CANNELLONI BOLOGNAISE / TOMATES / CAROTTES / FENOUIL / OIGNONS(51540)',\n  Decimal('4.15480')],\n ['Woluwe', 'HOMEMADE CRACKERS 100G(56106)', Decimal('4.15000')],\n ['Woluwe', 'CHICKEN SOUP FOR THE SOUL 1/2L(40564)', Decimal('4.0000000')],\n ['Woluwe',\n  '2 - 12E BOUILLON AU MISO ET ENOKI. (GF)(V)(43966)',\n  Decimal('4.00000')],\n ['Woluwe',\n  '4 - 12E BOUILLON THAÏ AUX DÉS DE TOMATES. (GF)(V)(44004)',\n  Decimal('4.00000')],\n ['Woluwe', 'POTAGE LEGUMES DU MARCHE 1/2L(19544)', Decimal('4.0000000')],\n ['Woluwe',\n  '3 - 10E VELOUTÉ DE BETTERAVE ROUGE. (GF)(V)(43925)',\n  Decimal('4.00000')],\n ['Woluwe', 'TARTARE DE DAURADE AU WAKAME 100G(56474)', Decimal('3.99000')],\n ['Woluwe', 'VINAIGRETTE BUSABA 250ML(18985)', Decimal('3.95000')],\n ['Woluwe', 'PAVLOVA FRUIT ROUGE(52139)', Decimal('3.9500000')],\n ['Woluwe', 'VINAIGRETTE MOUTARDE 250ML(19202)', Decimal('3.95000')],\n ['Woluwe', 'SAUCE GRAND VENEUR 200ML(50058)', Decimal('3.90000')],\n ['Woluwe',\n  '1 - 9E SALADE DE CHOU BLANC ET WAKAMÉ, VINAIGRETTE AU WASABI. (GF)(V)(43837)',\n  Decimal('3.70000')],\n ['Woluwe',\n  '3 - 13E SALADE DE CHOU BLANC ET WAKAMÉ, VINAIGRETTE WASABI. (GF)(V)(43955)',\n  Decimal('3.70000')],\n ['Woluwe',\n  '1 - 13E SALADE DE FREGOLA, PANAIS, CAROTTES ET AIRELLES. (V)(43841)',\n  Decimal('3.70000')],\n ['Woluwe',\n  '2 - 5E  SALADE DE POIS CHICHES GRILLÉS, RIZ NOIR, MISO ET GRAINES DE SÉSAME. (V)(43951)',\n  Decimal('3.70000')],\n ['Woluwe',\n  '2 - 1E SALADE DE POTIRON, CHÈVRE, FIGUES ET NOIX, VINAIGRETTE À LA GRENADE. (GF)(V)(43940)',\n  Decimal('3.70000')],\n ['Woluwe',\n  '3 - 7E TABOULÉ LIBANAIS AUX TOMATES ET HERBES VERTES. (V)(51271)',\n  Decimal('3.70000')],\n ['Woluwe', 'BAGUETTE PARISIENNE(19870)', Decimal('3.6000')],\n ['Woluwe', 'MOUSSE CHOCOLAT EN VERRE(40404)', Decimal('3.5000000')],\n ['Woluwe', 'TIRAMISU SPECULOOS 110G(40976)', Decimal('3.5000000')],\n ['Woluwe', 'MOUSSE CHOCOLAT 110G(40977)', Decimal('3.5000000')],\n ['Woluwe', 'RAVIER GRANA PADANO MOULU 150G(55758)', Decimal('3.35000')],\n ['Woluwe', 'ASSIETTE ARCOPAL ZELIE 20 CM(56039)', Decimal('3.00000')],\n ['Woluwe', 'SAUCE ESTRAGON/DÉS DE TOMATE(51212)', Decimal('2.92500')],\n ['Woluwe',\n  'SALADE RIZ SAUVAGE AUX AMANDES / HERBES(55624)',\n  Decimal('2.90780')],\n ['Woluwe', 'BATONNETS DE COURGETTES ROTIS(55638)', Decimal('2.85980')],\n ['Woluwe', 'COCA COLA REGULAR 33 CL(53300)', Decimal('2.80000')],\n ['Woluwe', 'SALADE POULET AUX HERBES(18134)', Decimal('2.7150000')],\n ['Woluwe', 'COCA NORMAL 20CL VERRE(34611)', Decimal('2.7000000')],\n ['Woluwe', 'EAU PETILLANTE BRU 50CL TAKE OUT(52629)', Decimal('2.6000000')],\n ['Woluwe', 'YAOURT BIO 212ML(56268)', Decimal('2.45000')],\n ['Woluwe', 'YAOURT BIO 212ML(56269)', Decimal('2.45000')],\n ['Woluwe', 'SAUCE CREME VIN BLANC / CITRON(52367)', Decimal('2.41800')],\n ['Woluwe', 'COCA ZERO(51767)', Decimal('2.0000000')],\n ['Woluwe', 'COCA COLA (51766)', Decimal('2.0000000')],\n ['Woluwe', 'None(53271)', Decimal('1.6000000')],\n ['Woluwe', 'SACHET HEALTHY 40G(55973)', Decimal('1.25000')],\n ['Woluwe', 'BRIOCHE TETE CUITE (40315)', Decimal('1.0000000')],\n ['Woluwe', 'ENCAISSEMENT POUR ATELIER(35119)', Decimal('1.0000')],\n ['Woluwe', 'VENTE COMPTOIR FETE 6%(38404)', Decimal('0.00000')],\n ['Woluwe', 'VENTE CAUTIONS FETE 0%(34700)', Decimal('0.00000')],\n ['Woluwe', 'POINT DE FIDELITE(34721)', Decimal('0.0000')],\n ['Woluwe', '(52850)', Decimal('-6.00000')],\n ['Woluwe',\n  \"DINDONNEAU FARCI AUX FRUITS D'HIVER / JUS BRUN LEGEREMENT CREME (4 PERS.)(54536)\",\n  Decimal('-54.80000')],\n ['Woluwe', 'CAUTION VERRE 6CM(19937)', Decimal('-118.00000')],\n ['Woluwe', 'CAUTION VERRINE/JATTE(19939)', Decimal('-165.5000000')],\n ['Woluwe', 'CAUTION VASE DONAU GRAND 35 CM(19941)', Decimal('-350.0000000')],\n ['Woluwe', 'CAUTION VASE DONAU PETIT 18 CM(19943)', Decimal('-560.0000000')],\n ['Woluwe', 'Discount(20548)', Decimal('-853.62000')],\n ['Woluwe', 'CAUTION VASE DONAU MOYEN 28 CM(19942)', Decimal('-1785.0000000')]]\n\n\n\ndef get_last_week_best_selling_products(shops=[]):\n    today = datetime.datetime.now().date()\n    start_date = (today - datetime.timedelta(days=7)).strftime(\"%Y-%m-%d\")\n    end_date = today.strftime(\"%Y-%m-%d\")    \n    return get_best_selling_products(start_date, end_date, shops)\n\n\ndisplay_top_selling_products_per_column(shops=['Fort Jaco','Wemmel','La Hulpe','CHATELAIN','Woluwe', 'LATEM'], top_n=20)\n\n\n\n\n\n\n \nrank\nFort Jaco\nWemmel\nLa Hulpe\nCHATELAIN\nWoluwe\nLATEM\n\n\n\n\n0\n1\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\nLEGUMES / SALADES 21,7 EURO/KG(54420)\nLEGUMES / SALADES 21,7 EURO/KG(54420)\nDIVERS PIECE BALANCE(54437)\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\nLEGUMES / SALADES 21,7 EURO/KG(54420)\n\n\n1\n2\nGAMBAS GEANTES (50610)\nGAMBAS GEANTES (50610)\nLOTTE EPICEE(51181)\nDIVERS POIDS BALANCE(53935)\nGIFT CARD FTK(54569)\nJARDINIERE LEGUMES MARCHE / AIL / HERBES / CITRON(18521)\n\n\n2\n3\nTIRADITO DE SAUMON / SESAME / PIMENTS(53784)\nBAR EPICE(50689)\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\nPLAT DU JOUR 10.9(19322)\nPOULET AU ROMARIN (18191)\nDOS DE CABILLAUD EPICE(53764)\n\n\n3\n4\nPOULET AU ROMARIN (18191)\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\nBAR EPICE(50689)\nLEGUMES / SALADES 24,7 EURO/KG(54419)\nBAR EPICE(50689)\nPAVLOVA AUX FRUITS ROUGES EN VASE(19842)\n\n\n4\n5\nLEGUMES / SALADES 21,7 EURO/KG(54420)\nTARTIFLETTE(57765)\nASPERGE VERTE ET SUGAR SNAPS (40762)\nCHAMPIGNONS DES BOIS SAUTES(51532)\nLEGUMES / SALADES 21,7 EURO/KG(54420)\nBAR EPICE(50689)\n\n\n5\n6\nSCAMPIS / OIGNONS / TOMATES SECHEES(50615)\nFILET DE CABILLAUD EN CROUTE DE PERSIL ET MOUTARDE(53780)\nCHAMPIGNONS DES BOIS SAUTES(51532)\nTOMATE CREVETTES GRISES(18655)\nPOMMES DE TERRE AU PARMESAN(50645)\nSAUMON MI CUIT EPICE(53011)\n\n\n6\n7\nDOS DE CABILLAUD EPICE(53764)\nBUFFET TOUR DU MONDE (prix/pers)(19430)\nMAGRET DE CANARD EN SAUCE(40752)\nSCAMPIS / OIGNONS / TOMATES SECHEES(50615)\nBUFFET DOLCE FARNIENTE (prix/pers)(19531)\nOSSO BUCO DE VEAU CLASSICO(51282)\n\n\n7\n8\nCOQUELET CUIT + SAUCE COMPTOIR(55577)\nTARTARE DE SAUMON / SESAME NOIRE / WAKAME 400G (Gluten Free)(55885)\nPOMMES DE TERRE AU PARMESAN(50645)\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\nCOCKTAIL LE 8 PCS (19429)\nGAMBAS GEANTES (50610)\n\n\n8\n9\nBELLES DE FONTENAY / GROS SEL / ROMARIN(18602)\nMAGRET DE CANARD EN SAUCE(40752)\nSAUCE COMPTOIR CHAUDE(38021)\nPAVLOVA AUX FRUITS ROUGES EN VASE(19842)\nSAUMON MI CUIT EPICE(53011)\nTIRADITO DE SAUMON / SESAME / PIMENTS(53784)\n\n\n9\n10\nPAIN DE VIANDE NATURE(51722)\nSAUMON MI-CUIT LAQUE AU SOJA / SESAME(40729)\nTARTARE DE SAUMON / SESAME NOIRE / WAKAME - 200G(43712)\nGAMBAS GEANTES (50610)\nASPERGE VERTE ET SUGAR SNAPS (40762)\nWATERZOOI POISSON(51330)\n\n\n10\n11\nASPERGE VERTE ET SUGAR SNAPS (40762)\nLEGUMES PROVENCAUX(18517)\nTARTIFLETTE(57765)\nLOTTE EPICEE(51181)\nSALADE GO GREEN SUCRINE / HARICOTS VERTS / COURGETTES / EDAMAME / AVOCATS(52986)\nTARTE MOELLEUX CHOCOLAT PORTION(19723)\n\n\n11\n12\nSALADE THAI(52963)\nTHON ALBACORE EPICE CUIT(18440)\nSAUMON MI CUIT EPICE(53011)\nPLAT DU JOUR 13.90(19319)\nCHAMPIGNONS DES BOIS SAUTES(51532)\nSAUMON FUME TRANCHE MAIN (250gr)(38138)\n\n\n12\n13\nCHAMPIGNONS DES BOIS SAUTES(51532)\nLOTTE EPICEE(51181)\nGAMBAS GEANTES (50610)\nBELLES DE FONTENAY / GROS SEL / ROMARIN(18602)\nCHICONS BRAISES / UNION SQUARE NUTS / OIGNONS(51524)\nSUPREME DE POULET / STRACCIATELLA DI BUFALA / CHAMPIGNONS / ESTRAGON(55643)\n\n\n13\n14\nLEGUMES PROVENCAUX(18517)\nPOMMES DE TERRE AU PARMESAN(50645)\nSCAMPIS / OIGNONS / TOMATES SECHEES(50615)\nBAR EPICE(50689)\nMENU JINGLE BELLS (HORS DESSERT)(57655)\nFILET DE BOEUF / CROUTE D'HERBES / GRAINES DE MOUTARDE(40750)\n\n\n14\n15\nPLAT DU JOUR 9.9 COMPTOIR(34712)\nDOS DE CABILLAUD EPICE(53764)\nPAVLOVA AUX FRUITS ROUGES EN VASE(19842)\nTARTARE DE SAUMON / SESAME NOIRE / WAKAME - 200G(43712)\nDOS DE CABILLAUD EPICE(53764)\nTARTIFLETTE(57765)\n\n\n15\n16\nJARDINIERE LEGUMES MARCHE / AIL / HERBES / CITRON(18521)\nPAVLOVA AUX FRUITS ROUGES EN VASE(19842)\nPOULET AU ROMARIN (18191)\nASPERGE VERTE ET SUGAR SNAPS (40762)\nSCAMPIS / OIGNONS / TOMATES SECHEES(50615)\nTARTARE DE SAUMON / SESAME NOIRE / WAKAME - 200G(43712)\n\n\n16\n17\nTARTARE DE SAUMON / SESAME NOIRE / WAKAME 400G (Gluten Free)(55885)\nSCAMPIS / OIGNONS / TOMATES SECHEES(50615)\nCOQUELET CUIT + SAUCE COMPTOIR(55577)\nLEGUMES PROVENCAUX(18517)\nMAGRET DE CANARD EN SAUCE(40752)\nCHAMPIGNONS DES BOIS SAUTES(51532)\n\n\n17\n18\nPUREE NATURE 400G(19281)\nPOULPE A L'ITALIENNE(44072)\nDOS DE CABILLAUD EPICE(53764)\nPOULET AU ROMARIN (18191)\nSUPREME DE POULET / STRACCIATELLA DI BUFALA / CHAMPIGNONS / ESTRAGON(55643)\nLEGUMES PROVENCAUX(18517)\n\n\n18\n19\nBAR EPICE(50689)\nBUFFET DOLCE FARNIENTE (prix/pers)(19531)\nJARDINIERE LEGUMES MARCHE / AIL / HERBES / CITRON(18521)\nPUREE NATURE 400G(19281)\nJARDINIERE LEGUMES MARCHE / AIL / HERBES / CITRON(18521)\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\n\n\n19\n20\nFILET DE BOEUF / CROUTE D'HERBES / GRAINES DE MOUTARDE(40750)\nJARDINIERE LEGUMES MARCHE / AIL / HERBES / CITRON(18521)\nBELLES DE FONTENAY / GROS SEL / ROMARIN(18602)\nSALADE THAI(52963)\nLOTTE EPICEE(51181)\nCUISSE DE POULET DESOSSEE CUITE AU MISO BLANC(44074)"
  },
  {
    "objectID": "stock outs.html",
    "href": "stock outs.html",
    "title": "foodcosts",
    "section": "",
    "text": "import foodcosts.core as core\nimport pandas as pd\n\n\n\n\nget_current_stock_outs\n\n get_current_stock_outs ()\n\n\nget_current_stock_outs()\n\n\n\n\n\n\n\n\nproduct_name\ncode\nshop_acronym\navailable_qty\navailable_qty_rounded\nproduct_min_qty\nproduct_max_qty\nuom\nuom legible\nconverted_qty\nnbr_days_since_last_sent\n\n\n\n\n0\nHACHIS PARMENTIER\n9787 - 41 / FTK\nWEM\n0.000\n0.000\n0.500\n1.000\nKG\nBarquette 0,5Kg\nNone\n0.0\n\n\n1\nPOULET FERME CUIT\n9520 - 01 / FTK\nLAH\n-7.939\n-7.939\n1.000\n1.000\nKG\nBarquette 1kg\n-8\n4.0\n\n\n2\nDINDE ESCALOPE PANEE SAUCE + COULIS\n9445 - 42 / FTK\nLAH\n2.256\n2.256\n3.000\n3.000\nKG\nPièce 0,4 kg\n6\n2.0\n\n\n3\nDINDE ESCALOPE PANEE SAUCE + COULIS\n9445 - 42 / FTK\nWEM\n1.200\n1.200\n1.500\n3.000\nKG\nPièce 0,4 kg\n3\n2.0\n\n\n4\nWASABI NUTS PETIT POT\n9817 - 76 / FTK\nLAH\n2.000\n2.000\n4.000\n8.000\nUnit(s)\nNone\nNone\n22.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n355\nBEIRUT CHICKPEA BALLS / HOUMOUS MAISON\n9587 - 80 / FTK\nWOL\n1.000\n1.000\n2.000\n4.000\nUnit(s)\nNone\nNone\n0.0\n\n\n356\nCHILI SIN CARNE AUX POIS CHICHE / CHAKCHOUKA A...\n7742 - 92 / FTK\nLAH\n0.000\n0.000\n4.000\n6.000\nUnit(s)\nNone\nNone\n9.0\n\n\n357\nCHILI SIN CARNE AUX POIS CHICHE / CHAKCHOUKA A...\n7742 - 92 / FTK\nFOJ\n0.000\n0.000\n4.000\n6.000\nUnit(s)\nNone\nNone\n2.0\n\n\n358\nCHILI SIN CARNE AUX POIS CHICHE / CHAKCHOUKA A...\n7742 - 92 / FTK\nCHA\n0.000\n0.000\n1.000\n2.000\nUnit(s)\nNone\nNone\n16.0\n\n\n359\nSAUCE LAQUE AUX POIVRONS\n7572 - 33 / FTK\nWEM\n0.000\n0.000\n3.000\n3.000\nKG\nSeau 3kg\nNone\n32.0\n\n\n\n\n360 rows × 11 columns\n\n\n\n\ncolumns = [\"product_name\",\"code\",\"shop_acronym\",\"available_qty\",\"available_qty_rounded\",\n           \"product_min_qty\",\"product_max_qty\", \"uom\", \"uom legible\", \"converted_qty\", \"nbr_days_since_last_sent\"]\n#coalesce(location_qties.available_qty,0) as available_qty,\n# round(coalesce(location_qties.available_qty,0)::numeric,3) as available_qty_rounded,\n# orderpoint.product_min_qty,\n# orderpoint.product_max_qty,"
  },
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "core",
    "section": "",
    "text": "#!pip install --upgrade 'configparser'\n\n\nsource\n\nget_credentials\n\n get_credentials ()\n\n\nsource\n\n\nget_db_connection_string\n\n get_db_connection_string ()\n\n\nget_db_connection_string()\n\nconfig.ini file available... using that\n\n\n'postgresql://reporting:soifdeknowledge@db13.fthek.be:5432/fonteynev13prod'\n\n\n\nsource\n\n\nsend_mail\n\n send_mail (to='', subject='', body='')\n\n\nsource\n\n\nget_query_res_as_pd\n\n get_query_res_as_pd (query)\n\n\nget_query_res_as_pd(\"select * from v_shop;\")\n\nconfig.ini file available... using that\n\n\n\n\n\n\n\n\n\nid\nname\n\n\n\n\n0\n1\nATELIER\n\n\n1\n2\nLa Hulpe\n\n\n2\n3\nFort Jaco\n\n\n3\n4\nWoluwe\n\n\n4\n6\nTongres\n\n\n5\n7\nWemmel\n\n\n6\n12\nCHATELAIN\n\n\n7\n36\nOVERIJSE\n\n\n8\n39\nLATEM\n\n\n9\n46\nPAVLOVA BAR ANVERS\n\n\n\n\n\n\n\n\nsource\n\n\nmake_sql_query\n\n make_sql_query (QUERY)\n\n\nsource\n\n\nget_shop_names\n\n get_shop_names ()\n\n\nsource\n\n\nget_corporate_restaurants\n\n get_corporate_restaurants ()\n\n\nget_corporate_restaurants()\n\nconfig.ini file available... using that\n\n\n['R.E. ALLEN & OVERY',\n 'R.E. LHOIST CORBAIS',\n 'R.E. ZAVENTEM',\n 'R.E. CEFIC',\n 'R.E ALOST',\n 'R.E LHOIST NIVELLES',\n 'R.E LHOIST LIMELETTE',\n 'BOTANIC TOWER',\n 'R.E ENGIE',\n 'R.E THE HIVE',\n 'R.E EUROCONTROL',\n 'R.E LIGHTHOUSE',\n 'Immogra Park7',\n 'R.E. JanDeNul',\n 'ARAMIS',\n 'R.E. GLAVERBEL',\n 'R.E WPP']\n\n\n\nsource\n\n\nget_shop_id\n\n get_shop_id (shop_name)\n\n\nget_shop_id('La Hulpe')\n\nconfig.ini file available... using that\n\n\n2\n\n\n\nsource\n\n\nget_corporate_restaurant_id\n\n get_corporate_restaurant_id (shop_name)\n\n\nget_corporate_restaurant_id('R.E THE HIVE')\n\nconfig.ini file available... using that\n\n\n42\n\n\n\nget_shop_names()\n\nconfig.ini file available... using that\n\n\n['La Hulpe',\n 'Fort Jaco',\n 'Woluwe',\n 'Tongres',\n 'Wemmel',\n 'CHATELAIN',\n 'OVERIJSE',\n 'LATEM']\n\n\n\nsource\n\n\nget_sales_over_period_in_shop_names_and_product\n\n get_sales_over_period_in_shop_names_and_product (start_date, end_date,\n                                                  shop_names, product_id)\n\n\nsource\n\n\nget_sales_over_period_for_shops_and_product_query\n\n get_sales_over_period_for_shops_and_product_query (start_date, end_date,\n                                                    shop_names,\n                                                    product_id)\n\n\nsource\n\n\nget_products_sold_for_a_shop\n\n get_products_sold_for_a_shop (start_date, end_date, shop_name)\n\n\nsource\n\n\nget_products_sold_for_a_re\n\n get_products_sold_for_a_re (start_date, end_date, shop_name)\n\n\nsource\n\n\nget_products_sold_for_a_re_as_pd\n\n get_products_sold_for_a_re_as_pd (start_date, end_date, shop_name)\n\n\nsource\n\n\nget_today_date_string\n\n get_today_date_string ()\n\n\nget_today_date_string()\n\n'2023-03-20'\n\n\n\nsource\n\n\nget_previous_n_day\n\n get_previous_n_day (n)\n\n\nsource\n\n\nget_yesterday\n\n get_yesterday ()\n\n\nget_yesterday()\n\n'2023-03-19'\n\n\n\nchicken_sales_latem_woluwe = get_sales_over_period_in_shop_names_and_product('2022-01-01', get_today_date_string(), ['Woluwe','LATEM'], 18191)\n\nconfig.ini file available... using that\n\n\n\nchicken_sales_latem_woluwe\n\n[('LATEM',\n  datetime.date(2022, 1, 27),\n  'POULET AU ROMARIN ',\n  Decimal('2.384'),\n  Decimal('30.75360')),\n ('LATEM',\n  datetime.date(2022, 2, 5),\n  'POULET AU ROMARIN ',\n  Decimal('1.124'),\n  Decimal('14.49960')),\n ('LATEM',\n  datetime.date(2022, 2, 6),\n  'POULET AU ROMARIN ',\n  Decimal('2.432'),\n  Decimal('31.37280')),\n ('LATEM',\n  datetime.date(2022, 4, 5),\n  'POULET AU ROMARIN ',\n  Decimal('0.536'),\n  Decimal('6.91440')),\n ('LATEM',\n  datetime.date(2022, 6, 12),\n  'POULET AU ROMARIN ',\n  Decimal('1.174'),\n  Decimal('15.14460')),\n ('LATEM',\n  datetime.date(2022, 8, 31),\n  'POULET AU ROMARIN ',\n  Decimal('0.734'),\n  Decimal('9.46860')),\n ('LATEM',\n  datetime.date(2022, 11, 17),\n  'POULET AU ROMARIN ',\n  Decimal('1.136'),\n  Decimal('14.65440')),\n ('LATEM',\n  datetime.date(2022, 11, 18),\n  'POULET AU ROMARIN ',\n  Decimal('0.516'),\n  Decimal('6.65640')),\n ('LATEM',\n  datetime.date(2022, 12, 1),\n  'POULET AU ROMARIN ',\n  Decimal('1.038'),\n  Decimal('13.39020')),\n ('LATEM',\n  datetime.date(2022, 12, 2),\n  'POULET AU ROMARIN ',\n  Decimal('1.104'),\n  Decimal('14.24160')),\n ('LATEM',\n  datetime.date(2022, 12, 16),\n  'POULET AU ROMARIN ',\n  Decimal('1.636'),\n  Decimal('21.10440')),\n ('LATEM',\n  datetime.date(2022, 12, 19),\n  'POULET AU ROMARIN ',\n  Decimal('1.130'),\n  Decimal('14.57700')),\n ('LATEM',\n  datetime.date(2022, 12, 20),\n  'POULET AU ROMARIN ',\n  Decimal('1.036'),\n  Decimal('13.36440')),\n ('LATEM',\n  datetime.date(2022, 12, 22),\n  'POULET AU ROMARIN ',\n  Decimal('2.302'),\n  Decimal('29.69580')),\n ('LATEM',\n  datetime.date(2023, 1, 21),\n  'POULET AU ROMARIN ',\n  Decimal('4.250'),\n  Decimal('54.82500')),\n ('LATEM',\n  datetime.date(2023, 1, 23),\n  'POULET AU ROMARIN ',\n  Decimal('0.524'),\n  Decimal('6.75960')),\n ('LATEM',\n  datetime.date(2023, 1, 24),\n  'POULET AU ROMARIN ',\n  Decimal('1.168'),\n  Decimal('15.06720')),\n ('LATEM',\n  datetime.date(2023, 1, 25),\n  'POULET AU ROMARIN ',\n  Decimal('1.044'),\n  Decimal('13.46760')),\n ('LATEM',\n  datetime.date(2023, 1, 27),\n  'POULET AU ROMARIN ',\n  Decimal('0.688'),\n  Decimal('8.87520')),\n ('LATEM',\n  datetime.date(2023, 1, 28),\n  'POULET AU ROMARIN ',\n  Decimal('1.134'),\n  Decimal('14.62860')),\n ('LATEM',\n  datetime.date(2023, 2, 1),\n  'POULET AU ROMARIN ',\n  Decimal('1.032'),\n  Decimal('13.31280')),\n ('LATEM',\n  datetime.date(2023, 2, 4),\n  'POULET AU ROMARIN ',\n  Decimal('3.366'),\n  Decimal('43.42140')),\n ('LATEM',\n  datetime.date(2023, 2, 5),\n  'POULET AU ROMARIN ',\n  Decimal('1.050'),\n  Decimal('13.54500')),\n ('LATEM',\n  datetime.date(2023, 2, 6),\n  'POULET AU ROMARIN ',\n  Decimal('1.350'),\n  Decimal('17.41500')),\n ('LATEM',\n  datetime.date(2023, 2, 9),\n  'POULET AU ROMARIN ',\n  Decimal('1.430'),\n  Decimal('18.44700')),\n ('LATEM',\n  datetime.date(2023, 2, 17),\n  'POULET AU ROMARIN ',\n  Decimal('0.464'),\n  Decimal('5.98560')),\n ('LATEM',\n  datetime.date(2023, 2, 18),\n  'POULET AU ROMARIN ',\n  Decimal('0.884'),\n  Decimal('11.40360')),\n ('LATEM',\n  datetime.date(2023, 2, 19),\n  'POULET AU ROMARIN ',\n  Decimal('2.150'),\n  Decimal('27.73500')),\n ('LATEM',\n  datetime.date(2023, 2, 22),\n  'POULET AU ROMARIN ',\n  Decimal('1.688'),\n  Decimal('21.77520')),\n ('LATEM',\n  datetime.date(2023, 2, 23),\n  'POULET AU ROMARIN ',\n  Decimal('0.572'),\n  Decimal('7.37880')),\n ('LATEM',\n  datetime.date(2023, 2, 24),\n  'POULET AU ROMARIN ',\n  Decimal('0.952'),\n  Decimal('12.28080')),\n ('LATEM',\n  datetime.date(2023, 2, 25),\n  'POULET AU ROMARIN ',\n  Decimal('4.502'),\n  Decimal('58.07580')),\n ('LATEM',\n  datetime.date(2023, 2, 26),\n  'POULET AU ROMARIN ',\n  Decimal('2.716'),\n  Decimal('35.03640')),\n ('LATEM',\n  datetime.date(2023, 2, 27),\n  'POULET AU ROMARIN ',\n  Decimal('3.056'),\n  Decimal('39.42240')),\n ('LATEM',\n  datetime.date(2023, 3, 1),\n  'POULET AU ROMARIN ',\n  Decimal('0.414'),\n  Decimal('5.34060')),\n ('LATEM',\n  datetime.date(2023, 3, 2),\n  'POULET AU ROMARIN ',\n  Decimal('1.348'),\n  Decimal('17.38920')),\n ('LATEM',\n  datetime.date(2023, 3, 3),\n  'POULET AU ROMARIN ',\n  Decimal('2.686'),\n  Decimal('34.64940')),\n ('LATEM',\n  datetime.date(2023, 3, 4),\n  'POULET AU ROMARIN ',\n  Decimal('0.752'),\n  Decimal('9.70080')),\n ('LATEM',\n  datetime.date(2023, 3, 5),\n  'POULET AU ROMARIN ',\n  Decimal('3.214'),\n  Decimal('41.46060')),\n ('LATEM',\n  datetime.date(2023, 3, 6),\n  'POULET AU ROMARIN ',\n  Decimal('1.368'),\n  Decimal('17.64720')),\n ('LATEM',\n  datetime.date(2023, 3, 8),\n  'POULET AU ROMARIN ',\n  Decimal('1.040'),\n  Decimal('13.41600')),\n ('LATEM',\n  datetime.date(2023, 3, 11),\n  'POULET AU ROMARIN ',\n  Decimal('2.646'),\n  Decimal('34.13340')),\n ('LATEM',\n  datetime.date(2023, 3, 15),\n  'POULET AU ROMARIN ',\n  Decimal('0.992'),\n  Decimal('12.79680')),\n ('LATEM',\n  datetime.date(2023, 3, 17),\n  'POULET AU ROMARIN ',\n  Decimal('0.524'),\n  Decimal('6.75960')),\n ('LATEM',\n  datetime.date(2023, 3, 18),\n  'POULET AU ROMARIN ',\n  Decimal('1.964'),\n  Decimal('25.33560')),\n ('LATEM',\n  datetime.date(2023, 3, 19),\n  'POULET AU ROMARIN ',\n  Decimal('1.444'),\n  Decimal('18.62760')),\n ('Woluwe',\n  datetime.date(2022, 1, 2),\n  'POULET AU ROMARIN ',\n  Decimal('25.600'),\n  Decimal('330.24000')),\n ('Woluwe',\n  datetime.date(2022, 1, 3),\n  'POULET AU ROMARIN ',\n  Decimal('1.814'),\n  Decimal('23.40060')),\n ('Woluwe',\n  datetime.date(2022, 1, 4),\n  'POULET AU ROMARIN ',\n  Decimal('1.508'),\n  Decimal('19.45320')),\n ('Woluwe',\n  datetime.date(2022, 1, 5),\n  'POULET AU ROMARIN ',\n  Decimal('1.280'),\n  Decimal('16.51200')),\n ('Woluwe',\n  datetime.date(2022, 1, 6),\n  'POULET AU ROMARIN ',\n  Decimal('6.510'),\n  Decimal('83.97900')),\n ('Woluwe',\n  datetime.date(2022, 1, 7),\n  'POULET AU ROMARIN ',\n  Decimal('2.172'),\n  Decimal('28.01880')),\n ('Woluwe',\n  datetime.date(2022, 1, 8),\n  'POULET AU ROMARIN ',\n  Decimal('5.472'),\n  Decimal('70.58880')),\n ('Woluwe',\n  datetime.date(2022, 1, 9),\n  'POULET AU ROMARIN ',\n  Decimal('14.254'),\n  Decimal('183.87660')),\n ('Woluwe',\n  datetime.date(2022, 1, 10),\n  'POULET AU ROMARIN ',\n  Decimal('5.580'),\n  Decimal('71.98200')),\n ('Woluwe',\n  datetime.date(2022, 1, 12),\n  'POULET AU ROMARIN ',\n  Decimal('1.840'),\n  Decimal('23.73600')),\n ('Woluwe',\n  datetime.date(2022, 1, 13),\n  'POULET AU ROMARIN ',\n  Decimal('2.112'),\n  Decimal('27.24480')),\n ('Woluwe',\n  datetime.date(2022, 1, 14),\n  'POULET AU ROMARIN ',\n  Decimal('1.502'),\n  Decimal('19.37580')),\n ('Woluwe',\n  datetime.date(2022, 1, 15),\n  'POULET AU ROMARIN ',\n  Decimal('10.148'),\n  Decimal('130.90920')),\n ('Woluwe',\n  datetime.date(2022, 1, 16),\n  'POULET AU ROMARIN ',\n  Decimal('19.682'),\n  Decimal('253.89780')),\n ('Woluwe',\n  datetime.date(2022, 1, 17),\n  'POULET AU ROMARIN ',\n  Decimal('3.370'),\n  Decimal('43.47300')),\n ('Woluwe',\n  datetime.date(2022, 1, 18),\n  'POULET AU ROMARIN ',\n  Decimal('4.972'),\n  Decimal('64.13880')),\n ('Woluwe',\n  datetime.date(2022, 1, 19),\n  'POULET AU ROMARIN ',\n  Decimal('4.018'),\n  Decimal('51.83220')),\n ('Woluwe',\n  datetime.date(2022, 1, 20),\n  'POULET AU ROMARIN ',\n  Decimal('1.932'),\n  Decimal('24.92280')),\n ('Woluwe',\n  datetime.date(2022, 1, 21),\n  'POULET AU ROMARIN ',\n  Decimal('5.544'),\n  Decimal('71.51760')),\n ('Woluwe',\n  datetime.date(2022, 1, 22),\n  'POULET AU ROMARIN ',\n  Decimal('8.710'),\n  Decimal('112.35900')),\n ('Woluwe',\n  datetime.date(2022, 1, 23),\n  'POULET AU ROMARIN ',\n  Decimal('17.068'),\n  Decimal('220.17720')),\n ('Woluwe',\n  datetime.date(2022, 1, 24),\n  'POULET AU ROMARIN ',\n  Decimal('3.668'),\n  Decimal('47.31720')),\n ('Woluwe',\n  datetime.date(2022, 1, 25),\n  'POULET AU ROMARIN ',\n  Decimal('2.218'),\n  Decimal('28.61220')),\n ('Woluwe',\n  datetime.date(2022, 1, 27),\n  'POULET AU ROMARIN ',\n  Decimal('3.546'),\n  Decimal('45.74340')),\n ('Woluwe',\n  datetime.date(2022, 1, 28),\n  'POULET AU ROMARIN ',\n  Decimal('6.246'),\n  Decimal('80.57340')),\n ('Woluwe',\n  datetime.date(2022, 1, 29),\n  'POULET AU ROMARIN ',\n  Decimal('7.706'),\n  Decimal('99.40740')),\n ('Woluwe',\n  datetime.date(2022, 1, 30),\n  'POULET AU ROMARIN ',\n  Decimal('22.498'),\n  Decimal('290.22420')),\n ('Woluwe',\n  datetime.date(2022, 1, 31),\n  'POULET AU ROMARIN ',\n  Decimal('5.278'),\n  Decimal('68.08620')),\n ('Woluwe',\n  datetime.date(2022, 2, 1),\n  'POULET AU ROMARIN ',\n  Decimal('4.482'),\n  Decimal('57.81780')),\n ('Woluwe',\n  datetime.date(2022, 2, 2),\n  'POULET AU ROMARIN ',\n  Decimal('5.268'),\n  Decimal('67.95720')),\n ('Woluwe',\n  datetime.date(2022, 2, 3),\n  'POULET AU ROMARIN ',\n  Decimal('4.274'),\n  Decimal('55.13460')),\n ('Woluwe',\n  datetime.date(2022, 2, 4),\n  'POULET AU ROMARIN ',\n  Decimal('2.114'),\n  Decimal('27.27060')),\n ('Woluwe',\n  datetime.date(2022, 2, 5),\n  'POULET AU ROMARIN ',\n  Decimal('4.482'),\n  Decimal('57.81780')),\n ('Woluwe',\n  datetime.date(2022, 2, 6),\n  'POULET AU ROMARIN ',\n  Decimal('24.498'),\n  Decimal('316.02420')),\n ('Woluwe',\n  datetime.date(2022, 2, 7),\n  'POULET AU ROMARIN ',\n  Decimal('4.996'),\n  Decimal('64.44840')),\n ('Woluwe',\n  datetime.date(2022, 2, 8),\n  'POULET AU ROMARIN ',\n  Decimal('2.718'),\n  Decimal('35.06220')),\n ('Woluwe',\n  datetime.date(2022, 2, 9),\n  'POULET AU ROMARIN ',\n  Decimal('11.422'),\n  Decimal('147.34380')),\n ('Woluwe',\n  datetime.date(2022, 2, 10),\n  'POULET AU ROMARIN ',\n  Decimal('2.858'),\n  Decimal('36.86820')),\n ('Woluwe',\n  datetime.date(2022, 2, 11),\n  'POULET AU ROMARIN ',\n  Decimal('3.008'),\n  Decimal('38.80320')),\n ('Woluwe',\n  datetime.date(2022, 2, 12),\n  'POULET AU ROMARIN ',\n  Decimal('9.508'),\n  Decimal('122.65320')),\n ('Woluwe',\n  datetime.date(2022, 2, 13),\n  'POULET AU ROMARIN ',\n  Decimal('19.260'),\n  Decimal('248.45400')),\n ('Woluwe',\n  datetime.date(2022, 2, 14),\n  'POULET AU ROMARIN ',\n  Decimal('3.330'),\n  Decimal('42.95700')),\n ('Woluwe',\n  datetime.date(2022, 2, 15),\n  'POULET AU ROMARIN ',\n  Decimal('2.806'),\n  Decimal('36.19740')),\n ('Woluwe',\n  datetime.date(2022, 2, 16),\n  'POULET AU ROMARIN ',\n  Decimal('3.782'),\n  Decimal('48.78780')),\n ('Woluwe',\n  datetime.date(2022, 2, 17),\n  'POULET AU ROMARIN ',\n  Decimal('2.766'),\n  Decimal('35.68140')),\n ('Woluwe',\n  datetime.date(2022, 2, 18),\n  'POULET AU ROMARIN ',\n  Decimal('3.298'),\n  Decimal('42.54420')),\n ('Woluwe',\n  datetime.date(2022, 2, 19),\n  'POULET AU ROMARIN ',\n  Decimal('6.304'),\n  Decimal('81.32160')),\n ('Woluwe',\n  datetime.date(2022, 2, 20),\n  'POULET AU ROMARIN ',\n  Decimal('20.476'),\n  Decimal('264.14040')),\n ('Woluwe',\n  datetime.date(2022, 2, 21),\n  'POULET AU ROMARIN ',\n  Decimal('7.084'),\n  Decimal('91.38360')),\n ('Woluwe',\n  datetime.date(2022, 2, 22),\n  'POULET AU ROMARIN ',\n  Decimal('1.106'),\n  Decimal('14.26740')),\n ('Woluwe',\n  datetime.date(2022, 2, 23),\n  'POULET AU ROMARIN ',\n  Decimal('5.786'),\n  Decimal('74.63940')),\n ('Woluwe',\n  datetime.date(2022, 2, 24),\n  'POULET AU ROMARIN ',\n  Decimal('3.432'),\n  Decimal('44.27280')),\n ('Woluwe',\n  datetime.date(2022, 2, 25),\n  'POULET AU ROMARIN ',\n  Decimal('2.198'),\n  Decimal('28.35420')),\n ('Woluwe',\n  datetime.date(2022, 2, 26),\n  'POULET AU ROMARIN ',\n  Decimal('10.238'),\n  Decimal('132.07020')),\n ('Woluwe',\n  datetime.date(2022, 2, 27),\n  'POULET AU ROMARIN ',\n  Decimal('23.358'),\n  Decimal('301.31820')),\n ('Woluwe',\n  datetime.date(2022, 2, 28),\n  'POULET AU ROMARIN ',\n  Decimal('4.588'),\n  Decimal('59.18520')),\n ('Woluwe',\n  datetime.date(2022, 3, 1),\n  'POULET AU ROMARIN ',\n  Decimal('3.694'),\n  Decimal('47.65260')),\n ('Woluwe',\n  datetime.date(2022, 3, 2),\n  'POULET AU ROMARIN ',\n  Decimal('3.938'),\n  Decimal('50.80020')),\n ('Woluwe',\n  datetime.date(2022, 3, 3),\n  'POULET AU ROMARIN ',\n  Decimal('4.630'),\n  Decimal('59.72700')),\n ('Woluwe',\n  datetime.date(2022, 3, 4),\n  'POULET AU ROMARIN ',\n  Decimal('2.254'),\n  Decimal('29.07660')),\n ('Woluwe',\n  datetime.date(2022, 3, 5),\n  'POULET AU ROMARIN ',\n  Decimal('8.260'),\n  Decimal('106.55400')),\n ('Woluwe',\n  datetime.date(2022, 3, 6),\n  'POULET AU ROMARIN ',\n  Decimal('23.784'),\n  Decimal('306.81360')),\n ('Woluwe',\n  datetime.date(2022, 3, 7),\n  'POULET AU ROMARIN ',\n  Decimal('1.198'),\n  Decimal('15.45420')),\n ('Woluwe',\n  datetime.date(2022, 3, 8),\n  'POULET AU ROMARIN ',\n  Decimal('2.770'),\n  Decimal('35.73300')),\n ('Woluwe',\n  datetime.date(2022, 3, 9),\n  'POULET AU ROMARIN ',\n  Decimal('4.638'),\n  Decimal('59.83020')),\n ('Woluwe',\n  datetime.date(2022, 3, 10),\n  'POULET AU ROMARIN ',\n  Decimal('0.958'),\n  Decimal('12.35820')),\n ('Woluwe',\n  datetime.date(2022, 3, 11),\n  'POULET AU ROMARIN ',\n  Decimal('2.072'),\n  Decimal('26.72880')),\n ('Woluwe',\n  datetime.date(2022, 3, 12),\n  'POULET AU ROMARIN ',\n  Decimal('8.678'),\n  Decimal('111.94620')),\n ('Woluwe',\n  datetime.date(2022, 3, 13),\n  'POULET AU ROMARIN ',\n  Decimal('29.256'),\n  Decimal('377.40240')),\n ('Woluwe',\n  datetime.date(2022, 3, 14),\n  'POULET AU ROMARIN ',\n  Decimal('7.560'),\n  Decimal('97.52400')),\n ('Woluwe',\n  datetime.date(2022, 3, 15),\n  'POULET AU ROMARIN ',\n  Decimal('1.818'),\n  Decimal('23.45220')),\n ('Woluwe',\n  datetime.date(2022, 3, 16),\n  'POULET AU ROMARIN ',\n  Decimal('5.934'),\n  Decimal('76.54860')),\n ('Woluwe',\n  datetime.date(2022, 3, 17),\n  'POULET AU ROMARIN ',\n  Decimal('0.962'),\n  Decimal('12.40980')),\n ('Woluwe',\n  datetime.date(2022, 3, 18),\n  'POULET AU ROMARIN ',\n  Decimal('2.336'),\n  Decimal('30.13440')),\n ('Woluwe',\n  datetime.date(2022, 3, 19),\n  'POULET AU ROMARIN ',\n  Decimal('2.954'),\n  Decimal('38.10660')),\n ('Woluwe',\n  datetime.date(2022, 3, 20),\n  'POULET AU ROMARIN ',\n  Decimal('29.552'),\n  Decimal('381.22080')),\n ('Woluwe',\n  datetime.date(2022, 3, 21),\n  'POULET AU ROMARIN ',\n  Decimal('3.812'),\n  Decimal('49.17480')),\n ('Woluwe',\n  datetime.date(2022, 3, 22),\n  'POULET AU ROMARIN ',\n  Decimal('2.298'),\n  Decimal('29.64420')),\n ('Woluwe',\n  datetime.date(2022, 3, 23),\n  'POULET AU ROMARIN ',\n  Decimal('4.744'),\n  Decimal('61.19760')),\n ('Woluwe',\n  datetime.date(2022, 3, 24),\n  'POULET AU ROMARIN ',\n  Decimal('2.154'),\n  Decimal('27.78660')),\n ('Woluwe',\n  datetime.date(2022, 3, 25),\n  'POULET AU ROMARIN ',\n  Decimal('1.770'),\n  Decimal('22.83300')),\n ('Woluwe',\n  datetime.date(2022, 3, 26),\n  'POULET AU ROMARIN ',\n  Decimal('13.708'),\n  Decimal('176.83320')),\n ('Woluwe',\n  datetime.date(2022, 3, 27),\n  'POULET AU ROMARIN ',\n  Decimal('25.274'),\n  Decimal('326.03460')),\n ('Woluwe',\n  datetime.date(2022, 3, 28),\n  'POULET AU ROMARIN ',\n  Decimal('4.770'),\n  Decimal('61.53300')),\n ('Woluwe',\n  datetime.date(2022, 3, 29),\n  'POULET AU ROMARIN ',\n  Decimal('0.608'),\n  Decimal('7.84320')),\n ('Woluwe',\n  datetime.date(2022, 3, 30),\n  'POULET AU ROMARIN ',\n  Decimal('5.560'),\n  Decimal('71.72400')),\n ('Woluwe',\n  datetime.date(2022, 3, 31),\n  'POULET AU ROMARIN ',\n  Decimal('2.660'),\n  Decimal('34.31400')),\n ('Woluwe',\n  datetime.date(2022, 4, 1),\n  'POULET AU ROMARIN ',\n  Decimal('4.340'),\n  Decimal('55.98600')),\n ('Woluwe',\n  datetime.date(2022, 4, 2),\n  'POULET AU ROMARIN ',\n  Decimal('4.900'),\n  Decimal('63.21000')),\n ('Woluwe',\n  datetime.date(2022, 4, 3),\n  'POULET AU ROMARIN ',\n  Decimal('28.708'),\n  Decimal('370.33320')),\n ('Woluwe',\n  datetime.date(2022, 4, 4),\n  'POULET AU ROMARIN ',\n  Decimal('5.456'),\n  Decimal('70.38240')),\n ('Woluwe',\n  datetime.date(2022, 4, 5),\n  'POULET AU ROMARIN ',\n  Decimal('4.422'),\n  Decimal('57.04380')),\n ('Woluwe',\n  datetime.date(2022, 4, 6),\n  'POULET AU ROMARIN ',\n  Decimal('4.536'),\n  Decimal('58.51440')),\n ('Woluwe',\n  datetime.date(2022, 4, 7),\n  'POULET AU ROMARIN ',\n  Decimal('4.500'),\n  Decimal('58.05000')),\n ('Woluwe',\n  datetime.date(2022, 4, 8),\n  'POULET AU ROMARIN ',\n  Decimal('2.938'),\n  Decimal('37.90020')),\n ('Woluwe',\n  datetime.date(2022, 4, 9),\n  'POULET AU ROMARIN ',\n  Decimal('2.902'),\n  Decimal('37.43580')),\n ('Woluwe',\n  datetime.date(2022, 4, 10),\n  'POULET AU ROMARIN ',\n  Decimal('15.306'),\n  Decimal('197.44740')),\n ('Woluwe',\n  datetime.date(2022, 4, 11),\n  'POULET AU ROMARIN ',\n  Decimal('4.322'),\n  Decimal('55.75380')),\n ('Woluwe',\n  datetime.date(2022, 4, 12),\n  'POULET AU ROMARIN ',\n  Decimal('3.182'),\n  Decimal('41.04780')),\n ('Woluwe',\n  datetime.date(2022, 4, 13),\n  'POULET AU ROMARIN ',\n  Decimal('2.872'),\n  Decimal('37.04880')),\n ('Woluwe',\n  datetime.date(2022, 4, 14),\n  'POULET AU ROMARIN ',\n  Decimal('4.730'),\n  Decimal('61.01700')),\n ('Woluwe',\n  datetime.date(2022, 4, 15),\n  'POULET AU ROMARIN ',\n  Decimal('5.430'),\n  Decimal('70.04700')),\n ('Woluwe',\n  datetime.date(2022, 4, 16),\n  'POULET AU ROMARIN ',\n  Decimal('2.074'),\n  Decimal('26.75460')),\n ('Woluwe',\n  datetime.date(2022, 4, 17),\n  'POULET AU ROMARIN ',\n  Decimal('8.668'),\n  Decimal('111.81720')),\n ('Woluwe',\n  datetime.date(2022, 4, 18),\n  'POULET AU ROMARIN ',\n  Decimal('18.770'),\n  Decimal('242.13300')),\n ('Woluwe',\n  datetime.date(2022, 4, 19),\n  'POULET AU ROMARIN ',\n  Decimal('5.100'),\n  Decimal('65.79000')),\n ('Woluwe',\n  datetime.date(2022, 4, 20),\n  'POULET AU ROMARIN ',\n  Decimal('2.078'),\n  Decimal('26.80620')),\n ('Woluwe',\n  datetime.date(2022, 4, 21),\n  'POULET AU ROMARIN ',\n  Decimal('2.802'),\n  Decimal('36.14580')),\n ('Woluwe',\n  datetime.date(2022, 4, 22),\n  'POULET AU ROMARIN ',\n  Decimal('1.774'),\n  Decimal('22.88460')),\n ('Woluwe',\n  datetime.date(2022, 4, 23),\n  'POULET AU ROMARIN ',\n  Decimal('7.858'),\n  Decimal('101.36820')),\n ('Woluwe',\n  datetime.date(2022, 4, 24),\n  'POULET AU ROMARIN ',\n  Decimal('18.106'),\n  Decimal('233.56740')),\n ('Woluwe',\n  datetime.date(2022, 4, 25),\n  'POULET AU ROMARIN ',\n  Decimal('1.166'),\n  Decimal('15.04140')),\n ('Woluwe',\n  datetime.date(2022, 4, 26),\n  'POULET AU ROMARIN ',\n  Decimal('4.150'),\n  Decimal('53.53500')),\n ('Woluwe',\n  datetime.date(2022, 4, 27),\n  'POULET AU ROMARIN ',\n  Decimal('6.642'),\n  Decimal('85.68180')),\n ('Woluwe',\n  datetime.date(2022, 4, 28),\n  'POULET AU ROMARIN ',\n  Decimal('2.920'),\n  Decimal('37.66800')),\n ('Woluwe',\n  datetime.date(2022, 4, 29),\n  'POULET AU ROMARIN ',\n  Decimal('7.224'),\n  Decimal('93.18960')),\n ('Woluwe',\n  datetime.date(2022, 4, 30),\n  'POULET AU ROMARIN ',\n  Decimal('1.442'),\n  Decimal('18.60180')),\n ('Woluwe',\n  datetime.date(2022, 5, 1),\n  'POULET AU ROMARIN ',\n  Decimal('26.108'),\n  Decimal('336.79320')),\n ('Woluwe',\n  datetime.date(2022, 5, 2),\n  'POULET AU ROMARIN ',\n  Decimal('4.046'),\n  Decimal('52.19340')),\n ('Woluwe',\n  datetime.date(2022, 5, 3),\n  'POULET AU ROMARIN ',\n  Decimal('3.476'),\n  Decimal('44.84040')),\n ('Woluwe',\n  datetime.date(2022, 5, 4),\n  'POULET AU ROMARIN ',\n  Decimal('5.334'),\n  Decimal('68.80860')),\n ('Woluwe',\n  datetime.date(2022, 5, 5),\n  'POULET AU ROMARIN ',\n  Decimal('3.960'),\n  Decimal('51.08400')),\n ('Woluwe',\n  datetime.date(2022, 5, 6),\n  'POULET AU ROMARIN ',\n  Decimal('3.392'),\n  Decimal('43.75680')),\n ('Woluwe',\n  datetime.date(2022, 5, 7),\n  'POULET AU ROMARIN ',\n  Decimal('9.120'),\n  Decimal('117.64800')),\n ('Woluwe',\n  datetime.date(2022, 5, 8),\n  'POULET AU ROMARIN ',\n  Decimal('21.006'),\n  Decimal('270.97740')),\n ('Woluwe',\n  datetime.date(2022, 5, 9),\n  'POULET AU ROMARIN ',\n  Decimal('6.396'),\n  Decimal('82.50840')),\n ('Woluwe',\n  datetime.date(2022, 5, 10),\n  'POULET AU ROMARIN ',\n  Decimal('3.204'),\n  Decimal('41.33160')),\n ('Woluwe',\n  datetime.date(2022, 5, 11),\n  'POULET AU ROMARIN ',\n  Decimal('4.626'),\n  Decimal('59.67540')),\n ('Woluwe',\n  datetime.date(2022, 5, 12),\n  'POULET AU ROMARIN ',\n  Decimal('3.892'),\n  Decimal('50.20680')),\n ('Woluwe',\n  datetime.date(2022, 5, 13),\n  'POULET AU ROMARIN ',\n  Decimal('4.166'),\n  Decimal('53.74140')),\n ('Woluwe',\n  datetime.date(2022, 5, 14),\n  'POULET AU ROMARIN ',\n  Decimal('10.880'),\n  Decimal('140.35200')),\n ('Woluwe',\n  datetime.date(2022, 5, 15),\n  'POULET AU ROMARIN ',\n  Decimal('16.914'),\n  Decimal('218.19060')),\n ('Woluwe',\n  datetime.date(2022, 5, 16),\n  'POULET AU ROMARIN ',\n  Decimal('5.318'),\n  Decimal('68.60220')),\n ('Woluwe',\n  datetime.date(2022, 5, 17),\n  'POULET AU ROMARIN ',\n  Decimal('2.896'),\n  Decimal('37.35840')),\n ('Woluwe',\n  datetime.date(2022, 5, 18),\n  'POULET AU ROMARIN ',\n  Decimal('3.588'),\n  Decimal('46.28520')),\n ('Woluwe',\n  datetime.date(2022, 5, 19),\n  'POULET AU ROMARIN ',\n  Decimal('2.346'),\n  Decimal('30.26340')),\n ('Woluwe',\n  datetime.date(2022, 5, 20),\n  'POULET AU ROMARIN ',\n  Decimal('3.582'),\n  Decimal('46.20780')),\n ('Woluwe',\n  datetime.date(2022, 5, 21),\n  'POULET AU ROMARIN ',\n  Decimal('6.352'),\n  Decimal('81.94080')),\n ('Woluwe',\n  datetime.date(2022, 5, 22),\n  'POULET AU ROMARIN ',\n  Decimal('16.922'),\n  Decimal('218.29380')),\n ('Woluwe',\n  datetime.date(2022, 5, 23),\n  'POULET AU ROMARIN ',\n  Decimal('2.302'),\n  Decimal('29.69580')),\n ('Woluwe',\n  datetime.date(2022, 5, 24),\n  'POULET AU ROMARIN ',\n  Decimal('3.216'),\n  Decimal('41.48640')),\n ('Woluwe',\n  datetime.date(2022, 5, 25),\n  'POULET AU ROMARIN ',\n  Decimal('6.956'),\n  Decimal('89.73240')),\n ('Woluwe',\n  datetime.date(2022, 5, 26),\n  'POULET AU ROMARIN ',\n  Decimal('6.000'),\n  Decimal('77.40000')),\n ('Woluwe',\n  datetime.date(2022, 5, 27),\n  'POULET AU ROMARIN ',\n  Decimal('4.762'),\n  Decimal('61.42980')),\n ('Woluwe',\n  datetime.date(2022, 5, 28),\n  'POULET AU ROMARIN ',\n  Decimal('4.130'),\n  Decimal('53.27700')),\n ('Woluwe',\n  datetime.date(2022, 5, 29),\n  'POULET AU ROMARIN ',\n  Decimal('19.674'),\n  Decimal('253.79460')),\n ('Woluwe',\n  datetime.date(2022, 5, 30),\n  'POULET AU ROMARIN ',\n  Decimal('5.666'),\n  Decimal('73.09140')),\n ('Woluwe',\n  datetime.date(2022, 5, 31),\n  'POULET AU ROMARIN ',\n  Decimal('5.750'),\n  Decimal('74.17500')),\n ('Woluwe',\n  datetime.date(2022, 6, 1),\n  'POULET AU ROMARIN ',\n  Decimal('2.174'),\n  Decimal('28.04460')),\n ('Woluwe',\n  datetime.date(2022, 6, 2),\n  'POULET AU ROMARIN ',\n  Decimal('5.424'),\n  Decimal('69.96960')),\n ('Woluwe',\n  datetime.date(2022, 6, 3),\n  'POULET AU ROMARIN ',\n  Decimal('2.228'),\n  Decimal('28.74120')),\n ('Woluwe',\n  datetime.date(2022, 6, 4),\n  'POULET AU ROMARIN ',\n  Decimal('7.572'),\n  Decimal('97.67880')),\n ('Woluwe',\n  datetime.date(2022, 6, 5),\n  'POULET AU ROMARIN ',\n  Decimal('24.042'),\n  Decimal('310.14180')),\n ('Woluwe',\n  datetime.date(2022, 6, 6),\n  'POULET AU ROMARIN ',\n  Decimal('6.670'),\n  Decimal('86.04300')),\n ('Woluwe',\n  datetime.date(2022, 6, 7),\n  'POULET AU ROMARIN ',\n  Decimal('2.962'),\n  Decimal('38.20980')),\n ('Woluwe',\n  datetime.date(2022, 6, 8),\n  'POULET AU ROMARIN ',\n  Decimal('5.394'),\n  Decimal('69.58260')),\n ('Woluwe',\n  datetime.date(2022, 6, 9),\n  'POULET AU ROMARIN ',\n  Decimal('0.514'),\n  Decimal('6.63060')),\n ('Woluwe',\n  datetime.date(2022, 6, 10),\n  'POULET AU ROMARIN ',\n  Decimal('3.478'),\n  Decimal('44.86620')),\n ('Woluwe',\n  datetime.date(2022, 6, 11),\n  'POULET AU ROMARIN ',\n  Decimal('4.520'),\n  Decimal('58.30800')),\n ('Woluwe',\n  datetime.date(2022, 6, 12),\n  'POULET AU ROMARIN ',\n  Decimal('15.246'),\n  Decimal('196.67340')),\n ('Woluwe',\n  datetime.date(2022, 6, 13),\n  'POULET AU ROMARIN ',\n  Decimal('3.442'),\n  Decimal('44.40180')),\n ('Woluwe',\n  datetime.date(2022, 6, 14),\n  'POULET AU ROMARIN ',\n  Decimal('10.014'),\n  Decimal('129.18060')),\n ('Woluwe',\n  datetime.date(2022, 6, 15),\n  'POULET AU ROMARIN ',\n  Decimal('5.902'),\n  Decimal('76.13580')),\n ('Woluwe',\n  datetime.date(2022, 6, 16),\n  'POULET AU ROMARIN ',\n  Decimal('2.528'),\n  Decimal('32.61120')),\n ('Woluwe',\n  datetime.date(2022, 6, 18),\n  'POULET AU ROMARIN ',\n  Decimal('5.578'),\n  Decimal('71.95620')),\n ('Woluwe',\n  datetime.date(2022, 6, 19),\n  'POULET AU ROMARIN ',\n  Decimal('22.198'),\n  Decimal('286.35420')),\n ('Woluwe',\n  datetime.date(2022, 6, 20),\n  'POULET AU ROMARIN ',\n  Decimal('5.802'),\n  Decimal('74.84580')),\n ('Woluwe',\n  datetime.date(2022, 6, 21),\n  'POULET AU ROMARIN ',\n  Decimal('2.230'),\n  Decimal('28.76700')),\n ('Woluwe',\n  datetime.date(2022, 6, 22),\n  'POULET AU ROMARIN ',\n  Decimal('4.078'),\n  Decimal('52.60620')),\n ('Woluwe',\n  datetime.date(2022, 6, 23),\n  'POULET AU ROMARIN ',\n  Decimal('5.176'),\n  Decimal('66.77040')),\n ('Woluwe',\n  datetime.date(2022, 6, 24),\n  'POULET AU ROMARIN ',\n  Decimal('2.870'),\n  Decimal('37.02300')),\n ('Woluwe',\n  datetime.date(2022, 6, 25),\n  'POULET AU ROMARIN ',\n  Decimal('4.282'),\n  Decimal('55.23780')),\n ('Woluwe',\n  datetime.date(2022, 6, 26),\n  'POULET AU ROMARIN ',\n  Decimal('20.086'),\n  Decimal('259.10940')),\n ('Woluwe',\n  datetime.date(2022, 6, 27),\n  'POULET AU ROMARIN ',\n  Decimal('3.340'),\n  Decimal('43.08600')),\n ('Woluwe',\n  datetime.date(2022, 6, 28),\n  'POULET AU ROMARIN ',\n  Decimal('3.778'),\n  Decimal('48.73620')),\n ('Woluwe',\n  datetime.date(2022, 6, 29),\n  'POULET AU ROMARIN ',\n  Decimal('3.606'),\n  Decimal('46.51740')),\n ('Woluwe',\n  datetime.date(2022, 6, 30),\n  'POULET AU ROMARIN ',\n  Decimal('8.140'),\n  Decimal('105.00600')),\n ('Woluwe',\n  datetime.date(2022, 7, 1),\n  'POULET AU ROMARIN ',\n  Decimal('2.126'),\n  Decimal('27.42540')),\n ('Woluwe',\n  datetime.date(2022, 7, 2),\n  'POULET AU ROMARIN ',\n  Decimal('6.608'),\n  Decimal('85.24320')),\n ('Woluwe',\n  datetime.date(2022, 7, 3),\n  'POULET AU ROMARIN ',\n  Decimal('10.682'),\n  Decimal('137.79780')),\n ('Woluwe',\n  datetime.date(2022, 7, 4),\n  'POULET AU ROMARIN ',\n  Decimal('4.318'),\n  Decimal('55.70220')),\n ('Woluwe',\n  datetime.date(2022, 7, 5),\n  'POULET AU ROMARIN ',\n  Decimal('1.380'),\n  Decimal('17.80200')),\n ('Woluwe',\n  datetime.date(2022, 7, 6),\n  'POULET AU ROMARIN ',\n  Decimal('1.956'),\n  Decimal('25.23240')),\n ('Woluwe',\n  datetime.date(2022, 7, 7),\n  'POULET AU ROMARIN ',\n  Decimal('2.532'),\n  Decimal('32.66280')),\n ('Woluwe',\n  datetime.date(2022, 7, 9),\n  'POULET AU ROMARIN ',\n  Decimal('1.530'),\n  Decimal('19.73700')),\n ('Woluwe',\n  datetime.date(2022, 7, 10),\n  'POULET AU ROMARIN ',\n  Decimal('11.448'),\n  Decimal('147.67920')),\n ('Woluwe',\n  datetime.date(2022, 7, 11),\n  'POULET AU ROMARIN ',\n  Decimal('3.528'),\n  Decimal('45.51120')),\n ('Woluwe',\n  datetime.date(2022, 7, 12),\n  'POULET AU ROMARIN ',\n  Decimal('2.906'),\n  Decimal('37.48740')),\n ('Woluwe',\n  datetime.date(2022, 7, 13),\n  'POULET AU ROMARIN ',\n  Decimal('2.932'),\n  Decimal('37.82280')),\n ('Woluwe',\n  datetime.date(2022, 7, 14),\n  'POULET AU ROMARIN ',\n  Decimal('2.782'),\n  Decimal('35.88780')),\n ('Woluwe',\n  datetime.date(2022, 7, 15),\n  'POULET AU ROMARIN ',\n  Decimal('1.520'),\n  Decimal('19.60800')),\n ('Woluwe',\n  datetime.date(2022, 7, 16),\n  'POULET AU ROMARIN ',\n  Decimal('8.522'),\n  Decimal('109.93380')),\n ('Woluwe',\n  datetime.date(2022, 7, 17),\n  'POULET AU ROMARIN ',\n  Decimal('12.944'),\n  Decimal('166.97760')),\n ('Woluwe',\n  datetime.date(2022, 7, 18),\n  'POULET AU ROMARIN ',\n  Decimal('1.776'),\n  Decimal('22.91040')),\n ('Woluwe',\n  datetime.date(2022, 7, 19),\n  'POULET AU ROMARIN ',\n  Decimal('3.508'),\n  Decimal('45.25320')),\n ('Woluwe',\n  datetime.date(2022, 7, 20),\n  'POULET AU ROMARIN ',\n  Decimal('2.706'),\n  Decimal('34.90740')),\n ('Woluwe',\n  datetime.date(2022, 7, 21),\n  'POULET AU ROMARIN ',\n  Decimal('9.120'),\n  Decimal('117.64800')),\n ('Woluwe',\n  datetime.date(2022, 7, 22),\n  'POULET AU ROMARIN ',\n  Decimal('0.468'),\n  Decimal('6.03720')),\n ('Woluwe',\n  datetime.date(2022, 7, 23),\n  'POULET AU ROMARIN ',\n  Decimal('2.564'),\n  Decimal('33.07560')),\n ('Woluwe',\n  datetime.date(2022, 7, 24),\n  'POULET AU ROMARIN ',\n  Decimal('9.204'),\n  Decimal('118.73160')),\n ('Woluwe',\n  datetime.date(2022, 7, 25),\n  'POULET AU ROMARIN ',\n  Decimal('3.138'),\n  Decimal('40.48020')),\n ('Woluwe',\n  datetime.date(2022, 7, 26),\n  'POULET AU ROMARIN ',\n  Decimal('1.702'),\n  Decimal('21.95580')),\n ('Woluwe',\n  datetime.date(2022, 7, 27),\n  'POULET AU ROMARIN ',\n  Decimal('0.482'),\n  Decimal('6.21780')),\n ('Woluwe',\n  datetime.date(2022, 7, 28),\n  'POULET AU ROMARIN ',\n  Decimal('5.646'),\n  Decimal('72.83340')),\n ('Woluwe',\n  datetime.date(2022, 7, 29),\n  'POULET AU ROMARIN ',\n  Decimal('1.558'),\n  Decimal('20.09820')),\n ('Woluwe',\n  datetime.date(2022, 7, 30),\n  'POULET AU ROMARIN ',\n  Decimal('5.344'),\n  Decimal('68.93760')),\n ('Woluwe',\n  datetime.date(2022, 7, 31),\n  'POULET AU ROMARIN ',\n  Decimal('26.406'),\n  Decimal('340.63740')),\n ('Woluwe',\n  datetime.date(2022, 8, 1),\n  'POULET AU ROMARIN ',\n  Decimal('2.162'),\n  Decimal('27.88980')),\n ('Woluwe',\n  datetime.date(2022, 8, 2),\n  'POULET AU ROMARIN ',\n  Decimal('3.402'),\n  Decimal('43.88580')),\n ('Woluwe',\n  datetime.date(2022, 8, 3),\n  'POULET AU ROMARIN ',\n  Decimal('1.704'),\n  Decimal('21.98160')),\n ('Woluwe',\n  datetime.date(2022, 8, 4),\n  'POULET AU ROMARIN ',\n  Decimal('1.026'),\n  Decimal('13.23540')),\n ('Woluwe',\n  datetime.date(2022, 8, 5),\n  'POULET AU ROMARIN ',\n  Decimal('1.556'),\n  Decimal('20.07240')),\n ('Woluwe',\n  datetime.date(2022, 8, 6),\n  'POULET AU ROMARIN ',\n  Decimal('9.648'),\n  Decimal('124.45920')),\n ('Woluwe',\n  datetime.date(2022, 8, 7),\n  'POULET AU ROMARIN ',\n  Decimal('13.044'),\n  Decimal('168.26760')),\n ('Woluwe',\n  datetime.date(2022, 8, 8),\n  'POULET AU ROMARIN ',\n  Decimal('3.798'),\n  Decimal('48.99420')),\n ('Woluwe',\n  datetime.date(2022, 8, 9),\n  'POULET AU ROMARIN ',\n  Decimal('1.060'),\n  Decimal('13.67400')),\n ('Woluwe',\n  datetime.date(2022, 8, 10),\n  'POULET AU ROMARIN ',\n  Decimal('4.478'),\n  Decimal('57.76620')),\n ('Woluwe',\n  datetime.date(2022, 8, 11),\n  'POULET AU ROMARIN ',\n  Decimal('3.290'),\n  Decimal('42.44100')),\n ('Woluwe',\n  datetime.date(2022, 8, 12),\n  'POULET AU ROMARIN ',\n  Decimal('1.094'),\n  Decimal('14.11260')),\n ('Woluwe',\n  datetime.date(2022, 8, 13),\n  'POULET AU ROMARIN ',\n  Decimal('3.998'),\n  Decimal('51.57420')),\n ('Woluwe',\n  datetime.date(2022, 8, 14),\n  'POULET AU ROMARIN ',\n  Decimal('11.030'),\n  Decimal('142.28700')),\n ('Woluwe',\n  datetime.date(2022, 8, 15),\n  'POULET AU ROMARIN ',\n  Decimal('5.622'),\n  Decimal('72.52380')),\n ('Woluwe',\n  datetime.date(2022, 8, 16),\n  'POULET AU ROMARIN ',\n  Decimal('3.246'),\n  Decimal('41.87340')),\n ('Woluwe',\n  datetime.date(2022, 8, 17),\n  'POULET AU ROMARIN ',\n  Decimal('4.810'),\n  Decimal('62.04900')),\n ('Woluwe',\n  datetime.date(2022, 8, 18),\n  'POULET AU ROMARIN ',\n  Decimal('1.760'),\n  Decimal('22.70400')),\n ('Woluwe',\n  datetime.date(2022, 8, 19),\n  'POULET AU ROMARIN ',\n  Decimal('0.772'),\n  Decimal('9.95880')),\n ('Woluwe',\n  datetime.date(2022, 8, 20),\n  'POULET AU ROMARIN ',\n  Decimal('4.542'),\n  Decimal('58.59180')),\n ('Woluwe',\n  datetime.date(2022, 8, 21),\n  'POULET AU ROMARIN ',\n  Decimal('19.484'),\n  Decimal('251.34360')),\n ('Woluwe',\n  datetime.date(2022, 8, 22),\n  'POULET AU ROMARIN ',\n  Decimal('5.558'),\n  Decimal('71.69820')),\n ('Woluwe',\n  datetime.date(2022, 8, 23),\n  'POULET AU ROMARIN ',\n  Decimal('4.488'),\n  Decimal('57.89520')),\n ('Woluwe',\n  datetime.date(2022, 8, 24),\n  'POULET AU ROMARIN ',\n  Decimal('3.484'),\n  Decimal('44.94360')),\n ('Woluwe',\n  datetime.date(2022, 8, 25),\n  'POULET AU ROMARIN ',\n  Decimal('3.866'),\n  Decimal('49.87140')),\n ('Woluwe',\n  datetime.date(2022, 8, 26),\n  'POULET AU ROMARIN ',\n  Decimal('2.216'),\n  Decimal('28.58640')),\n ('Woluwe',\n  datetime.date(2022, 8, 27),\n  'POULET AU ROMARIN ',\n  Decimal('7.868'),\n  Decimal('101.49720')),\n ('Woluwe',\n  datetime.date(2022, 8, 28),\n  'POULET AU ROMARIN ',\n  Decimal('16.740'),\n  Decimal('215.94600')),\n ('Woluwe',\n  datetime.date(2022, 8, 29),\n  'POULET AU ROMARIN ',\n  Decimal('3.808'),\n  Decimal('49.12320')),\n ('Woluwe',\n  datetime.date(2022, 8, 30),\n  'POULET AU ROMARIN ',\n  Decimal('0.964'),\n  Decimal('12.43560')),\n ('Woluwe',\n  datetime.date(2022, 8, 31),\n  'POULET AU ROMARIN ',\n  Decimal('7.466'),\n  Decimal('96.31140')),\n ('Woluwe',\n  datetime.date(2022, 9, 1),\n  'POULET AU ROMARIN ',\n  Decimal('3.416'),\n  Decimal('44.06640')),\n ('Woluwe',\n  datetime.date(2022, 9, 2),\n  'POULET AU ROMARIN ',\n  Decimal('0.456'),\n  Decimal('5.88240')),\n ('Woluwe',\n  datetime.date(2022, 9, 3),\n  'POULET AU ROMARIN ',\n  Decimal('6.626'),\n  Decimal('85.47540')),\n ('Woluwe',\n  datetime.date(2022, 9, 4),\n  'POULET AU ROMARIN ',\n  Decimal('21.726'),\n  Decimal('280.26540')),\n ('Woluwe',\n  datetime.date(2022, 9, 5),\n  'POULET AU ROMARIN ',\n  Decimal('8.894'),\n  Decimal('114.73260')),\n ('Woluwe',\n  datetime.date(2022, 9, 6),\n  'POULET AU ROMARIN ',\n  Decimal('2.012'),\n  Decimal('25.95480')),\n ('Woluwe',\n  datetime.date(2022, 9, 7),\n  'POULET AU ROMARIN ',\n  Decimal('4.186'),\n  Decimal('53.99940')),\n ('Woluwe',\n  datetime.date(2022, 9, 8),\n  'POULET AU ROMARIN ',\n  Decimal('2.748'),\n  Decimal('35.44920')),\n ('Woluwe',\n  datetime.date(2022, 9, 9),\n  'POULET AU ROMARIN ',\n  Decimal('2.050'),\n  Decimal('26.44500')),\n ('Woluwe',\n  datetime.date(2022, 9, 10),\n  'POULET AU ROMARIN ',\n  Decimal('8.410'),\n  Decimal('108.48900')),\n ('Woluwe',\n  datetime.date(2022, 9, 11),\n  'POULET AU ROMARIN ',\n  Decimal('20.418'),\n  Decimal('263.39220')),\n ('Woluwe',\n  datetime.date(2022, 9, 12),\n  'POULET AU ROMARIN ',\n  Decimal('3.960'),\n  Decimal('51.08400')),\n ('Woluwe',\n  datetime.date(2022, 9, 13),\n  'POULET AU ROMARIN ',\n  Decimal('5.324'),\n  Decimal('68.67960')),\n ('Woluwe',\n  datetime.date(2022, 9, 14),\n  'POULET AU ROMARIN ',\n  Decimal('5.708'),\n  Decimal('73.63320')),\n ('Woluwe',\n  datetime.date(2022, 9, 15),\n  'POULET AU ROMARIN ',\n  Decimal('1.128'),\n  Decimal('14.55120')),\n ('Woluwe',\n  datetime.date(2022, 9, 16),\n  'POULET AU ROMARIN ',\n  Decimal('5.108'),\n  Decimal('65.89320')),\n ('Woluwe',\n  datetime.date(2022, 9, 17),\n  'POULET AU ROMARIN ',\n  Decimal('11.996'),\n  Decimal('154.74840')),\n ('Woluwe',\n  datetime.date(2022, 9, 18),\n  'POULET AU ROMARIN ',\n  Decimal('8.402'),\n  Decimal('108.38580')),\n ('Woluwe',\n  datetime.date(2022, 9, 19),\n  'POULET AU ROMARIN ',\n  Decimal('5.386'),\n  Decimal('69.47940')),\n ('Woluwe',\n  datetime.date(2022, 9, 20),\n  'POULET AU ROMARIN ',\n  Decimal('3.334'),\n  Decimal('43.00860')),\n ('Woluwe',\n  datetime.date(2022, 9, 21),\n  'POULET AU ROMARIN ',\n  Decimal('4.728'),\n  Decimal('60.99120')),\n ('Woluwe',\n  datetime.date(2022, 9, 22),\n  'POULET AU ROMARIN ',\n  Decimal('2.020'),\n  Decimal('26.05800')),\n ('Woluwe',\n  datetime.date(2022, 9, 23),\n  'POULET AU ROMARIN ',\n  Decimal('6.212'),\n  Decimal('80.13480')),\n ('Woluwe',\n  datetime.date(2022, 9, 24),\n  'POULET AU ROMARIN ',\n  Decimal('8.012'),\n  Decimal('103.35480')),\n ('Woluwe',\n  datetime.date(2022, 9, 25),\n  'POULET AU ROMARIN ',\n  Decimal('21.890'),\n  Decimal('282.38100')),\n ('Woluwe',\n  datetime.date(2022, 9, 26),\n  'POULET AU ROMARIN ',\n  Decimal('5.428'),\n  Decimal('70.02120')),\n ('Woluwe',\n  datetime.date(2022, 9, 27),\n  'POULET AU ROMARIN ',\n  Decimal('5.636'),\n  Decimal('72.70440')),\n ('Woluwe',\n  datetime.date(2022, 9, 28),\n  'POULET AU ROMARIN ',\n  Decimal('7.926'),\n  Decimal('102.24540')),\n ('Woluwe',\n  datetime.date(2022, 9, 29),\n  'POULET AU ROMARIN ',\n  Decimal('1.986'),\n  Decimal('25.61940')),\n ('Woluwe',\n  datetime.date(2022, 9, 30),\n  'POULET AU ROMARIN ',\n  Decimal('1.780'),\n  Decimal('22.96200')),\n ('Woluwe',\n  datetime.date(2022, 10, 1),\n  'POULET AU ROMARIN ',\n  Decimal('2.238'),\n  Decimal('28.87020')),\n ('Woluwe',\n  datetime.date(2022, 10, 2),\n  'POULET AU ROMARIN ',\n  Decimal('13.408'),\n  Decimal('172.96320')),\n ('Woluwe',\n  datetime.date(2022, 10, 3),\n  'POULET AU ROMARIN ',\n  Decimal('4.092'),\n  Decimal('52.78680')),\n ('Woluwe',\n  datetime.date(2022, 10, 4),\n  'POULET AU ROMARIN ',\n  Decimal('2.154'),\n  Decimal('27.78660')),\n ('Woluwe',\n  datetime.date(2022, 10, 5),\n  'POULET AU ROMARIN ',\n  Decimal('3.456'),\n  Decimal('44.58240')),\n ('Woluwe',\n  datetime.date(2022, 10, 6),\n  'POULET AU ROMARIN ',\n  Decimal('3.258'),\n  Decimal('42.02820')),\n ('Woluwe',\n  datetime.date(2022, 10, 7),\n  'POULET AU ROMARIN ',\n  Decimal('4.746'),\n  Decimal('61.22340')),\n ('Woluwe',\n  datetime.date(2022, 10, 8),\n  'POULET AU ROMARIN ',\n  Decimal('2.392'),\n  Decimal('30.85680')),\n ('Woluwe',\n  datetime.date(2022, 10, 9),\n  'POULET AU ROMARIN ',\n  Decimal('23.234'),\n  Decimal('299.71860')),\n ('Woluwe',\n  datetime.date(2022, 10, 10),\n  'POULET AU ROMARIN ',\n  Decimal('4.490'),\n  Decimal('57.92100')),\n ('Woluwe',\n  datetime.date(2022, 10, 11),\n  'POULET AU ROMARIN ',\n  Decimal('2.158'),\n  Decimal('27.83820')),\n ('Woluwe',\n  datetime.date(2022, 10, 12),\n  'POULET AU ROMARIN ',\n  Decimal('2.250'),\n  Decimal('29.02500')),\n ('Woluwe',\n  datetime.date(2022, 10, 13),\n  'POULET AU ROMARIN ',\n  Decimal('4.560'),\n  Decimal('58.82400')),\n ('Woluwe',\n  datetime.date(2022, 10, 14),\n  'POULET AU ROMARIN ',\n  Decimal('2.408'),\n  Decimal('31.06320')),\n ('Woluwe',\n  datetime.date(2022, 10, 15),\n  'POULET AU ROMARIN ',\n  Decimal('2.402'),\n  Decimal('30.98580')),\n ('Woluwe',\n  datetime.date(2022, 10, 16),\n  'POULET AU ROMARIN ',\n  Decimal('18.574'),\n  Decimal('239.60460')),\n ('Woluwe',\n  datetime.date(2022, 10, 17),\n  'POULET AU ROMARIN ',\n  Decimal('5.632'),\n  Decimal('72.65280')),\n ('Woluwe',\n  datetime.date(2022, 10, 18),\n  'POULET AU ROMARIN ',\n  Decimal('1.018'),\n  Decimal('13.13220')),\n ('Woluwe',\n  datetime.date(2022, 10, 19),\n  'POULET AU ROMARIN ',\n  Decimal('5.414'),\n  Decimal('69.84060')),\n ('Woluwe',\n  datetime.date(2022, 10, 20),\n  'POULET AU ROMARIN ',\n  Decimal('3.498'),\n  Decimal('45.12420')),\n ('Woluwe',\n  datetime.date(2022, 10, 21),\n  'POULET AU ROMARIN ',\n  Decimal('1.936'),\n  Decimal('24.97440')),\n ('Woluwe',\n  datetime.date(2022, 10, 22),\n  'POULET AU ROMARIN ',\n  Decimal('6.820'),\n  Decimal('87.97800')),\n ('Woluwe',\n  datetime.date(2022, 10, 23),\n  'POULET AU ROMARIN ',\n  Decimal('22.048'),\n  Decimal('284.41920')),\n ('Woluwe',\n  datetime.date(2022, 10, 24),\n  'POULET AU ROMARIN ',\n  Decimal('4.544'),\n  Decimal('58.61760')),\n ('Woluwe',\n  datetime.date(2022, 10, 25),\n  'POULET AU ROMARIN ',\n  Decimal('3.424'),\n  Decimal('44.16960')),\n ('Woluwe',\n  datetime.date(2022, 10, 26),\n  'POULET AU ROMARIN ',\n  Decimal('3.342'),\n  Decimal('43.11180')),\n ('Woluwe',\n  datetime.date(2022, 10, 27),\n  'POULET AU ROMARIN ',\n  Decimal('2.950'),\n  Decimal('38.05500')),\n ('Woluwe',\n  datetime.date(2022, 10, 28),\n  'POULET AU ROMARIN ',\n  Decimal('3.432'),\n  Decimal('44.27280')),\n ('Woluwe',\n  datetime.date(2022, 10, 29),\n  'POULET AU ROMARIN ',\n  Decimal('5.018'),\n  Decimal('64.73220')),\n ('Woluwe',\n  datetime.date(2022, 10, 30),\n  'POULET AU ROMARIN ',\n  Decimal('14.236'),\n  Decimal('183.64440')),\n ('Woluwe',\n  datetime.date(2022, 10, 31),\n  'POULET AU ROMARIN ',\n  Decimal('0.934'),\n  Decimal('12.04860')),\n ('Woluwe',\n  datetime.date(2022, 11, 1),\n  'POULET AU ROMARIN ',\n  Decimal('21.380'),\n  Decimal('275.80200')),\n ('Woluwe',\n  datetime.date(2022, 11, 2),\n  'POULET AU ROMARIN ',\n  Decimal('3.162'),\n  Decimal('40.78980')),\n ('Woluwe',\n  datetime.date(2022, 11, 3),\n  'POULET AU ROMARIN ',\n  Decimal('3.400'),\n  Decimal('43.86000')),\n ('Woluwe',\n  datetime.date(2022, 11, 4),\n  'POULET AU ROMARIN ',\n  Decimal('1.230'),\n  Decimal('15.86700')),\n ('Woluwe',\n  datetime.date(2022, 11, 5),\n  'POULET AU ROMARIN ',\n  Decimal('5.159'),\n  Decimal('66.55110')),\n ('Woluwe',\n  datetime.date(2022, 11, 6),\n  'POULET AU ROMARIN ',\n  Decimal('18.382'),\n  Decimal('237.12780')),\n ('Woluwe',\n  datetime.date(2022, 11, 7),\n  'POULET AU ROMARIN ',\n  Decimal('2.200'),\n  Decimal('28.38000')),\n ('Woluwe',\n  datetime.date(2022, 11, 8),\n  'POULET AU ROMARIN ',\n  Decimal('7.484'),\n  Decimal('96.54360')),\n ('Woluwe',\n  datetime.date(2022, 11, 9),\n  'POULET AU ROMARIN ',\n  Decimal('4.242'),\n  Decimal('54.72180')),\n ('Woluwe',\n  datetime.date(2022, 11, 10),\n  'POULET AU ROMARIN ',\n  Decimal('4.646'),\n  Decimal('59.93340')),\n ('Woluwe',\n  datetime.date(2022, 11, 11),\n  'POULET AU ROMARIN ',\n  Decimal('8.234'),\n  Decimal('106.21860')),\n ('Woluwe',\n  datetime.date(2022, 11, 12),\n  'POULET AU ROMARIN ',\n  Decimal('5.498'),\n  Decimal('70.92420')),\n ('Woluwe',\n  datetime.date(2022, 11, 13),\n  'POULET AU ROMARIN ',\n  Decimal('19.886'),\n  Decimal('256.52940')),\n ('Woluwe',\n  datetime.date(2022, 11, 14),\n  'POULET AU ROMARIN ',\n  Decimal('4.474'),\n  Decimal('57.71460')),\n ('Woluwe',\n  datetime.date(2022, 11, 15),\n  'POULET AU ROMARIN ',\n  Decimal('7.248'),\n  Decimal('93.49920')),\n ('Woluwe',\n  datetime.date(2022, 11, 16),\n  'POULET AU ROMARIN ',\n  Decimal('7.442'),\n  Decimal('96.00180')),\n ('Woluwe',\n  datetime.date(2022, 11, 17),\n  'POULET AU ROMARIN ',\n  Decimal('5.084'),\n  Decimal('65.58360')),\n ('Woluwe',\n  datetime.date(2022, 11, 18),\n  'POULET AU ROMARIN ',\n  Decimal('1.996'),\n  Decimal('25.74840')),\n ('Woluwe',\n  datetime.date(2022, 11, 19),\n  'POULET AU ROMARIN ',\n  Decimal('4.476'),\n  Decimal('57.74040')),\n ('Woluwe',\n  datetime.date(2022, 11, 20),\n  'POULET AU ROMARIN ',\n  Decimal('19.388'),\n  Decimal('250.10520')),\n ('Woluwe',\n  datetime.date(2022, 11, 21),\n  'POULET AU ROMARIN ',\n  Decimal('2.190'),\n  Decimal('28.25100')),\n ('Woluwe',\n  datetime.date(2022, 11, 22),\n  'POULET AU ROMARIN ',\n  Decimal('1.044'),\n  Decimal('13.46760')),\n ('Woluwe',\n  datetime.date(2022, 11, 23),\n  'POULET AU ROMARIN ',\n  Decimal('4.414'),\n  Decimal('56.94060')),\n ('Woluwe',\n  datetime.date(2022, 11, 24),\n  'POULET AU ROMARIN ',\n  Decimal('5.482'),\n  Decimal('70.71780')),\n ('Woluwe',\n  datetime.date(2022, 11, 25),\n  'POULET AU ROMARIN ',\n  Decimal('5.584'),\n  Decimal('72.03360')),\n ('Woluwe',\n  datetime.date(2022, 11, 26),\n  'POULET AU ROMARIN ',\n  Decimal('3.312'),\n  Decimal('42.72480')),\n ('Woluwe',\n  datetime.date(2022, 11, 27),\n  'POULET AU ROMARIN ',\n  Decimal('21.372'),\n  Decimal('275.69880')),\n ('Woluwe',\n  datetime.date(2022, 11, 28),\n  'POULET AU ROMARIN ',\n  Decimal('4.664'),\n  Decimal('60.16560')),\n ('Woluwe',\n  datetime.date(2022, 11, 29),\n  'POULET AU ROMARIN ',\n  Decimal('2.954'),\n  Decimal('38.10660')),\n ('Woluwe',\n  datetime.date(2022, 11, 30),\n  'POULET AU ROMARIN ',\n  Decimal('6.596'),\n  Decimal('85.08840')),\n ('Woluwe',\n  datetime.date(2022, 12, 1),\n  'POULET AU ROMARIN ',\n  Decimal('4.022'),\n  Decimal('51.88380')),\n ('Woluwe',\n  datetime.date(2022, 12, 2),\n  'POULET AU ROMARIN ',\n  Decimal('1.240'),\n  Decimal('15.99600')),\n ('Woluwe',\n  datetime.date(2022, 12, 3),\n  'POULET AU ROMARIN ',\n  Decimal('6.304'),\n  Decimal('81.32160')),\n ('Woluwe',\n  datetime.date(2022, 12, 4),\n  'POULET AU ROMARIN ',\n  Decimal('17.442'),\n  Decimal('225.00180')),\n ('Woluwe',\n  datetime.date(2022, 12, 5),\n  'POULET AU ROMARIN ',\n  Decimal('4.708'),\n  Decimal('60.73320')),\n ('Woluwe',\n  datetime.date(2022, 12, 6),\n  'POULET AU ROMARIN ',\n  Decimal('1.248'),\n  Decimal('16.09920')),\n ('Woluwe',\n  datetime.date(2022, 12, 7),\n  'POULET AU ROMARIN ',\n  Decimal('6.838'),\n  Decimal('88.21020')),\n ('Woluwe',\n  datetime.date(2022, 12, 8),\n  'POULET AU ROMARIN ',\n  Decimal('4.284'),\n  Decimal('55.26360')),\n ('Woluwe',\n  datetime.date(2022, 12, 9),\n  'POULET AU ROMARIN ',\n  Decimal('2.064'),\n  Decimal('26.62560')),\n ('Woluwe',\n  datetime.date(2022, 12, 10),\n  'POULET AU ROMARIN ',\n  Decimal('7.550'),\n  Decimal('97.39500')),\n ('Woluwe',\n  datetime.date(2022, 12, 11),\n  'POULET AU ROMARIN ',\n  Decimal('21.970'),\n  Decimal('283.41300')),\n ('Woluwe',\n  datetime.date(2022, 12, 12),\n  'POULET AU ROMARIN ',\n  Decimal('2.516'),\n  Decimal('32.45640')),\n ('Woluwe',\n  datetime.date(2022, 12, 13),\n  'POULET AU ROMARIN ',\n  Decimal('2.042'),\n  Decimal('26.34180')),\n ('Woluwe',\n  datetime.date(2022, 12, 14),\n  'POULET AU ROMARIN ',\n  Decimal('4.960'),\n  Decimal('63.98400')),\n ('Woluwe',\n  datetime.date(2022, 12, 15),\n  'POULET AU ROMARIN ',\n  Decimal('2.206'),\n  Decimal('28.45740')),\n ('Woluwe',\n  datetime.date(2022, 12, 16),\n  'POULET AU ROMARIN ',\n  Decimal('0.984'),\n  Decimal('12.69360')),\n ('Woluwe',\n  datetime.date(2022, 12, 17),\n  'POULET AU ROMARIN ',\n  Decimal('6.026'),\n  Decimal('77.73540')),\n ('Woluwe',\n  datetime.date(2022, 12, 18),\n  'POULET AU ROMARIN ',\n  Decimal('22.370'),\n  Decimal('288.57300')),\n ('Woluwe',\n  datetime.date(2022, 12, 19),\n  'POULET AU ROMARIN ',\n  Decimal('3.290'),\n  Decimal('42.44100')),\n ('Woluwe',\n  datetime.date(2022, 12, 20),\n  'POULET AU ROMARIN ',\n  Decimal('3.204'),\n  Decimal('41.33160')),\n ('Woluwe',\n  datetime.date(2022, 12, 21),\n  'POULET AU ROMARIN ',\n  Decimal('3.778'),\n  Decimal('48.73620')),\n ('Woluwe',\n  datetime.date(2022, 12, 22),\n  'POULET AU ROMARIN ',\n  Decimal('6.968'),\n  Decimal('89.88720')),\n ('Woluwe',\n  datetime.date(2022, 12, 23),\n  'POULET AU ROMARIN ',\n  Decimal('1.754'),\n  Decimal('22.62660')),\n ('Woluwe',\n  datetime.date(2022, 12, 24),\n  'POULET AU ROMARIN ',\n  Decimal('3.480'),\n  Decimal('44.89200')),\n ('Woluwe',\n  datetime.date(2022, 12, 26),\n  'POULET AU ROMARIN ',\n  Decimal('6.380'),\n  Decimal('82.30200')),\n ('Woluwe',\n  datetime.date(2022, 12, 27),\n  'POULET AU ROMARIN ',\n  Decimal('1.478'),\n  Decimal('19.06620')),\n ('Woluwe',\n  datetime.date(2022, 12, 28),\n  'POULET AU ROMARIN ',\n  Decimal('2.878'),\n  Decimal('37.12620')),\n ('Woluwe',\n  datetime.date(2022, 12, 29),\n  'POULET AU ROMARIN ',\n  Decimal('4.342'),\n  Decimal('56.01180')),\n ('Woluwe',\n  datetime.date(2022, 12, 30),\n  'POULET AU ROMARIN ',\n  Decimal('4.614'),\n  Decimal('59.52060')),\n ('Woluwe',\n  datetime.date(2022, 12, 31),\n  'POULET AU ROMARIN ',\n  Decimal('3.212'),\n  Decimal('41.43480')),\n ('Woluwe',\n  datetime.date(2023, 1, 2),\n  'POULET AU ROMARIN ',\n  Decimal('1.444'),\n  Decimal('18.62760')),\n ('Woluwe',\n  datetime.date(2023, 1, 3),\n  'POULET AU ROMARIN ',\n  Decimal('6.608'),\n  Decimal('85.24320')),\n ('Woluwe',\n  datetime.date(2023, 1, 4),\n  'POULET AU ROMARIN ',\n  Decimal('5.210'),\n  Decimal('67.20900')),\n ('Woluwe',\n  datetime.date(2023, 1, 5),\n  'POULET AU ROMARIN ',\n  Decimal('1.104'),\n  Decimal('14.24160')),\n ('Woluwe',\n  datetime.date(2023, 1, 6),\n  'POULET AU ROMARIN ',\n  Decimal('4.564'),\n  Decimal('58.87560')),\n ('Woluwe',\n  datetime.date(2023, 1, 7),\n  'POULET AU ROMARIN ',\n  Decimal('4.282'),\n  Decimal('55.23780')),\n ('Woluwe',\n  datetime.date(2023, 1, 8),\n  'POULET AU ROMARIN ',\n  Decimal('23.700'),\n  Decimal('305.73000')),\n ('Woluwe',\n  datetime.date(2023, 1, 9),\n  'POULET AU ROMARIN ',\n  Decimal('2.166'),\n  Decimal('27.94140')),\n ('Woluwe',\n  datetime.date(2023, 1, 10),\n  'POULET AU ROMARIN ',\n  Decimal('0.862'),\n  Decimal('11.11980')),\n ('Woluwe',\n  datetime.date(2023, 1, 11),\n  'POULET AU ROMARIN ',\n  Decimal('3.774'),\n  Decimal('48.68460')),\n ('Woluwe',\n  datetime.date(2023, 1, 12),\n  'POULET AU ROMARIN ',\n  Decimal('5.242'),\n  Decimal('67.62180')),\n ('Woluwe',\n  datetime.date(2023, 1, 13),\n  'POULET AU ROMARIN ',\n  Decimal('3.282'),\n  Decimal('42.33780')),\n ('Woluwe',\n  datetime.date(2023, 1, 14),\n  'POULET AU ROMARIN ',\n  Decimal('8.736'),\n  Decimal('112.69440')),\n ('Woluwe',\n  datetime.date(2023, 1, 15),\n  'POULET AU ROMARIN ',\n  Decimal('22.702'),\n  Decimal('292.85580')),\n ('Woluwe',\n  datetime.date(2023, 1, 16),\n  'POULET AU ROMARIN ',\n  Decimal('4.002'),\n  Decimal('51.62580')),\n ('Woluwe',\n  datetime.date(2023, 1, 18),\n  'POULET AU ROMARIN ',\n  Decimal('6.892'),\n  Decimal('88.90680')),\n ('Woluwe',\n  datetime.date(2023, 1, 19),\n  'POULET AU ROMARIN ',\n  Decimal('2.272'),\n  Decimal('29.30880')),\n ('Woluwe',\n  datetime.date(2023, 1, 20),\n  'POULET AU ROMARIN ',\n  Decimal('5.514'),\n  Decimal('71.13060')),\n ('Woluwe',\n  datetime.date(2023, 1, 21),\n  'POULET AU ROMARIN ',\n  Decimal('8.236'),\n  Decimal('106.24440')),\n ('Woluwe',\n  datetime.date(2023, 1, 22),\n  'POULET AU ROMARIN ',\n  Decimal('24.496'),\n  Decimal('315.99840')),\n ('Woluwe',\n  datetime.date(2023, 1, 23),\n  'POULET AU ROMARIN ',\n  Decimal('3.018'),\n  Decimal('38.93220')),\n ('Woluwe',\n  datetime.date(2023, 1, 24),\n  'POULET AU ROMARIN ',\n  Decimal('1.736'),\n  Decimal('22.39440')),\n ('Woluwe',\n  datetime.date(2023, 1, 25),\n  'POULET AU ROMARIN ',\n  Decimal('5.052'),\n  Decimal('65.17080')),\n ('Woluwe',\n  datetime.date(2023, 1, 26),\n  'POULET AU ROMARIN ',\n  Decimal('1.108'),\n  Decimal('14.29320')),\n ('Woluwe',\n  datetime.date(2023, 1, 27),\n  'POULET AU ROMARIN ',\n  Decimal('2.136'),\n  Decimal('27.55440')),\n ('Woluwe',\n  datetime.date(2023, 1, 28),\n  'POULET AU ROMARIN ',\n  Decimal('11.230'),\n  Decimal('144.86700')),\n ('Woluwe',\n  datetime.date(2023, 1, 29),\n  'POULET AU ROMARIN ',\n  Decimal('23.404'),\n  Decimal('301.91160')),\n ('Woluwe',\n  datetime.date(2023, 1, 30),\n  'POULET AU ROMARIN ',\n  Decimal('5.008'),\n  Decimal('64.60320')),\n ('Woluwe',\n  datetime.date(2023, 1, 31),\n  'POULET AU ROMARIN ',\n  Decimal('1.620'),\n  Decimal('20.89800')),\n ('Woluwe',\n  datetime.date(2023, 2, 1),\n  'POULET AU ROMARIN ',\n  Decimal('6.660'),\n  Decimal('85.91400')),\n ('Woluwe',\n  datetime.date(2023, 2, 2),\n  'POULET AU ROMARIN ',\n  Decimal('1.658'),\n  Decimal('21.38820')),\n ('Woluwe',\n  datetime.date(2023, 2, 3),\n  'POULET AU ROMARIN ',\n  Decimal('2.066'),\n  Decimal('26.65140')),\n ('Woluwe',\n  datetime.date(2023, 2, 4),\n  'POULET AU ROMARIN ',\n  Decimal('4.792'),\n  Decimal('61.81680')),\n ('Woluwe',\n  datetime.date(2023, 2, 5),\n  'POULET AU ROMARIN ',\n  Decimal('26.568'),\n  Decimal('342.72720')),\n ('Woluwe',\n  datetime.date(2023, 2, 6),\n  'POULET AU ROMARIN ',\n  Decimal('8.690'),\n  Decimal('112.10100')),\n ('Woluwe',\n  datetime.date(2023, 2, 7),\n  'POULET AU ROMARIN ',\n  Decimal('2.108'),\n  Decimal('27.19320')),\n ('Woluwe',\n  datetime.date(2023, 2, 8),\n  'POULET AU ROMARIN ',\n  Decimal('5.274'),\n  Decimal('68.03460')),\n ('Woluwe',\n  datetime.date(2023, 2, 9),\n  'POULET AU ROMARIN ',\n  Decimal('3.198'),\n  Decimal('41.25420')),\n ('Woluwe',\n  datetime.date(2023, 2, 10),\n  'POULET AU ROMARIN ',\n  Decimal('1.644'),\n  Decimal('21.20760')),\n ('Woluwe',\n  datetime.date(2023, 2, 11),\n  'POULET AU ROMARIN ',\n  Decimal('5.556'),\n  Decimal('71.67240')),\n ('Woluwe',\n  datetime.date(2023, 2, 12),\n  'POULET AU ROMARIN ',\n  Decimal('36.572'),\n  Decimal('471.77880')),\n ('Woluwe',\n  datetime.date(2023, 2, 13),\n  'POULET AU ROMARIN ',\n  Decimal('2.528'),\n  Decimal('32.61120')),\n ('Woluwe',\n  datetime.date(2023, 2, 14),\n  'POULET AU ROMARIN ',\n  Decimal('2.068'),\n  Decimal('26.67720')),\n ('Woluwe',\n  datetime.date(2023, 2, 15),\n  'POULET AU ROMARIN ',\n  Decimal('4.836'),\n  Decimal('62.38440')),\n ('Woluwe',\n  datetime.date(2023, 2, 16),\n  'POULET AU ROMARIN ',\n  Decimal('3.312'),\n  Decimal('42.72480')),\n ('Woluwe',\n  datetime.date(2023, 2, 17),\n  'POULET AU ROMARIN ',\n  Decimal('1.994'),\n  Decimal('25.72260')),\n ('Woluwe',\n  datetime.date(2023, 2, 18),\n  'POULET AU ROMARIN ',\n  Decimal('7.936'),\n  Decimal('102.37440')),\n ('Woluwe',\n  datetime.date(2023, 2, 19),\n  'POULET AU ROMARIN ',\n  Decimal('29.546'),\n  Decimal('381.14340')),\n ('Woluwe',\n  datetime.date(2023, 2, 20),\n  'POULET AU ROMARIN ',\n  Decimal('0.528'),\n  Decimal('6.81120')),\n ('Woluwe',\n  datetime.date(2023, 2, 21),\n  'POULET AU ROMARIN ',\n  Decimal('3.224'),\n  Decimal('41.58960')),\n ('Woluwe',\n  datetime.date(2023, 2, 22),\n  'POULET AU ROMARIN ',\n  Decimal('2.432'),\n  Decimal('31.37280')),\n ('Woluwe',\n  datetime.date(2023, 2, 23),\n  'POULET AU ROMARIN ',\n  Decimal('7.478'),\n  Decimal('96.46620')),\n ('Woluwe',\n  datetime.date(2023, 2, 24),\n  'POULET AU ROMARIN ',\n  Decimal('1.598'),\n  Decimal('20.61420')),\n ('Woluwe',\n  datetime.date(2023, 2, 25),\n  'POULET AU ROMARIN ',\n  Decimal('4.368'),\n  Decimal('56.34720')),\n ('Woluwe',\n  datetime.date(2023, 2, 26),\n  'POULET AU ROMARIN ',\n  Decimal('41.136'),\n  Decimal('530.65440')),\n ('Woluwe',\n  datetime.date(2023, 2, 27),\n  'POULET AU ROMARIN ',\n  Decimal('5.384'),\n  Decimal('69.45360')),\n ('Woluwe',\n  datetime.date(2023, 2, 28),\n  'POULET AU ROMARIN ',\n  Decimal('1.000'),\n  Decimal('12.90000')),\n ('Woluwe',\n  datetime.date(2023, 3, 1),\n  'POULET AU ROMARIN ',\n  Decimal('5.926'),\n  Decimal('76.44540')),\n ('Woluwe',\n  datetime.date(2023, 3, 2),\n  'POULET AU ROMARIN ',\n  Decimal('1.652'),\n  Decimal('21.31080')),\n ('Woluwe',\n  datetime.date(2023, 3, 3),\n  'POULET AU ROMARIN ',\n  Decimal('8.700'),\n  Decimal('112.23000')),\n ('Woluwe',\n  datetime.date(2023, 3, 4),\n  'POULET AU ROMARIN ',\n  Decimal('7.042'),\n  Decimal('90.84180')),\n ('Woluwe',\n  datetime.date(2023, 3, 5),\n  'POULET AU ROMARIN ',\n  Decimal('36.864'),\n  Decimal('475.54560')),\n ('Woluwe',\n  datetime.date(2023, 3, 6),\n  'POULET AU ROMARIN ',\n  Decimal('2.430'),\n  Decimal('31.34700')),\n ('Woluwe',\n  datetime.date(2023, 3, 7),\n  'POULET AU ROMARIN ',\n  Decimal('3.894'),\n  Decimal('50.23260')),\n ('Woluwe',\n  datetime.date(2023, 3, 8),\n  'POULET AU ROMARIN ',\n  Decimal('2.912'),\n  Decimal('37.56480')),\n ('Woluwe',\n  datetime.date(2023, 3, 9),\n  'POULET AU ROMARIN ',\n  Decimal('2.068'),\n  Decimal('26.67720')),\n ('Woluwe',\n  datetime.date(2023, 3, 10),\n  'POULET AU ROMARIN ',\n  Decimal('2.314'),\n  Decimal('29.85060')),\n ('Woluwe',\n  datetime.date(2023, 3, 11),\n  'POULET AU ROMARIN ',\n  Decimal('10.858'),\n  Decimal('140.06820')),\n ('Woluwe',\n  datetime.date(2023, 3, 12),\n  'POULET AU ROMARIN ',\n  Decimal('42.592'),\n  Decimal('549.43680')),\n ('Woluwe',\n  datetime.date(2023, 3, 13),\n  'POULET AU ROMARIN ',\n  Decimal('0.562'),\n  Decimal('7.24980')),\n ('Woluwe',\n  datetime.date(2023, 3, 14),\n  'POULET AU ROMARIN ',\n  Decimal('2.276'),\n  Decimal('29.36040')),\n ('Woluwe',\n  datetime.date(2023, 3, 15),\n  'POULET AU ROMARIN ',\n  Decimal('4.508'),\n  Decimal('58.15320')),\n ('Woluwe',\n  datetime.date(2023, 3, 16),\n  'POULET AU ROMARIN ',\n  Decimal('3.378'),\n  Decimal('43.57620')),\n ('Woluwe',\n  datetime.date(2023, 3, 17),\n  'POULET AU ROMARIN ',\n  Decimal('2.212'),\n  Decimal('28.53480')),\n ('Woluwe',\n  datetime.date(2023, 3, 18),\n  'POULET AU ROMARIN ',\n  Decimal('1.572'),\n  Decimal('20.27880')),\n ('Woluwe',\n  datetime.date(2023, 3, 19),\n  'POULET AU ROMARIN ',\n  Decimal('29.130'),\n  Decimal('375.77700'))]\n\n\n\ndf_chicken_sales = pd.DataFrame(chicken_sales_latem_woluwe, columns=['shop','date','product','qty','rev'])\n\n\ndf_chicken_sales\n\n\n\n\n\n\n\n\nshop\ndate\nproduct\nqty\nrev\n\n\n\n\n0\nLATEM\n2022-01-27\nPOULET AU ROMARIN\n2.384\n30.75360\n\n\n1\nLATEM\n2022-02-05\nPOULET AU ROMARIN\n1.124\n14.49960\n\n\n2\nLATEM\n2022-02-06\nPOULET AU ROMARIN\n2.432\n31.37280\n\n\n3\nLATEM\n2022-04-05\nPOULET AU ROMARIN\n0.536\n6.91440\n\n\n4\nLATEM\n2022-06-12\nPOULET AU ROMARIN\n1.174\n15.14460\n\n\n...\n...\n...\n...\n...\n...\n\n\n476\nWoluwe\n2023-03-15\nPOULET AU ROMARIN\n4.508\n58.15320\n\n\n477\nWoluwe\n2023-03-16\nPOULET AU ROMARIN\n3.378\n43.57620\n\n\n478\nWoluwe\n2023-03-17\nPOULET AU ROMARIN\n2.212\n28.53480\n\n\n479\nWoluwe\n2023-03-18\nPOULET AU ROMARIN\n1.572\n20.27880\n\n\n480\nWoluwe\n2023-03-19\nPOULET AU ROMARIN\n29.130\n375.77700\n\n\n\n\n481 rows × 5 columns\n\n\n\n\n# Select sales data for Latem and Woluwe\nlatem_sales = df_chicken_sales[df_chicken_sales['shop'] == 'LATEM']\nwoluwe_sales = df_chicken_sales[df_chicken_sales['shop'] == 'Woluwe']\n\n# Create a Figure and Axes object\nfig, ax = plt.subplots()\n\n# ax.plot(latem_sales['date'], latem_sales['rev'], label='Latem')\n# ax.plot(woluwe_sales['date'], woluwe_sales['rev'], color='red', label='Woluwe')\n\nax.bar(latem_sales['date'], latem_sales['rev'], width=1, align='edge', label='Latem')\nax.bar(woluwe_sales['date'], woluwe_sales['rev'], width=-1, align='edge', color='red', label='Woluwe')\n\n# Add labels, legend, and title to the chart\nax.set_xlabel('Date')\nax.set_ylabel('Revenue')\nax.legend()\nax.set_title('Chicken Sales by Shop')\n\n# Show the chart\nplt.show()\n\n\n\n\n\nsource\n\n\nlast_n_days\n\n last_n_days (n)\n\n\ndf_chicken_sales\n\n\n\n\n\n\n\n\nshop\ndate\nproduct\nqty\nrev\n\n\n\n\n0\nLATEM\n2022-01-27\nPOULET AU ROMARIN\n2.384\n30.75360\n\n\n1\nLATEM\n2022-02-05\nPOULET AU ROMARIN\n1.124\n14.49960\n\n\n2\nLATEM\n2022-02-06\nPOULET AU ROMARIN\n2.432\n31.37280\n\n\n3\nLATEM\n2022-04-05\nPOULET AU ROMARIN\n0.536\n6.91440\n\n\n4\nLATEM\n2022-06-12\nPOULET AU ROMARIN\n1.174\n15.14460\n\n\n...\n...\n...\n...\n...\n...\n\n\n476\nWoluwe\n2023-03-15\nPOULET AU ROMARIN\n4.508\n58.15320\n\n\n477\nWoluwe\n2023-03-16\nPOULET AU ROMARIN\n3.378\n43.57620\n\n\n478\nWoluwe\n2023-03-17\nPOULET AU ROMARIN\n2.212\n28.53480\n\n\n479\nWoluwe\n2023-03-18\nPOULET AU ROMARIN\n1.572\n20.27880\n\n\n480\nWoluwe\n2023-03-19\nPOULET AU ROMARIN\n29.130\n375.77700\n\n\n\n\n481 rows × 5 columns\n\n\n\n\nsource\n\n\ncompare_sales_for_a_product_every_day\n\n compare_sales_for_a_product_every_day (start_date, end_date, shop_name_a,\n                                        shop_name_b, product_id)\n\n\ndef latem_wol_comparison():\n    compare_sales_for_a_product_every_day(\n        start_date = '2022-01-01',\n        end_date = get_today_date_string(),\n        shop_name_a = 'LATEM',\n        shop_name_b = 'Woluwe',\n        product_id = 18191\n    )\n    return\n    \nlatem_wol_comparison()\n\nconfig.ini file available... using that\n\n\n\n\n\n\nsource\n\n\nget_product_names\n\n get_product_names ()\n\n\ntranslation_dict = get_product_names()\n\nconfig.ini file available... using that\n\n\n\ntranslation_dict\n\n{32607: 'CREVETTES GRISES EPLUCHEES (KLAAS PUUL 1KG)',\n 32605: 'CABILLAUD DOS SS PEAU (+800g)',\n 32560: 'COCA ZERO 50CL',\n 32774: 'RAVIER ALU RECT. + REBORD 2000CC (1000 PCS)',\n 32772: 'RAVIER RECT. 3600CC ALU (LSGNE)',\n 32771: 'RAVIER ALU 1KG RECT. BA 911 RIS (1000 PCS)',\n 32778: 'RAVIER 1,5L / R16L 800PCS',\n 32765: 'COUVERCLE ALU/CARTON BA 911 RIS (1KG)',\n 32710: 'CAROTTE CUBES 30/30',\n 36725: 'PLIE FILET SS PEAU 150G',\n 33069: 'AILE POULET',\n 32592: 'SURIMI FANTICRAB ROUGE',\n 33056: 'DINDE FILET',\n 32315: 'LAIT DE COCO (AROY)',\n 32288: 'HUILE OLIVE EXTRA VIERGE 5L ITAL',\n 31677: 'PIZZA BUFFALA',\n 32205: 'EPICES MELANGE POULET',\n 19353: 'AGNEAU FFY',\n 49958: 'AGNEAU FFY',\n 20573: 'MENU 12 % (Resto)',\n 20555: 'TIRAMISU FRAMBOISE (EVENT)',\n 20570: 'VESTE DE CUISINE BLANCHE',\n 20082: 'AFT CHEESE (PCE)',\n 20081: 'AFT HOT (PCE)',\n 20577: 'MINI BOULETTES THAI CURRY CORIANDRE (BTE) ',\n 20574: 'LOCATION SALLE 21%',\n 31679: 'PIZZA MARGHARITA (PCE)',\n 31662: 'TWIX 50GR',\n 32023: 'FOURCHETTE PS BLANC 180MM - 100PCS',\n 20575: 'BOISSON 12%',\n 31550: 'JAMBON COUPE 10X8.5CM',\n 19760: 'AGNEAU PASCAL 1PERS',\n 18812: 'AILE CRUE LAQUE',\n 19343: 'AIGLEFIN FFY',\n 49961: 'AIGLEFIN FFY',\n 18813: 'AILE CRUE MARINADE',\n 19821: 'ANANASTASIE',\n 18879: 'AMANDES CACAO PETIT POT',\n 18877: 'AMANDES CHOCOLAT PETIT POT',\n 18878: 'AMANDES GIANDUJA PETIT POT',\n 18695: 'AMERICAIN DINDE',\n 18777: 'ANGUILLES AU VERT',\n 18760: 'ANGUILLES S/V VRAC',\n 19934: 'ARBRE A BONBONS GRAND',\n 18542: 'ASPERGES BLANCHES CUITES',\n 18541: 'ASPERGES BLANCHES CUITES',\n 19823: 'ANANASTASIE',\n 18778: 'ANGUILLES AU VERT',\n 19935: 'ARBRE A BONBONS MEDIUM',\n 19936: 'ARBRE A BONBONS PETIT',\n 18644: 'ASPERGES A LA FLAMANDE',\n 52285: 'AIRELLE SAUVAGE',\n 38520: 'AIRELLE SAUVAGE',\n 52284: 'AIRELLE SAUVAGE',\n 18453: 'AILE DE RAIE',\n 19290: 'AIRELLE MAISON 200G',\n 52878: 'AGNEAU SOURIS HARISSA',\n 18354: 'AGNEAU SOURIS HARISSA',\n 53086: 'AGNEAU SOURIS HARISSA',\n 52877: 'AGNEAU SOURIS HARISSA',\n 19289: 'AIRELLES SAUVAGES 200G',\n 18887: 'ASSORTIMENT ENTREES THAILANDAISE',\n 18223: 'BOEUF LANGUE (AP)',\n 20253: 'ASSORTIMENT 4 PAINS',\n 49932: 'ASSORTIMENT 3 PAINS',\n 20254: 'ASSORTIMENT 3 PAINS',\n 19117: 'ASSIETTE SAUMON CREVETTES 2PERS',\n 19979: 'ASSORTIMENT DIPS ET PAIN PITTA',\n 20080: 'AT BOL 1 - WES358/01',\n 19419: 'ASSIETTE VIP BALBEK',\n 18384: 'ASSORTIMENT MINI SAUCISSES POULET CRU',\n 20019: 'ASSORTIMENT SAUCISSONS ITALIENS',\n 18418: 'AUBERGINES FARCIES AU YAOURT',\n 19843: 'BABA AU RHUM',\n 18465: 'BABY HOMARD DECOR LINGUINI',\n 49943: 'BAGUETTE PARISIENNE',\n 19870: 'BAGUETTE PARISIENNE',\n 18792: 'BAR AUX OIGNONS ET GINGEMBRE',\n 18791: 'BAR AUX OIGNONS ET PAPRIKA',\n 18775: 'BAR / DAURADE FARCI',\n 18380: 'BATONNET POULET CAJUN CRU',\n 51558: 'BATONNET POULET CAJUN CUIT',\n 18158: 'BATONNET POULET CAJUN CUIT',\n 51559: 'BATONNET POULET CAJUN CUIT',\n 18155: 'BATONNET POULET SESAME CUIT',\n 18154: 'BATONNET POULET SESAME CUIT',\n 18349: 'BOEUF A L INDIENNE',\n 18159: 'BATONNET POULET CAJUN CUIT',\n 19216: 'ASSIETTE VIP JUST PERFECT',\n 18379: 'BATONNET POULET CAJUN CRU S/V',\n 18376: 'BATONNET POULET SESAME CRU',\n 18217: 'BICHE MEDAILLON CUIT',\n 19564: 'BISQUE HOMARD 1/2L',\n 51554: 'BLANQUETTE DE DINDE',\n 51556: 'BLANQUETTE DE DINDE',\n 51557: 'BLANQUETTE DE DINDE',\n 19838: 'BAVAROIS CITRON',\n 19820: 'BAVAROIS FRAMBOISE',\n 18918: 'BODY WARMER NOIR',\n 19862: 'BLANC MANGER FRAMBOISES',\n 18237: 'BLANQUETTE DE DINDE (AP)',\n 18238: 'BLANQUETTE DE DINDE (S/V)',\n 18321: 'BLANQUETTE VEAU',\n 49791: 'BLANQUETTE VEAU',\n 19146: 'BLANQUETTE VEAU (S/V)',\n 18320: 'BLANQUETTE VEAU',\n 18319: 'BLANQUETTE VEAU',\n 18472: 'BLETTES / KALE GRILLE (KG)',\n 38679: 'BLANQUETTE VEAU (KG)',\n 18337: 'BOULETTES KEFTA S/V',\n 17948: 'BOEUF A LA CHINOISE',\n 18350: 'BOEUF A L INDIENNE',\n 18348: 'BOULETTE NATURE S/V',\n 51361: 'ASPERGES VERTES CUITES',\n 18579: 'ASPERGES VERTES CUITES',\n 51360: 'ASPERGES VERTES CUITES',\n 20234: 'BOEUF INDIENNE + ACC',\n 18224: 'BOEUF LANGUE (S/V)',\n 20023: 'BOUCH. HOMARD SAUCE CIBOULETTE',\n 19828: 'BOUGIE ANNIVERSAIRE',\n 19542: 'BOUILLON TOM KHA',\n 18316: 'BOULETTES SAUCE TOMATE',\n 18315: 'BOULETTES SAUCE TOMATE',\n 49976: 'BOULETTES SAUCE TOMATE',\n 18025: 'BOULGOUR',\n 18024: 'BOULGOUR',\n 19929: 'BOUTEILLE BONBON GRANDE',\n 18317: 'BOULETTES SAUCE TOMATE',\n 49766: 'BOULETTES SAUCE TOMATE',\n 19866: 'BRU PETILLANTE PLASTIQUE 50 CL',\n 18374: 'BROCHETTE CAJUN CRU',\n 19863: 'BRU PLATE BOUTEILLE VERRE 50CL',\n 18153: 'BROCHETTE CAJUN CUIT',\n 18404: 'BROCHETTE MARINADE ROUGE',\n 18370: 'BROCHETTE MOUTARDE AIL CRU',\n 18372: 'BROCHETTE CORIANDRE CURRY CRU',\n 17992: 'BROCHETTE SOJA',\n 18149: 'BROCHETTE MOUTARDE AIL CUIT',\n 19221: 'BP CHILD ( CH ) CHEESE',\n 20074: 'BRUSC BRESAOLA',\n 18682: 'BRIE MEAUX',\n 18681: 'BRIE MORCEAU (SUR PLATEAUX)',\n 18758: 'BROCHETTE AGNEAU FILET ',\n 51547: 'BROCHETTE CAJUN CUIT',\n 18152: 'BROCHETTE CAJUN CUIT',\n 51548: 'BROCHETTE CAJUN CUIT',\n 19122: 'BOUILLON THAI (base)',\n 19915: 'CAFE CLASSIC',\n 18150: 'BROCHETTE CORIANDRE CURRY CUIT',\n 18151: 'BROCHETTE CORIANDRE CURRY CUIT',\n 19864: 'BRU PLATE VERRE 25CL',\n 20075: 'BRUSC CAVIAR AUBERGINE',\n 20072: 'BRUSC CHEVRE FRAIS',\n 20077: 'BRUSC COURGETTES GRILLEES',\n 20071: 'BRUSC FOIE GRAS',\n 20073: 'BRUSC MOZZARELLA',\n 19149: 'BUFFET PERSO 23 EURO',\n 19418: 'BUFFET PERSONNALISE',\n 19430: 'BUFFET TOUR DU MONDE (prix/pers)',\n 19678: 'BURGER DE LEGUMES',\n 20039: 'BUFFALA GR FAIM',\n 18574: 'BURGER AUBERGINES (KG)',\n 18697: 'BURGER DE VOLAILLE',\n 19165: 'CABILLAUD CUIT + SAUCE (2PERS)',\n 18748: 'CACAHUETES AU WASABI',\n 19431: 'BUFFET PARFUM D ASIE FROID ET CHAUD (PERS.)',\n 19439: 'BUFFET FROID LET IT SNOW + PAVLOVA AUX POIRES ET SPECULOOS',\n 53448: 'BUFFET FROID LET IT SNOW + PAVLOVA AUX POIRES ET SPECULOOS',\n 53449: 'BUFFET FROID LET IT SNOW + PAVLOVA AUX POIRES ET SPECULOOS',\n 19158: 'CAILLE NATURE DESOSSEE CUITE',\n 18221: 'LEMONGRASS STICK',\n 49866: 'LEMONGRASS STICK',\n 18680: 'CAMEMBERT',\n 51544: 'BROCHETTE MOUTARDE AIL CRU',\n 51543: 'BROCHETTE MOUTARDE AIL CRU',\n 18369: 'BROCHETTE MOUTARDE AIL CRU',\n 19143: 'CAILLE ROTIE NATURE',\n 18971: 'CANNELLES /4',\n 19914: 'CAPUCCINO A EMPORTER',\n 18565: 'CAROTTES CELERI RAISINS',\n 19676: 'CAKE CITRON',\n 19195: 'CAILLE NATURE CRU',\n 18346: 'CANARD CUISSE SLOW COOKED',\n 18400: 'CANARD FOIE CRU',\n 18801: 'CANARD LAQUE + SAUCE',\n 18399: 'CANARD PEKIN DESOSSE CRU',\n 18576: 'CANNELLONI CEPES',\n 18489: 'CAROTTES POTIRON AIRELLES (AP)',\n 19888: 'CAUTION ASSIETTE PORCELAINE',\n 19940: 'CAUTION BOITE ISOTHERME',\n 18402: 'CANARD BOIS CRU',\n 20230: 'CAUTION GASTRO INOX OUT',\n 18845: 'CARTE KDO + ENVELOPPE',\n 18934: 'CARTE SILVER CADEAU',\n 18936: 'CARTE FIDELITE MAGASIN 500 PCS',\n 18941: 'CARTE VISITE DOUBLE FACE FTK',\n 18942: 'CARTOUCHE ENCRE DATEUSE BLITZ',\n 19884: 'CAUTION ASSIETTE SUSHI',\n 20210: 'CAUTION BAC TRANSPORT OUT',\n 57439: 'CAUTION BAC TRANSPORT OUT',\n 57438: 'CAUTION BAC TRANSPORT OUT',\n 57943: 'CAUTION BOL',\n 57942: 'CAUTION BOL',\n 57941: 'CAUTION BOL',\n 19887: 'CAUTION BOL',\n 19268: 'CAROTTES CELERI RAISINS',\n 18562: 'CAROTTES CELERI RAISINS',\n 18491: 'CAROTTES POTIRON AIRELLES (AP)',\n 18461: 'CARPACCIO SAUMON (KG)',\n 18935: 'CARTE GOLD 250 PCS',\n 19333: 'CHICKEN F. FFY',\n 49908: 'CHICKEN F. FFY',\n 20184: 'CAUTION GASTRO INOX IN',\n 19885: 'CAUTION JATTE COCKTAIL',\n 19947: 'CAUTION PLATEAU MELAMINE',\n 18474: 'CHAMPIGNONS DE PARIS AU PERSIL',\n 19267: 'CHAMPIGNONS DES BOIS (PORTION)',\n 18554: 'CHAMPIGNONS FARCIS',\n 18553: 'CHAMPIGNONS FARCIS',\n 18555: 'CHAMPIGNONS FARCIS',\n 18557: 'CHAMPIGNONS MELANGE (AP)',\n 18550: 'CHAMPIGNONS SAUTES',\n 18552: 'CHAMPIGNONS SAUTES',\n 19876: 'CAUTION POT A SAUCE',\n 19948: 'CAUTION PLATEAU PORCELAINE',\n 19886: 'CAUTION SALADIER PAIN',\n 19941: 'CAUTION VASE DONAU GRAND 35 CM',\n 18387: 'LIEVRE CUISSE + SAUCE',\n 19629: 'CHAMPAGNE CHARDONNAY FTK 75CL',\n 49903: 'CHAMPAGNE CHARDONNAY FTK 75CL',\n 18216: 'CERF MEDAILLON CUIT',\n 18897: 'CERF RACK EN SAUCE',\n 18392: 'FAISAN ENTIER CRU',\n 18797: 'EPICE TERRINE',\n 18305: 'CANARD LAQUE',\n 18304: 'CHICKEN FINGERS MARINES',\n 18303: 'CHICKEN FINGERS MARINES',\n 19189: 'CHAPON DESOSSE SCARLETT CRU',\n 19943: 'CAUTION VASE DONAU PETIT 18 CM',\n 19939: 'CAUTION VERRINE/JATTE',\n 18556: 'CHAMPIGNONS MELANGE (KG)',\n 18551: 'CHAMPIGNONS SAUTES',\n 18302: 'CHICKEN FINGERS MARINES',\n 49794: 'CHICKEN FINGERS MARINES',\n 19630: 'CHAMPAGNE CHARDONNAY FTK 37.5CL',\n 49951: 'CHAMPAGNE CHARDONNAY FTK 37.5CL',\n 19191: 'CHAPON CRU',\n 19131: 'CHEVREUIL SAUCE TIERENTEYN',\n 18559: 'CHAMPIGNONS DES BOIS',\n 50673: 'CHAMPIGNONS DES BOIS',\n 50672: 'CHAMPIGNONS DES BOIS',\n 18545: 'CHICONS CONFITS CHATAIGNES/OIGNONS',\n 18543: 'CHICONS CONFITS CHATAIGNES/OIGNONS',\n 18296: 'CIVET BICHE CHAMP BOIS (AP)',\n 18544: 'CHICONS CONFITS CHATAIGNES/OIGNONS',\n 19192: 'CHAPON CRU 100G',\n 19942: 'CAUTION VASE DONAU MOYEN 28 CM',\n 19582: 'CHUTNEY DE SAISON',\n 19937: 'CAUTION VERRE 6CM',\n 38685: 'CHAMPIGNONS DE PARIS AU PERSIL 500G',\n 18889: 'CHIPS LEGUMES 100G',\n 49727: 'CHIPS LEGUMES 100G',\n 18546: 'CHICONS CONFITS CHATAIGNES/OIGNONS',\n 38487: 'COCKTAIL \"ONZE 8 STUKS\" (ST)',\n 19417: 'COCKTAIL PERSONNALISE',\n 18749: 'CHIPS DE LEGUMES',\n 18962: 'CHOCOLAT FTK',\n 20022: 'COFFRET LIBANAIS',\n 19748: 'COFFRET MADISON',\n 19792: 'CHOUCROUTE ET PUREE',\n 18299: 'CHOUCROUTE LEGUMES',\n 18170: 'CHOUCROUTE GARNIE (AP)',\n 17962: 'CHICON GRATIN',\n 18169: 'CHOUCROUTE GARNIE (KG)',\n 18298: 'CHOUCROUTE LEGUMES',\n 18019: 'CHOU FLEUR ET PDT EPICE',\n 18295: 'CIVET BICHE CHAMP BOIS (AP)',\n 18293: 'CIVET MARCASSIN POIVRE VERT (KG)',\n 49977: 'CIVET MARCASSIN POIVRE VERT (KG)',\n 19803: 'COCA LIGHT VERRE 20CL',\n 18397: 'COCHON LAIT CRU',\n 18396: 'COCHON LAIT DESOSSE CRU',\n 18341: 'COCHON LAIT GIGUE CUIT (KG)',\n 18229: 'COCHON LAIT GIGUE DESOSSEE CARAMEL ORANGE',\n 19305: 'LINGUINI ECREVISSES',\n 19745: 'COFFRET DEJEUNER CHEZ TIFFANY',\n 19744: 'COFFRET DEJEUNER SUR L HERBE',\n 19746: 'COFFRET FITNESS WELLNESS',\n 18297: 'CHOUCROUTE LEGUMES',\n 19919: 'LOCATION SHAFFING DISH (GASTRO - COUVERT - GEL INCLUS)',\n 19603: 'CHUTNEY POTIRON',\n 18292: 'CIVET MARCASSIN POIVRE VERT (KG)',\n 19853: 'COMP.POMMES AIRELLES CRUMBLE',\n 18890: 'COFFRET GOURMAND ',\n 38876: 'COMPOTE FRAISE RHUBARBE',\n 18459: 'COLIN EPICE',\n 18677: 'COMTE MONTAG.',\n 19875: 'CONFITURES FTK',\n 18308: 'COQ AU VIN : FILET',\n 51512: 'COQ AU VIN : FILET',\n 51513: 'COQ AU VIN : FILET',\n 51514: 'COQ AU VIN : FILET',\n 18309: 'COQ VIN FILET',\n 18310: 'COQ VIN FILET',\n 19246: 'COURGETTE + RATATOUILLE + SEM',\n 49784: 'COURGETTE + RATATOUILLE + SEM',\n 19352: 'COQUELET FFY',\n 38897: 'COMPOTE POMMES FRAMBOISE',\n 51505: 'COUSCOUS POULET',\n 51506: 'COUSCOUS POULET',\n 18972: 'COOKIES CHOCOLAT BLANC CAJOU 4PCS',\n 19152: 'COQUELET CAJUN SLOW COOKING',\n 20024: 'COQUELET CUIT PIRI PIRI',\n 19383: 'COQ AU VIN POMME AIRELLE PURE\\x90E CE\\x90LERI',\n 19186: 'COQUELET DESSOSSE CRU',\n 20180: 'COQUELET ESTRAGON 2PCS',\n 49887: 'COQUELET ESTRAGON 2PCS',\n 19137: 'COQ VIN CUISSE',\n 18286: 'COQ VIN CUISSE',\n 18287: 'COQ VIN CUISSE',\n 19245: 'COULIS TOMATES',\n 18537: 'COUSCOUS LEGUMES (AP)',\n 18538: 'COUSCOUS LEGUMES (AP)',\n 18281: 'COUSCOUS POULET (AP)',\n 18279: 'COUSCOUS POULET (AP)',\n 18924: 'COUSSIN RESTAURANT',\n 18868: 'COUTEAU DE TABLE',\n 18908: 'COUV PLATEAU JETABLE TRANSP SOLIA 40X40CM 25PCS',\n 19969: 'CROQUETTE CREVETTE 1PCE',\n 38930: 'CROQUETTE CREVETTE 1PCE ',\n 18751: 'CUBERDONS (KILO)',\n 19334: 'CUISSE DESOSSEE FFY',\n 49817: 'CUISSE DESOSSEE FFY',\n 49729: 'BOITE 4PCS CUPCAKES',\n 19671: 'BOITE 4PCS CUPCAKES',\n 18866: 'CUILLERE DE TABLE',\n 18327: 'CUISSE CRUE LAQUE',\n 18312: 'CUISSE CRUE MARINADE JAUNE',\n 18307: 'CUISSE CRUE PIRIPIRI',\n 18759: 'CUISSE DE POULET SLOW COOKED',\n 18771: 'CUISSE DE POULET TANDOORI (KG)',\n 54358: 'CREME PAVLOVA',\n 52290: 'CREME PAVLOVA',\n 52291: 'CREME PAVLOVA',\n 18705: 'CREME PAVLOVA',\n 18285: 'COQ AU VIN : CUISSE',\n 51516: 'COQ AU VIN : CUISSE',\n 51517: 'COQ AU VIN : CUISSE',\n 51515: 'COQ AU VIN : CUISSE',\n 17960: 'CUISSE CANARD CONFIT',\n 18604: 'COMPOTE DE POMMES / FRAMBOISE',\n 18772: 'CUISSE DE POULET TANDOORI (S/V)',\n 20377: 'CUILLIERE 10CM METALISEE ALU MOZAIK',\n 18768: 'CUISSE POULET AU CITRON',\n 18411: 'COTE AGNEAU AU ROMARIN',\n 55578: 'COTE AGNEAU AU ROMARIN',\n 55579: 'COTE AGNEAU AU ROMARIN',\n 19153: 'COQUELET DESSOSSE CUIT',\n 18714: 'CUISSE POULET DESOSSEE AUX HERBES',\n 18715: 'CUISSE POULET DESOSSEE AUX HERBES',\n 20468: 'CUPCAKE A LA PIECE',\n 49944: 'SACHET DE CUBERDON',\n 19814: 'SACHET DE CUBERDON',\n 18534: 'CURRY LEGUMES',\n 18264: 'CURRY POULET CARDAMOME',\n 18536: 'CURRY LEGUMES',\n 18265: 'CURRY POULET CARDAMOME',\n 18263: 'CURRY POULET CARDAMOME',\n 18256: 'CURRY ROUGE POULET',\n 18258: 'CURRY ROUGE POULET',\n 18255: 'CURRY ROUGE POULET',\n 49793: 'CURRY ROUGE POULET',\n 19328: 'CURRY ROUGE + RIS. CITRON',\n 49818: 'CURRY ROUGE + RIS. CITRON',\n 18261: 'CURRY VERT POULET',\n 49872: 'CURRY VERT POULET',\n 18259: 'CURRY VERT POULET',\n 18262: 'CURRY VERT POULET',\n 20217: 'DEMI SANDWICH CESAR',\n 20212: 'DEMI SANDWICH CHEVRE PESTO',\n 20215: 'DEMI SANDWICH CREVETTE',\n 20218: 'DEMI SANDWICH PARISIEN',\n 20211: 'DEMI SANDWICH PARME',\n 18795: 'CREME DE MARRON ',\n 51569: 'MELANGE CREVETTE GRISE MAYONNAISE',\n 18381: 'MELANGE CREVETTE GRISE MAYONNAISE',\n 51570: 'MELANGE CREVETTE GRISE MAYONNAISE',\n 19666: 'DESSERT 2.1',\n 19663: 'DESSERT DU JOUR 3.5',\n 19355: 'DINDE FILET FFY',\n 49815: 'DINDE FILET FFY',\n 18787: 'DINDE TOMATE MASCARPONE',\n 18910: 'ETIQUETTE BALANCE FTK ROULEAU',\n 18911: 'ETIQUETTE BLANCHE ARGENT 65X75MM FTK ROULEAU',\n 19974: 'DIP LEG CRUDITES PT',\n 20214: 'DEMI SANDWICH SAUMON',\n 18338: 'DES DE PDT OIGNONS',\n 20249: 'DESSERT EN VERRE (HORS CAUTION)',\n 20250: 'DESSERT INDIVIDUEL',\n 20220: 'DIM SUM SELECTION PORC',\n 19150: 'DINDE AIGUILLETTE CUITE + SAUCE',\n 18770: 'DINDE ESCALOPE AU CITRON S/V',\n 19664: 'DESSERT DU JOUR ',\n 20097: 'DESSERT PAQUES SP  BP',\n 20548: 'Discount',\n 18250: 'DINDE ESCALOPE PANEE SAUCE + COULIS',\n 19183: 'DINDE FARCI SCARLET OHARA CRU',\n 19181: 'DINDE FARCI TRUFFE CRU',\n 19184: 'DINDE FERME CRU',\n 18393: 'DINDE ROTI',\n 18186: 'DINDE ROTI CUIT',\n 18306: 'CUISSE CANARD THYM/ LENTILLES',\n 55730: 'CUISSE CANARD THYM/ LENTILLES',\n 55729: 'CUISSE CANARD THYM/ LENTILLES',\n 18243: 'DINDE ROTI FARCI ROQ.TOM. SECH.',\n 20099: 'EMBALLAGE VERRINE',\n 18531: 'DUXELLE LEGUMES',\n 18533: 'DUXELLE LEGUMES',\n 18532: 'DUXELLE LEGUMES',\n 18794: 'ECLAT DE MARRON',\n 18356: 'DINDE AIGUILLETTE FARCIE CUIT',\n 18249: 'DINDE ESCALOPE PANEE SAUCE + COULIS',\n 49870: 'DINDE ESCALOPE PANEE SAUCE + COULIS',\n 18761: 'EPINARDS A LA CREME',\n 49877: 'EPINARDS A LA CREME',\n 20207: 'ESCARGOT A L AIL',\n 18929: 'ETUI POUR BAGUETTES SUSHI FTK',\n 20179: 'EXPRESSO GOURMAND',\n 19134: 'FAISAN CUIT + SAUCE (4PERS)',\n 20245: 'FAMILY FIT 66 EURO',\n 19377: 'FAMILY FIT 40 EURO',\n 18937: 'FLYER PLAISIR DE RECEVOIR',\n 18940: 'FLYER PROGRAMME FIT FOR YOU AUTOMNE',\n 51478: 'FILET DE POULET SLOW COOKED',\n 18335: 'FILET DE POULET SLOW COOKED',\n 51479: 'FILET DE POULET SLOW COOKED',\n 19609: 'FOIE GRAS OIE CRU',\n 18300: 'FILET PINTADEAU SLOW COOKED',\n 18527: 'FENOUIL ASPERGES PIGNONS',\n 18340: 'FENOUIL BRAISE',\n 18529: 'FENOUIL CELERI ET PDT',\n 18530: 'FENOUIL CELERI ET PDT',\n 19494: 'FEUIL. FROM. CHEV. POMME/ FIGUE',\n 18938: 'FLYER EXPLICATION FIT FOR YOU',\n 19739: 'FINANCIER NATURE',\n 18239: 'FILET BOEUF IRLANDAIS 3 POIVRES',\n 18235: 'FILET DE DINDE ORLOFF',\n 18234: 'FILET DE DINDE ORLOFF',\n 18233: 'FILET DE DINDE ORLOFF',\n 18336: 'FILET DE POULET SLOW COOKING',\n 19811: 'FEU DE BENGALE 1 PCE',\n 19135: 'DEMI FAISAN',\n 18641: 'FILET DE DINDE \"SLOW COOKED\"',\n 19741: 'FLAN CARAMEL',\n 19597: 'FLAN SPECULOOS',\n 19699: 'FLAN VANILLE FRUITS',\n 19883: 'FLEUR 5 EUROS',\n 19882: 'FLEUR 6 EUROS',\n 20390: 'FLUTE DE RAISIN',\n 18843: 'FLYER MENU FETE',\n 18246: 'DINDE FILET CUIT FARCI',\n 19176: 'FAON MEDAILLON CRU',\n 19448: 'FORFAIT SOFT 3H',\n 19350: 'GCDL FFY',\n 49801: 'GCDL FFY',\n 19463: 'FORFAIT VIN MAISON 2 H',\n 19740: 'FORFAIT PAIN BEURRE',\n 20376: 'FOURCHETTE 10CM  METALISEE ALU MOZAIK',\n 38853: 'GASPACHO 1/2L',\n 18523: 'FOND ARTICHAUT FARCI LEG VERTS',\n 19449: 'FORFAIT BOISSONS 2H CAVA',\n 20025: 'FORFAIT VIN MAISON 3H',\n 19450: 'FORFAIT BOISSONS 2H CHAMPAGNE',\n 19446: 'FORFAIT BOISSONS 3H CAVA',\n 19447: 'FORFAIT BOISSONS 3H CHAMPAGNE',\n 20021: 'FORMULE APERITIVE',\n 18524: 'FIGUES MIEL AIRELLES',\n 19881: 'FLEUR 7 EUROS',\n 20378: 'FOURCHETTE  19CM METALISEE 500PCS ALU MOZAIK',\n 18867: 'FOURCHETTE DE TABLE',\n 19617: 'FROMAGE BLANC OIGNONS',\n 19788: 'FROMAGE BLANC MANGUE ET GRANOLA',\n 19816: 'FROMAGE BLANC ORANGES SANGUINES',\n 19790: 'FROMAGE BLANC RHUBARBE/FRAISE',\n 18675: 'FROMAGE HOLLANDE JEUNE',\n 18674: 'FROMAGE HOLLANDE VIEUX',\n 19767: 'FROYO GRAND',\n 19765: 'FROYO MOYEN',\n 19764: 'FROYO PETIT',\n 19812: 'FRUITS MELANGES YAOURT',\n 18741: 'FRUITS SECS MIXTES',\n 19495: 'FEUILLETE AU FROMAGE DE CHEVRE',\n 19880: 'FLEUR 15 EUROS',\n 19178: 'FAON FILET CRU',\n 49953: 'GELEE SAUTERNES 80G',\n 19612: 'GELEE SAUTERNES 80G',\n 19247: '2 GAMBAS GRILLEES (2 pc)',\n 19209: 'FOND GIBIER 100G',\n 19611: 'GELEE VARIABLE',\n 18331: 'GIGOT AGNEAU NATURE CUIT',\n 18876: 'GRAINS DE CAFE PETIT POT',\n 19847: 'FROMAGE BLANC COMPOTE',\n 19451: 'FORFAIT SOFT ',\n 51127: 'FORFAIT SOFT ',\n 51126: 'FORFAIT SOFT ',\n 51125: 'FORFAIT SOFT ',\n 17959: 'HACHIS PARMENTIER',\n 49822: 'HACHIS PARMENTIER',\n 20236: 'HOMARD CHAUD + ACC',\n 19119: 'ICE PACK',\n 19860: 'ILE FLOTTANTE',\n 19791: 'GRUAU D AVOINE',\n 19980: 'GUACAMOLE 200G',\n 18600: 'GRATIN DAUPHINOIS (VRAC)',\n 18726: 'HOUMOUS',\n 19251: 'HOMARD LEG. SAUCE/BEURRE',\n 18727: 'HOUMOUS',\n 18765: 'HARICOTS VERTS AUX ECHALOTES',\n 20238: 'HEURE SUPPLEMENTAIRE SUPPORT (HORS FORFAIT)',\n 19254: 'DEMI-HOMARD \"BELLEVUE\"',\n 38683: 'HARICOTS OIGNONS ET MUSCADE (KG)',\n 20208: 'IMPRESSION CARTE COMPTOIR 2 FACES',\n 20046: 'JARDINIER PT (MOZZARELLA)',\n 19618: 'ROULEAU DE FOIE GRAS AUX FRUITS DE SAISON',\n 18673: 'GRUYERE/EMMENTAL',\n 18669: 'FOIE GRAS OIE CRU',\n 19468: 'KIMONO: 8 SUSHIS NIGIRI MAKI',\n 19981: 'KTIPITI 200G',\n 19467: 'KYOTO: 16 SASHIMIS',\n 20209: 'IMPRESSION CARTE COMPTOIR',\n 20037: 'LAST MINUTE GR FAIM',\n 20038: 'LAST MINUTE PT FAIM',\n 20027: 'JARDINIER MOUS (MOZZA) 2PC',\n 18634: 'LASAGNE EPINARD (KG)',\n 18617: 'LASAGNE CHAMPIGNON (VRAC)',\n 18693: \"JAMBON A L'OS FALORNI\",\n 18692: 'JAMBON CRU FALORNI',\n 18836: \"GRAISSE D'OIE\",\n 18689: 'JAMBON PARME',\n 19759: 'JUS FRAIS FRAISE FRAMBOISE',\n 19756: 'JUS FRAIS KIWI POIRE',\n 19755: 'JUS FRAIS ORANGE MANGUE',\n 18227: 'KEFTA + SAUCE',\n 18226: 'KEFTA + SAUCE',\n 20232: 'KIT BONBON 4 BOUTEILLES',\n 19955: 'KIT MINI THAI + SAUCE',\n 19751: 'KIWI MANGUE',\n 18725: 'LABNEH THYM',\n 18834: 'LAPIN CHOCOLAT GRAND',\n 18276: 'LAPIN CUISSE MOUTARDE CHAMP.',\n 18633: 'LASAGNE AUX ÉPINARDS ',\n 50587: 'LASAGNE AUX ÉPINARDS ',\n 50586: 'LASAGNE AUX ÉPINARDS ',\n 18275: 'LAPIN CUISSE MOUTARDE CHAMP.',\n 18388: 'LAPIN FOIE CRU',\n 18632: 'LASAGNE BOLOGNAISE (KG)',\n 49789: 'LASAGNE BOLOGNAISE (KG)',\n 18630: 'LASAGNE BOLOGNAISE (KG)',\n 18620: 'LASAGNE VEGET',\n 18467: 'LEGUMES',\n 18470: 'LEGUMES',\n 18515: 'LEGUMES AU WOK (KG)',\n 18621: 'LASAGNE VEGET ',\n 18690: \"JAMBON A L'OS\",\n 19136: 'LINGUINI SAUMON ET EPINARD',\n 18278: 'LINGUINI SAUMON ET EPINARD',\n 18222: 'LEMONGRASS STICK',\n 49848: 'LEMONGRASS STICK',\n 19129: 'LEMONGRASS STICK (BTE)',\n 51466: 'CHICON CHAMPIGNON',\n 51465: 'CHICON CHAMPIGNON',\n 18483: 'CHICON CHAMPIGNON',\n 18241: 'LAPIN FILET CUIT',\n 18763: 'LEGUMES DE SAISON A LA MAROCAINE',\n 18485: 'LEGUMES CHICON CHAMPIGNONS',\n 18484: 'LEGUMES CHICON CHAMPIGNONS',\n 18699: 'LINGUINI AUX CHAMPIGNONS DES BOIS',\n 19309: 'LINGUINI PESTO CHAMPIGNONS',\n 18479: 'LEGUMES BATONNETS',\n 18478: 'LEGUMES BATONNETS',\n 18493: 'LEGUMES OUBLIES',\n 18494: 'LEGUMES OUBLIES',\n 18266: 'CUISSE DE LAPIN PRUNEAU ET AIRELLE',\n 18613: 'LINGUINI PESTO CHAMPIGNONS',\n 18622: 'LINGUINI ROQ TOMATE SECH',\n 19310: 'LINGUINI ROQ TOMATE SECH',\n 18623: 'LINGUINI ROQ TOMATE SECH',\n 19306: 'LINGUINI SCAMPIS (PCE)',\n 19908: 'MACARONS',\n 18029: 'MACCH.AUB. COURG. TOMAT. SECH.',\n 18027: 'MACCH.AUB. COURG. TOMAT. SECH.',\n 18028: 'MACCH.AUB. COURG. TOMAT. SECH.',\n 18030: 'MACCH.AUB. COURG. TOMAT. SECH.',\n 17987: 'MARINADE PIRIPIRI',\n 18844: 'MATERIEL DIVERS',\n 51462: 'LEGUMES OUBLIES',\n 51464: 'LEGUMES OUBLIES',\n 51463: 'LEGUMES OUBLIES',\n 18492: 'LEGUMES OUBLIES',\n 51476: 'KEFTA + SAUCE',\n 18225: 'KEFTA + SAUCE',\n 51477: 'KEFTA + SAUCE',\n 20233: 'MATERIEL FETE',\n 19440: 'MENU CHAUD JINGLE BELLS',\n 20226: 'MENU POISSON SAINT VALENTIN 2014 HORS CAUTION DE 2 EURO',\n 20225: 'MENU VIANDE SAINT VALENTIN 2014 HORS CAUTION DE 4 EURO',\n 20197: 'MERVEILLEUX ANANAS 140G',\n 49756: 'MERVEILLEUX ANANAS 140G',\n 18841: 'MAISON SPECULOOS',\n 18799: 'MARINADE ROUGE (KG)',\n 20052: 'MARIN PT (CREV. GRISES)',\n 19878: 'LIVRE CUISINE GIBIER FR/NL',\n 18455: 'LOTTE FILET (KG)',\n 38875: 'MERVEILLEUX CHOCOLAT 140G (PCE)',\n 18800: 'MARINADE JAUNE (KG)',\n 19255: 'MELANGE LEGUMES CRUS',\n 18816: 'MELANGE OIGNON + MUSCADE',\n 18815: 'MELANGE OIGNON + PAPRIKA',\n 19363: 'MENU DE PRINTEMPS 31.03 EUR',\n 19362: 'MENU DE PRINTEMPS 36.26 EUR',\n 18963: 'MINI BOL LSA',\n 20063: 'BROCHETTE MINI',\n 19345: 'MOUSSAKA FFY',\n 49816: 'MOUSSAKA FFY',\n 19735: 'MINI ECLAIR',\n 19815: 'MINI SHORT CAKES',\n 20028: 'MOELLEUX MOUS (BRIE) 2PC',\n 20048: 'MOELLEUX PT (BRIE)',\n 18902: 'MILIEU DE TABLE TABLE EVENT',\n 36505: 'MONT BLANC 2PERS',\n 19313: 'MOUSSAKA',\n 18625: 'MOUSSAKA',\n 51395: 'MOUSSAKA',\n 51396: 'MOUSSAKA',\n 18626: 'MOUSSAKA',\n 19452: 'MISE EN PLACE/SUPPORT FORFAIT',\n 51137: 'MISE EN PLACE/SUPPORT FORFAIT',\n 51136: 'MISE EN PLACE/SUPPORT FORFAIT',\n 51135: 'MISE EN PLACE/SUPPORT FORFAIT',\n 51139: 'MISE EN PLACE/SUPPORT FORFAIT',\n 51138: 'MISE EN PLACE/SUPPORT FORFAIT',\n 51140: 'MISE EN PLACE/SUPPORT FORFAIT',\n 20070: 'BROCHETTE MINI APERO 12PCS',\n 18672: 'MOZARELLA GALBAN',\n 18949: 'MUG FTK',\n 18822: 'MUNSTER',\n 18881: 'PANIER INOX (PCE)',\n 18703: 'MOUSSE CHOCOLAT',\n 19662: 'MAATJES GARNIS',\n 20064: 'BROCHETTE MINI SCAMPI ASPERGE',\n 18502: 'NASI GORENG VEGETARIEN',\n 18501: 'NASI GORENG VEGETARIEN',\n 18500: 'NASI GORENG VEGETARIEN (KG)',\n 20066: \"MINI BROCHETTE SCAMPI'S GEKRUID\",\n 19454: 'LIVRAISON PERIPHERIE BXL',\n 17957: 'RADIATORI / JAMBON / FROMAGE',\n 52454: 'RADIATORI / JAMBON / FROMAGE',\n 52086: 'RADIATORI / JAMBON / FROMAGE',\n 52087: 'RADIATORI / JAMBON / FROMAGE',\n 18451: 'MI CRU MI CUIT SAUMON + ACC',\n 20065: 'BROCHETTE MINI SCAMPIS EPICES',\n 18733: 'MINI BOULETTES THAI CURRY CORIANDRE',\n 19770: 'MOUSSE CHOCOLAT',\n 20069: 'MINI BOULETTES KEFTA (BTE)',\n 20026: 'PARME MOUS 2PC',\n 18326: 'MINI SAUCISSES POULET CUIT',\n 20067: 'MINI BOULETTES THAI APERO',\n 19140: 'MINI GAUFRES 6PCS',\n 18831: 'MINI LAPIN CHOCOLAT',\n 20115: 'MINI SANDWICHES JAMBON PARME/PARMESAN',\n 20113: 'MINI SANDWICHES SAUMON FUME',\n 19808: 'MOELLEUX CHOCOLAT',\n 18874: 'MOULIN A POIVRE 27CM',\n 18873: 'MOULIN NOIX DE MUSCADE',\n 20199: 'MERVEILLEUX MANGUE ET CITRON 112G (PCE)',\n 19769: 'MOUSSE CHOCOLAT 85G',\n 18008: 'MOUSSE DE CHEVRE',\n 18661: 'MOUSSE JAMBON CIBOULETTE',\n 20178: 'MOZZARELLA DI BUFFALA SUR PLATEAU',\n 18480: 'NASI GORENG SCAMPI (KG)',\n 18920: \"NOTE D'ENVOI SIMPLE 2000PCS\",\n 18832: 'OEUFS CHOCOLAT 250G',\n 19604: 'OIGNONS CONF NATURE',\n 37835: 'CHAPELURE DORE ANCO ',\n 18211: 'NAVARIN AGNEAU (AP)',\n 18210: 'NAVARIN AGNEAU (AP)',\n 49873: 'NAVARIN AGNEAU (AP)',\n 18212: 'NAVARIN AGNEAU (S/V)',\n 18719: 'NOUILLES CHINOISES NATURES',\n 18596: 'NOUILLES SAUTEES LEGUME CROQUANT',\n 18614: 'NOUILLES SAUTEES LEGUME NOIX CAJOU (KG)',\n 18833: 'NOUTA MOUTON CHOCOLAT GRAND',\n 19162: 'OISEAU SANS TETE CUIT',\n 18753: 'OLIVES NOIRES (1KG)',\n 20098: 'ORANGE EN GELEE ET ANIS',\n 18660: 'PATE GIBIER TRANCHE',\n 18208: 'OSSO BUCO CLASSICO',\n 49742: 'NEW YORK CHEESE LIGHT 145G',\n 19851: 'NEW YORK CHEESE LIGHT 145G',\n 49825: 'PAIN FITNESS 1/2',\n 35038: 'PAIN FITNESS 1/2',\n 20059: 'PAIN POTIRON',\n 18204: 'PAIN VIANDE CUMIN',\n 18201: 'PAIN VIANDE VOLAILLE',\n 20112: 'PANIER CRUDITES + DIPS',\n 18203: 'PAIN VIANDE CUMIN (KG)',\n 18853: 'PAIN EPICE ETOILE',\n 20395: 'PAIN NOTEN RAISIN 400G',\n 20243: 'PAIN RAISIN (PCE)',\n 49885: 'PAIN RAISIN (PCE)',\n 20242: 'PAIN TOURNESOL (PCE)',\n 49886: 'PAIN TOURNESOL (PCE)',\n 18202: 'PAIN VIANDE VOLAILLE (KG)',\n 36502: 'PAVLOVA FRUITS ROUGES 2 PERS',\n 19665: 'PANNA COTTA VEGAN CARAMEL',\n 19762: 'PANNA COTTA VEGAN COMPOTE',\n 19859: 'PANNA COTTA FRUITS ROUGES (200G)',\n 49715: 'PANNA COTTA FRUITS ROUGES (200G)',\n 20050: 'PARISIEN PT (JAMBON/FROM)',\n 20029: 'PARISIEN MOUS (JAMB/FROMAGE) 2PC',\n 20044: 'PARME PT',\n 19672: 'PASTRAMI + GARNITURE',\n 18882: 'PANIER OSIER MEDIUM 40CM',\n 19799: 'PANNA COTTA FRUITS HIVER (200G)',\n 19800: 'PANNA COTTA MANGUE (200G)',\n 20412: 'PAPIER BLEU ROULEAU D132',\n 18957: 'PAPIER EMBALLAGE FTK GRAND 46 X 64CM 15KG',\n 18687: 'PASTRAMI BOEUF CUIT FUME',\n 19599: 'PATE GIBIER TRANCHE',\n 18274: 'PATE DE VOLAILLE MAISON',\n 49924: 'WASABI PEAS 90G',\n 20283: 'WASABI PEAS 90G',\n 18487: 'PDT ROTIES',\n 18486: 'PDT ROTIES',\n 18488: 'PDT ROTIES',\n 19026: 'PESTO ROUGE MAISON',\n 17995: 'PILON CRU LAQUE',\n 17979: 'PILON CRU MARINADE JAUNE',\n 18696: 'PILON CRU PIRIPIRI',\n 19167: 'PINTADEAU FARCI + SAUCE',\n 18476: 'PETITS POIS OIGNONS',\n 18477: 'PETITS POIS OIGNONS',\n 19958: 'PINTADEAU FARCIE + SAUCE 4PP',\n 38567: 'VELOUTE DE CHOU-FLEUR DU BARRY (1L)',\n 18880: 'PLANCHE A DECOUPER PLASTIQUE',\n 19365: 'PLAT PREPARE',\n 20549: 'PLATEAU SANDWICH BETV',\n 38565: 'POTAGE CERFEUIL 1L',\n 19552: 'POTAGE AUX BROCOLIS / THYM (1/2L)',\n 19538: 'VELOUTE DE CELERI RAVE (1/2L)',\n 20284: 'POPCAKE SACHET 2PCS',\n 49770: 'POPCAKE SACHET 2PCS',\n 19512: 'POTAGE CAROTTE ET POTIRON 1/2L',\n 18511: 'POMMES AIRELLES',\n 20185: 'PLATS CHAUDS B2B',\n 20247: 'PLATS FIT SODEXO',\n 18325: 'PINTADEAU CUISSE',\n 20496: 'POCHES A DOUILLE JETABLE 100PCS',\n 18510: 'POMMES AIRELLES',\n 19539: 'VELOUTE DE CELERI RAVE (1L)',\n 18796: 'POMMES ET COMPOTE DE FRUITS (VRAC)',\n 18798: 'POMME SOUS VIDE VRAC (KG)',\n 38561: 'POTAGE CAROTTE ET POTIRON 1L',\n 19534: 'POTAGE CERFEUIL 1/2L',\n 19526: 'POTAGE AUX POIREAUX / COURGETTES (1/2L)',\n 19147: 'BROCHETTE POISSON EPICEE 200G',\n 38564: 'POTAGE AUX POIREAUX / COURGETTES (1L)',\n 19317: 'PLAT DU JOUR TGTG + DESSERT',\n 19262: 'POMMES AIRELLES',\n 38563: 'POTAGE POIREAU 1L',\n 19518: 'POTAGE POIREAU 1/2L',\n 19572: 'POTAGE DUBARRY PERSIL PLAT 1/2L',\n 19571: 'POTAGE DUBARRY PERSIL PLAT 1L',\n 19168: 'PERDREAU CRU',\n 18382: 'PINTADEAU TRUFFE CRU',\n 19320: 'PLAT DU JOUR 12.90',\n 49840: 'PLAT DU JOUR 12.90',\n 19323: 'PLAT DU JOUR 15,90',\n 20223: 'FILET DE CABILLAUD SAUCE MOUSSELINE AUX CREVETTES GRISES, POMME DE TERRE AU GROS SEL ET ASPERGES VERTES',\n 19520: 'POTAGE SALSIFIS 1/2L',\n 19580: 'POTAGE THAI POULET 1/2L',\n 38577: 'POTAGE CRESSON 1L',\n 19514: 'POTAGE CRESSON 1/2L',\n 19521: 'POTAGE SALSIFIS 1L',\n 19529: 'POTAGE COURGETTE MENTHE 1/2L',\n 38579: 'VELOUTE DE POTIRON 1L',\n 19522: 'POTAGE LENTILLE 1/2L',\n 19528: 'POTAGE COURGETTE MENTHE 1L',\n 19590: 'POTAGE THAI CITRONELLE 1L',\n 18773: 'POULET DE FERME PIRI PIRI',\n 19591: 'POTAGE TOMATE (1/2L)',\n 19516: 'POTAGE VICHYSSOISE 1/2L',\n 19592: 'POTAGE TOMATE (1L)',\n 49954: 'POTAGE TOMATE (1L)',\n 19517: 'POTAGE VICHYSSOISE 1L',\n 18311: 'POULARDE BLANC CUIT + SAUCE',\n 18268: 'POUL.CUISSE TAND.+YAOURT MENT.',\n 18269: 'POUL.CUISSE TAND.+YAOURT MENT.',\n 18267: 'POUL.CUISSE TAND.+YAOURT MENT.',\n 18322: 'POULET BUTTERFLY SLOW COOKING',\n 19298: 'POULET CARDA. NOIX CAJOU RIZ',\n 18330: 'POULET CRU LAQUE',\n 18329: 'POULET CRU MARINADE JAUNE',\n 18328: 'POULET CRU PIRIPIRI',\n 18272: 'POULET CUISSE CAJUN',\n 18271: 'POULET CUISSE CAJUN',\n 17967: 'POULET CUISSE DESSOSEE VINDALOO',\n 49705: 'PUREE NATURE 400G',\n 19281: 'PUREE NATURE 400G',\n 18190: 'POULET FERME ROMARIN FOUR',\n 19303: 'POULET COMPOTE PUREE ',\n 19120: 'POULET FILET CUIT FUME',\n 18368: 'POULET CUISSE CRU',\n 51444: 'POULET CUISSE CAJUN',\n 18270: 'POULET CUISSE CAJUN',\n 51446: 'POULET CUISSE CAJUN',\n 51445: 'POULET CUISSE CAJUN',\n 49920: 'PUREE NATURE',\n 55797: 'PUREE NATURE',\n 18591: 'PUREE NATURE',\n 55798: 'PUREE NATURE',\n 18253: 'POULET LAIT COCO',\n 18252: 'POULET LAIT COCO',\n 18254: 'POULET LAIT COCO',\n 18361: 'POULET PILON CAJUN CRU',\n 18145: 'POULET PILON CAJUN CUIT',\n 18363: 'POULET PILON CRU',\n 18196: 'POULET PILON MARINADE JAUNE',\n 18197: 'POULET PILON MARINADE JAUNE',\n 19293: 'POULET TIKKA RATATOUILLE RIZ',\n 18192: 'POULET YAOURT CARDAMOME',\n 18193: 'POULET YAOURT CARDAMOME',\n 18194: 'POULET YAOURT CARDAMOME',\n 18364: 'POULET HACHE CRU',\n 18362: 'POULET PILON CRU',\n 18360: 'POULET PILON CAJUN CRU',\n 55567: 'POULET FILET KATSU',\n 18357: 'POULET FILET KATSU',\n 55568: 'POULET FILET KATSU',\n 18313: 'POULET CAJUN CRU',\n 18251: 'POULET CUIT + SAUCE',\n 18195: 'POULET PILONS CUITS',\n 18514: 'PRUNES POIRES POCHEES (AP)',\n 18513: 'PRUNES POIRES POCHEES (AP)',\n 19279: 'PUREE LAIT DE COCO CORIANDRE (400G)',\n 18589: 'PUREE LAIT DE COCO CORIANDRE (KG)',\n 19283: 'PUREE POIREAUX 400G',\n 49763: 'QUICKLUNCHL SPAGHETTI BOLOGNAISE 410g',\n 19308: 'QUICKLUNCHL SPAGHETTI BOLOGNAISE 410g',\n 18352: \"RACK D'AGNEAU / MOUTARDE / HERBES VERTES\",\n 51442: \"RACK D'AGNEAU / MOUTARDE / HERBES VERTES\",\n 51443: \"RACK D'AGNEAU / MOUTARDE / HERBES VERTES\",\n 38486: 'RAUWKOST SCHOTEL (GF) (V) (1PERS.)',\n 19476: 'QUICHE SAUMON BROCOLI CIB (8PERS.)',\n 19297: 'QL CHICKEN FINGER COURGETTE RIZ CITRON',\n 19296: 'QL POULET CURRY ROUGE RIZ CITRON 450G',\n 19304: 'QL PUREE VOV CAROTTES',\n 19752: 'QL VEGETARIEN 400G',\n 19593: 'QUEUES HOMARD DECORT. ROQ. VIN.',\n 19286: 'PUREE TRUFFEE 400G',\n 19483: 'QUICHE CHEVRE COURGETTES (8PERS)',\n 19683: 'QUICHE MOZZA TOMATES (8PERS)',\n 38743: 'PUREE POIREAUX (KG)',\n 19489: 'QUICHE POIREAU JAMBON (8PERS)',\n 19492: 'QUICHE VEGET (8PERS)',\n 38744: 'RATATOUILLE LEGUMES (KG)',\n 18056: 'QUINOA BLE ORGE BOULG.TAB.',\n 18057: 'QUINOA BLE ORGE BOULG.TAB.',\n 18054: 'QUINOA BLE ORGE BOULG.TAB.',\n 18353: 'RACK AGNEAU AUX HERBES CUIT (S/V)',\n 20361: 'RAVIER ALU RECT. + REBORD 850 CC',\n 18582: 'RIZ JAUNE PILAV',\n 18351: 'RIS DE VEAU / CHAMPIGNONS DES BOIS / SAUCE',\n 18188: 'ROAST BEEF',\n 18189: 'ROAST BEEF',\n 49725: 'RIZ BASMATI NATURE 400G',\n 19272: 'RIZ BASMATI NATURE 400G',\n 18584: 'RISOTTO AUX FEUILLES DE CITRONNIER',\n 19952: 'RAVIOLI PELURES TRUFFES (PERS)',\n 18723: 'RAVIOLI CHEVRE (AP)',\n 18168: 'RIS DE VEAU CUIT',\n 19275: 'RIZ CHAMPIGNON DES BOIS 400G',\n 18712: 'RAVIOLI CHAMPIGNONS BOIS',\n 18729: 'RAVIOLI RICOTTA (AP)',\n 18611: 'RAVIOLIS',\n 18610: 'RAVIOLIS',\n 19271: 'RIZ JAUNE PILAV',\n 19698: 'RIZ LAIT CARAMEL SALE',\n 18903: 'ROULEAU BANCONTACT',\n 18904: 'ROULEAU FEUILLE JAUNE CUISINE',\n 18905: 'ROULEAU THERMIQUE CAISSE',\n 18886: 'ROULEAU PRINTEMPS POULET/SAUCE',\n 18951: 'RUBAN AUTOCOLLANT GRIS FTK LARGE',\n 18925: 'SAC A BAC TRANSPARENT 1000PCS',\n 19945: 'SAC JUTE FTK GRAND',\n 19944: 'SAC JUTE FTK PETIT',\n 18447: 'ROUGET EPICE',\n 18408: 'RACK AGNEAU CRU',\n 18956: 'SAC POULET FTK 500PCS',\n 18966: 'SAC SHOPPER FTK PLASTIQUE 2000PCS',\n 18912: 'RUBAN TISSU GRIS CLAIR FIN ROULEAU',\n 19905: 'SACHET AMANDES CACAO 100G',\n 18931: 'RUBAN TISSU GRIS IMPRIME ROULEAU 50M',\n 19891: 'SACHET ANANAS CUBE 100G',\n 19907: 'SACHET ANANAS TRANCHE 100G',\n 19894: 'SACHET BANANE TRANCHE 100G',\n 19903: 'SACHET CRANBERRIES 100G',\n 18915: 'SACHET FLEUR GRAND 10PCS',\n 19902: 'SACHET FRAISES 100G',\n 19899: 'SACHET MELON TRANCHE 100G',\n 19892: 'SACHET MENDIANTS 100G',\n 19893: 'SACHET NOISETTE CHOCOLAT 100G',\n 19898: 'SACHET PAPAYE CUBE 100G',\n 19897: 'SACHET PAPAYE LAMELLE 100G',\n 19904: 'SACHET RAISINS CHOCOLAT 100G',\n 19895: 'SACHET RAISINS YOGHOURT 100G',\n 19060: 'SAL CAROTTE POULET FECULENT (GRANDE)',\n 19059: 'SAL CAROTTE POULET FECULENT (MOYENNE)',\n 19022: 'SAL CELERI POMMES ET HARENGS (MOYENNE)',\n 19357: 'SAUCISSE FFY',\n 49732: 'SAUCISSE FFY',\n 18780: 'SAL CEVICHE DE SAUMON (KG)',\n 18112: 'SAL CHICKEN FINGERS CURRY (KG)',\n 18108: 'SAL LIB. SCAMP. PIGNONS SUMAC (KG)',\n 19906: 'SACHET KIWI 100G',\n 19900: 'SACHET MELANGE NOIX 100G',\n 19087: 'SAL THAI SCAMPIS FECULENT (MOYENNE)',\n 18127: 'SAL CAROTTES ORANGE RAISINS (KG)',\n 19080: 'SAL CELERI POMMES VINAIGRETTE YAOURT (GRANDE)',\n 18097: 'SAL CELERI POMMES VINAIGRETTE YAOURT (KG)',\n 19079: 'SAL CELERI POMMES VINAIGRETTE YAOURT (MOYENNE)',\n 19078: 'SAL CELERI POMMES VINAIGRETTE YAOURT (PETITE)',\n 19064: 'SAL TOMATES (PETITE)',\n 19038: 'SALADE ALGUES WAKAME',\n 17997: 'SAL CELERI POMME ET HARENG',\n 19021: 'SAL CELERI POMME ET HARENG 180G',\n 17996: 'SALADE QUINOA BLANC NOIR / POIVRON / PERSIL',\n 19069: 'SALADE BETTERAVE ROUGE (MOYENNE)',\n 19068: 'SALADE BETTERAVE ROUGE (PETITE)',\n 19056: 'SALADE BOULGOUR QUINOA ET POIS CHICHES AU CITRON (GRANDE)',\n 18071: 'SALADE BOULGOUR QUINOA ET POIS CHICHES AU CITRON (KG)',\n 19055: 'SALADE BOULGOUR QUINOA ET POIS CHICHES AU CITRON (MOYENNE)',\n 19019: 'SALADE BOULGOUR QUINOA POIS CHICHES ET FRUITS SECS (MOYENNE)',\n 18115: 'SALADE BRESAOLA (KG)',\n 38995: 'SALADE BURRATA 400G',\n 19107: 'SALADE BUSABA (PETITE)',\n 19037: 'SALADE CALAMARS',\n 18074: 'SALADE CAROTTE POULET FECULENT (KG)',\n 18101: 'SALADE CAROTTES FECULENT (KG)',\n 19089: 'SALADE CAROTTES FECULENT (PETITE)',\n 19067: 'SALADE BETTERAVE ROUGE 400G',\n 19071: 'SALADE CREVETTES (MOYENNE)',\n 19114: 'SALADE BABY LEAF',\n 18084: 'SALADE ARTICHAUT',\n 19095: 'SALADE TIKKA VEGETARIENNE 180G',\n 18043: 'SALADE BOULGOUR ',\n 18076: 'SALADE TOMATE',\n 18783: 'SALADE COLESLAW POULET',\n 17999: 'SALADE BOULGOUR ET LENTILLE',\n 20535: 'SALADE DE FRUITS JETABLE',\n 18066: 'SALADE DIVERS (KG)',\n 18007: 'SALADE FECULENT',\n 19106: 'SALADE LEG GRILLES (PETITE)',\n 19050: 'SALADE LENTILLES VERTES (MOYENNE)',\n 18739: 'SALADE DE LEGUMES OUBLIES',\n 18010: 'SALADE DE MAGRET DE CANARD ',\n 18000: 'SALADE HARICOT VERT',\n 20224: 'SALADE CURRY CHOUX FLEUR (PETITE)',\n 18124: 'SALADE DE CHOUX (KG)',\n 19099: 'SALADE DE CHOUX (PETITE)',\n 49968: 'SALADE DE CHOUX (PETITE)',\n 19789: 'SALADE DE FRUITS BB',\n 18704: 'SALADE DE FRUITS BB',\n 20533: 'SALADE DE FRUIT (VERRE)',\n 18736: 'SALADE DE HARICOTS VERTS ET AUBERGINES G (KG)',\n 19030: 'SALADE DES POULET AU CITRON (GRANDE)',\n 19029: 'SALADE DES POULET AU CITRON (MOYENNE)',\n 18781: 'SALADE GUACAMOLE (KG)',\n 19118: 'SALADE HARENGS AU VINAIGRE (PETITE)',\n 19063: 'SALADE HARICOTS JAMBON PDT (GRANDE)',\n 18075: 'SALADE HARICOTS JAMBON PDT (KG)',\n 19062: 'SALADE HARICOTS JAMBON PDT (MOYENNE)',\n 18136: 'SALADE LEG GRILLES (KG)',\n 19092: 'SALADE LEG GRILLES MOZZA FECULENT (MOYENNE)',\n 18067: 'SALADE LEGUMES CROQUANTS (KG)',\n 18005: 'SALADE LEGUMES (KG)',\n 17998: 'SALADE LEGUMES OUBLIES ROTIS (KG)',\n 19031: 'SALADE MI CUIT SAUMON ET NOUILLE DE RIZ',\n 19033: 'SALADE MI CUIT SAUMON ET NOUILLE DE RIZ (GRANDE)',\n 19077: 'SALADE MOZZARELLA ET LEG. GRILLE (GRANDE)',\n 19076: 'SALADE MOZZARELLA ET LEG. GRILLE (MOYENNE)',\n 19036: 'SALADE NOUILLES DE RIZ AUX LEGUMES (MOYENNE)',\n 18045: 'SALADE ORGE (KG)',\n 19046: 'SALADE PATES GRECQUES (MOYENNE)',\n 19831: 'SALADE DE FRUITS ROUGES ET COULIS',\n 18093: 'SALADE CREVETTES',\n 19085: 'SALADE THON MI CUIT (GRANDE)',\n 18099: 'SALADE THON MI CUIT (KG)',\n 19084: 'SALADE THON MI CUIT (MOYENNE)',\n 18060: 'SALADE PDT (KG)',\n ...}\n\n\n\ndef latem_wol_comparison():\n    compare_sales_for_a_product_every_day(\n        start_date = '2022-01-01',\n        end_date = get_today_date_string(),\n        shop_name_a = 'LATEM',\n        shop_name_b = 'Woluwe',\n        product_id = 19772\n    )\n    return\n    \nlatem_wol_comparison()\n\nconfig.ini file available... using that\n\n\n\n\n\n\nsource\n\n\nget_latest_ordering_time_per_day_per_shop\n\n get_latest_ordering_time_per_day_per_shop (product_id)\n\n\nget_latest_ordering_time_per_day_per_shop(19772)\n\nconfig.ini file available... using that\n\n\n[('CHATELAIN',\n  datetime.datetime(2020, 8, 4, 0, 0),\n  datetime.datetime(2020, 8, 4, 17, 22, 33, 949274),\n  '17:22',\n  Decimal('3.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 4, 0, 0),\n  datetime.datetime(2020, 8, 4, 15, 28, 34, 427723),\n  '15:28',\n  Decimal('1.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 4, 0, 0),\n  datetime.datetime(2020, 8, 4, 11, 6, 14, 946150),\n  '11:06',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 4, 0, 0),\n  datetime.datetime(2020, 8, 4, 16, 21, 19, 736078),\n  '16:21',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 4, 0, 0),\n  datetime.datetime(2020, 8, 4, 14, 15, 5, 193784),\n  '14:15',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 4, 0, 0),\n  datetime.datetime(2020, 8, 4, 16, 59, 28, 405292),\n  '16:59',\n  Decimal('4.000')),\n (None,\n  datetime.datetime(2020, 8, 4, 0, 0),\n  datetime.datetime(2020, 8, 4, 16, 8, 25, 490716),\n  '16:08',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 5, 0, 0),\n  datetime.datetime(2020, 8, 5, 17, 14, 47, 896968),\n  '17:14',\n  Decimal('3.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 5, 0, 0),\n  datetime.datetime(2020, 8, 5, 13, 25, 4, 256374),\n  '13:25',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 5, 0, 0),\n  datetime.datetime(2020, 8, 5, 15, 14, 53, 688629),\n  '15:14',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 5, 0, 0),\n  datetime.datetime(2020, 8, 5, 15, 51, 29, 123077),\n  '15:51',\n  Decimal('7.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 5, 0, 0),\n  datetime.datetime(2020, 8, 5, 16, 54, 56, 759227),\n  '16:54',\n  Decimal('5.000')),\n (None,\n  datetime.datetime(2020, 8, 5, 0, 0),\n  datetime.datetime(2020, 8, 5, 10, 33, 24, 554156),\n  '10:33',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 6, 0, 0),\n  datetime.datetime(2020, 8, 6, 17, 9, 2, 259070),\n  '17:09',\n  Decimal('3.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 6, 0, 0),\n  datetime.datetime(2020, 8, 6, 12, 34, 18, 345426),\n  '12:34',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 6, 0, 0),\n  datetime.datetime(2020, 8, 6, 16, 49, 54, 89191),\n  '16:49',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 6, 0, 0),\n  datetime.datetime(2020, 8, 6, 16, 50, 53, 173531),\n  '16:50',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 6, 0, 0),\n  datetime.datetime(2020, 8, 6, 15, 48, 54, 712377),\n  '15:48',\n  Decimal('2.000')),\n (None,\n  datetime.datetime(2020, 8, 6, 0, 0),\n  datetime.datetime(2020, 8, 6, 13, 33, 48, 315824),\n  '13:33',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 7, 0, 0),\n  datetime.datetime(2020, 8, 7, 16, 22, 57, 649693),\n  '16:22',\n  Decimal('3.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 7, 0, 0),\n  datetime.datetime(2020, 8, 7, 11, 10, 50, 990408),\n  '11:10',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 7, 0, 0),\n  datetime.datetime(2020, 8, 7, 14, 39, 45, 393616),\n  '14:39',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 7, 0, 0),\n  datetime.datetime(2020, 8, 7, 12, 58, 41, 634301),\n  '12:58',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 7, 0, 0),\n  datetime.datetime(2020, 8, 7, 16, 44, 53, 36489),\n  '16:44',\n  Decimal('8.000')),\n (None,\n  datetime.datetime(2020, 8, 7, 0, 0),\n  datetime.datetime(2020, 8, 7, 15, 9, 47, 814505),\n  '15:09',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 8, 0, 0),\n  datetime.datetime(2020, 8, 8, 15, 13, 13, 233697),\n  '15:13',\n  Decimal('1.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 8, 0, 0),\n  datetime.datetime(2020, 8, 8, 12, 9, 37, 562854),\n  '12:09',\n  Decimal('1.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 8, 0, 0),\n  datetime.datetime(2020, 8, 8, 15, 45, 44, 717193),\n  '15:45',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 8, 0, 0),\n  datetime.datetime(2020, 8, 8, 16, 57, 55, 881729),\n  '16:57',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 8, 0, 0),\n  datetime.datetime(2020, 8, 8, 12, 57, 35, 916239),\n  '12:57',\n  Decimal('9.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 8, 0, 0),\n  datetime.datetime(2020, 8, 8, 16, 54, 16, 80188),\n  '16:54',\n  Decimal('11.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 9, 0, 0),\n  datetime.datetime(2020, 8, 9, 16, 3, 58, 182593),\n  '16:03',\n  Decimal('6.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 9, 0, 0),\n  datetime.datetime(2020, 8, 9, 9, 23, 4, 7788),\n  '09:23',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 9, 0, 0),\n  datetime.datetime(2020, 8, 9, 12, 38, 19, 228460),\n  '12:38',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 9, 0, 0),\n  datetime.datetime(2020, 8, 9, 10, 49, 38, 2276),\n  '10:49',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 9, 0, 0),\n  datetime.datetime(2020, 8, 9, 13, 3, 21, 150477),\n  '13:03',\n  Decimal('8.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 10, 0, 0),\n  datetime.datetime(2020, 8, 10, 17, 33, 45, 23707),\n  '17:33',\n  Decimal('5.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 10, 0, 0),\n  datetime.datetime(2020, 8, 10, 14, 39, 32, 821651),\n  '14:39',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 10, 0, 0),\n  datetime.datetime(2020, 8, 10, 16, 52, 59, 950104),\n  '16:52',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 10, 0, 0),\n  datetime.datetime(2020, 8, 10, 10, 36, 50, 106706),\n  '10:36',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 10, 0, 0),\n  datetime.datetime(2020, 8, 10, 16, 8, 37, 139586),\n  '16:08',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 10, 0, 0),\n  datetime.datetime(2020, 8, 10, 16, 32, 18, 752142),\n  '16:32',\n  Decimal('11.000')),\n (None,\n  datetime.datetime(2020, 8, 10, 0, 0),\n  datetime.datetime(2020, 8, 10, 13, 19, 14, 704390),\n  '13:19',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 11, 0, 0),\n  datetime.datetime(2020, 8, 11, 17, 3, 58, 574753),\n  '17:03',\n  Decimal('3.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 11, 0, 0),\n  datetime.datetime(2020, 8, 11, 13, 41, 5, 269701),\n  '13:41',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 11, 0, 0),\n  datetime.datetime(2020, 8, 11, 14, 55, 8, 185054),\n  '14:55',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 11, 0, 0),\n  datetime.datetime(2020, 8, 11, 17, 2, 53, 184504),\n  '17:02',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 11, 0, 0),\n  datetime.datetime(2020, 8, 11, 16, 56, 59, 94573),\n  '16:56',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 12, 0, 0),\n  datetime.datetime(2020, 8, 12, 16, 26, 7, 473941),\n  '16:26',\n  Decimal('2.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 12, 0, 0),\n  datetime.datetime(2020, 8, 12, 9, 8, 17, 852152),\n  '09:08',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 12, 0, 0),\n  datetime.datetime(2020, 8, 12, 14, 38, 23, 673999),\n  '14:38',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 12, 0, 0),\n  datetime.datetime(2020, 8, 12, 15, 46, 29, 999034),\n  '15:46',\n  Decimal('8.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 12, 0, 0),\n  datetime.datetime(2020, 8, 12, 14, 17, 2, 934168),\n  '14:17',\n  Decimal('5.000')),\n (None,\n  datetime.datetime(2020, 8, 12, 0, 0),\n  datetime.datetime(2020, 8, 12, 10, 40, 49, 240258),\n  '10:40',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 13, 0, 0),\n  datetime.datetime(2020, 8, 13, 15, 50, 53, 496251),\n  '15:50',\n  Decimal('9.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 13, 0, 0),\n  datetime.datetime(2020, 8, 13, 13, 43, 1, 748436),\n  '13:43',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 13, 0, 0),\n  datetime.datetime(2020, 8, 13, 16, 14, 39, 874820),\n  '16:14',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 13, 0, 0),\n  datetime.datetime(2020, 8, 13, 12, 15, 58, 656504),\n  '12:15',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 13, 0, 0),\n  datetime.datetime(2020, 8, 13, 9, 30, 3, 768199),\n  '09:30',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 13, 0, 0),\n  datetime.datetime(2020, 8, 13, 16, 52, 30, 773283),\n  '16:52',\n  Decimal('1.000')),\n (None,\n  datetime.datetime(2020, 8, 13, 0, 0),\n  datetime.datetime(2020, 8, 13, 11, 33, 50, 374620),\n  '11:33',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 14, 0, 0),\n  datetime.datetime(2020, 8, 14, 17, 9, 17, 445693),\n  '17:09',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 14, 0, 0),\n  datetime.datetime(2020, 8, 14, 13, 35, 13, 522393),\n  '13:35',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 14, 0, 0),\n  datetime.datetime(2020, 8, 14, 14, 22, 37, 609696),\n  '14:22',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 14, 0, 0),\n  datetime.datetime(2020, 8, 14, 16, 21, 49, 493396),\n  '16:21',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 14, 0, 0),\n  datetime.datetime(2020, 8, 14, 9, 46, 33, 997334),\n  '09:46',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 14, 0, 0),\n  datetime.datetime(2020, 8, 14, 16, 26, 47, 417213),\n  '16:26',\n  Decimal('8.000')),\n (None,\n  datetime.datetime(2020, 8, 14, 0, 0),\n  datetime.datetime(2020, 8, 14, 13, 43, 6, 559321),\n  '13:43',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 15, 0, 0),\n  datetime.datetime(2020, 8, 15, 16, 33, 24, 173696),\n  '16:33',\n  Decimal('5.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 15, 0, 0),\n  datetime.datetime(2020, 8, 15, 10, 23, 25, 437084),\n  '10:23',\n  Decimal('9.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 15, 0, 0),\n  datetime.datetime(2020, 8, 15, 14, 34, 33, 816948),\n  '14:34',\n  Decimal('8.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 15, 0, 0),\n  datetime.datetime(2020, 8, 15, 15, 2, 39, 497725),\n  '15:02',\n  Decimal('8.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 15, 0, 0),\n  datetime.datetime(2020, 8, 15, 14, 53, 39, 40224),\n  '14:53',\n  Decimal('6.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 16, 0, 0),\n  datetime.datetime(2020, 8, 16, 17, 39, 15, 552277),\n  '17:39',\n  Decimal('4.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 16, 0, 0),\n  datetime.datetime(2020, 8, 16, 10, 14, 17, 43984),\n  '10:14',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 16, 0, 0),\n  datetime.datetime(2020, 8, 16, 16, 43, 27, 436939),\n  '16:43',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 16, 0, 0),\n  datetime.datetime(2020, 8, 16, 12, 59, 52, 835464),\n  '12:59',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 16, 0, 0),\n  datetime.datetime(2020, 8, 16, 16, 54, 33, 724956),\n  '16:54',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 17, 0, 0),\n  datetime.datetime(2020, 8, 17, 16, 40, 27, 891674),\n  '16:40',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 17, 0, 0),\n  datetime.datetime(2020, 8, 17, 15, 54, 26, 780333),\n  '15:54',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 17, 0, 0),\n  datetime.datetime(2020, 8, 17, 14, 15, 5, 713463),\n  '14:15',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 17, 0, 0),\n  datetime.datetime(2020, 8, 17, 16, 31, 18, 842657),\n  '16:31',\n  Decimal('5.000')),\n (None,\n  datetime.datetime(2020, 8, 17, 0, 0),\n  datetime.datetime(2020, 8, 17, 12, 15, 14, 823249),\n  '12:15',\n  Decimal('6.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 18, 0, 0),\n  datetime.datetime(2020, 8, 18, 17, 24, 29, 774943),\n  '17:24',\n  Decimal('10.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 18, 0, 0),\n  datetime.datetime(2020, 8, 18, 15, 37, 47, 57700),\n  '15:37',\n  Decimal('1.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 18, 0, 0),\n  datetime.datetime(2020, 8, 18, 17, 40, 31, 854250),\n  '17:40',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 18, 0, 0),\n  datetime.datetime(2020, 8, 18, 16, 55, 43, 720099),\n  '16:55',\n  Decimal('8.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 18, 0, 0),\n  datetime.datetime(2020, 8, 18, 16, 59, 46, 930608),\n  '16:59',\n  Decimal('9.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 18, 0, 0),\n  datetime.datetime(2020, 8, 18, 16, 10, 12, 8219),\n  '16:10',\n  Decimal('12.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 19, 0, 0),\n  datetime.datetime(2020, 8, 19, 17, 20, 33, 26384),\n  '17:20',\n  Decimal('7.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 19, 0, 0),\n  datetime.datetime(2020, 8, 19, 10, 56, 58, 588505),\n  '10:56',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 19, 0, 0),\n  datetime.datetime(2020, 8, 19, 15, 59, 7, 109694),\n  '15:59',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 19, 0, 0),\n  datetime.datetime(2020, 8, 19, 16, 9, 19, 991167),\n  '16:09',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 19, 0, 0),\n  datetime.datetime(2020, 8, 19, 16, 24, 35, 372917),\n  '16:24',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 20, 0, 0),\n  datetime.datetime(2020, 8, 20, 17, 5, 36, 94791),\n  '17:05',\n  Decimal('5.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 20, 0, 0),\n  datetime.datetime(2020, 8, 20, 15, 26, 51, 881692),\n  '15:26',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 20, 0, 0),\n  datetime.datetime(2020, 8, 20, 17, 8, 41, 983799),\n  '17:08',\n  Decimal('10.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 20, 0, 0),\n  datetime.datetime(2020, 8, 20, 12, 30, 11, 179207),\n  '12:30',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 20, 0, 0),\n  datetime.datetime(2020, 8, 20, 13, 48, 32, 455221),\n  '13:48',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 20, 0, 0),\n  datetime.datetime(2020, 8, 20, 13, 5, 49, 170241),\n  '13:05',\n  Decimal('11.000')),\n (None,\n  datetime.datetime(2020, 8, 20, 0, 0),\n  datetime.datetime(2020, 8, 20, 11, 59, 56, 329698),\n  '11:59',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 21, 0, 0),\n  datetime.datetime(2020, 8, 21, 17, 31, 8, 57707),\n  '17:31',\n  Decimal('4.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 21, 0, 0),\n  datetime.datetime(2020, 8, 21, 10, 36, 43, 137698),\n  '10:36',\n  Decimal('1.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 21, 0, 0),\n  datetime.datetime(2020, 8, 21, 16, 33, 58, 56924),\n  '16:33',\n  Decimal('8.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 21, 0, 0),\n  datetime.datetime(2020, 8, 21, 16, 7, 6, 497277),\n  '16:07',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 21, 0, 0),\n  datetime.datetime(2020, 8, 21, 15, 2, 3, 980865),\n  '15:02',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 21, 0, 0),\n  datetime.datetime(2020, 8, 21, 16, 40, 10, 986211),\n  '16:40',\n  Decimal('12.000')),\n (None,\n  datetime.datetime(2020, 8, 21, 0, 0),\n  datetime.datetime(2020, 8, 21, 10, 17, 49, 229157),\n  '10:17',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 22, 0, 0),\n  datetime.datetime(2020, 8, 22, 13, 16, 11, 296160),\n  '13:16',\n  Decimal('4.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 22, 0, 0),\n  datetime.datetime(2020, 8, 22, 12, 50, 49, 525304),\n  '12:50',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 22, 0, 0),\n  datetime.datetime(2020, 8, 22, 11, 49, 8, 221387),\n  '11:49',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 22, 0, 0),\n  datetime.datetime(2020, 8, 22, 10, 33, 47, 721639),\n  '10:33',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 22, 0, 0),\n  datetime.datetime(2020, 8, 22, 16, 44, 1, 539147),\n  '16:44',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 22, 0, 0),\n  datetime.datetime(2020, 8, 22, 16, 35, 57, 433693),\n  '16:35',\n  Decimal('4.000')),\n (None,\n  datetime.datetime(2020, 8, 22, 0, 0),\n  datetime.datetime(2020, 8, 22, 12, 19, 23, 944074),\n  '12:19',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 23, 0, 0),\n  datetime.datetime(2020, 8, 23, 14, 14, 32, 972234),\n  '14:14',\n  Decimal('14.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 23, 0, 0),\n  datetime.datetime(2020, 8, 23, 11, 18, 5, 790049),\n  '11:18',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 23, 0, 0),\n  datetime.datetime(2020, 8, 23, 15, 51, 56, 128349),\n  '15:51',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 23, 0, 0),\n  datetime.datetime(2020, 8, 23, 16, 49, 32, 719284),\n  '16:49',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 23, 0, 0),\n  datetime.datetime(2020, 8, 23, 15, 41, 39, 513707),\n  '15:41',\n  Decimal('8.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 24, 0, 0),\n  datetime.datetime(2020, 8, 24, 16, 4, 11, 475836),\n  '16:04',\n  Decimal('10.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 24, 0, 0),\n  datetime.datetime(2020, 8, 24, 13, 31, 41, 979479),\n  '13:31',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 24, 0, 0),\n  datetime.datetime(2020, 8, 24, 16, 5, 41, 468040),\n  '16:05',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 24, 0, 0),\n  datetime.datetime(2020, 8, 24, 15, 13, 23, 554232),\n  '15:13',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 25, 0, 0),\n  datetime.datetime(2020, 8, 25, 17, 0, 37, 613103),\n  '17:00',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 25, 0, 0),\n  datetime.datetime(2020, 8, 25, 15, 40, 9, 209699),\n  '15:40',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 25, 0, 0),\n  datetime.datetime(2020, 8, 25, 16, 19, 24, 570530),\n  '16:19',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 25, 0, 0),\n  datetime.datetime(2020, 8, 25, 15, 26, 53, 229696),\n  '15:26',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 25, 0, 0),\n  datetime.datetime(2020, 8, 25, 16, 44, 16, 675760),\n  '16:44',\n  Decimal('12.000')),\n (None,\n  datetime.datetime(2020, 8, 25, 0, 0),\n  datetime.datetime(2020, 8, 25, 10, 37, 50, 132662),\n  '10:37',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 26, 0, 0),\n  datetime.datetime(2020, 8, 26, 18, 14, 42, 867702),\n  '18:14',\n  Decimal('3.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 26, 0, 0),\n  datetime.datetime(2020, 8, 26, 14, 28, 51, 912932),\n  '14:28',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 26, 0, 0),\n  datetime.datetime(2020, 8, 26, 14, 51, 0, 893597),\n  '14:51',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 26, 0, 0),\n  datetime.datetime(2020, 8, 26, 10, 22, 0, 837567),\n  '10:22',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 26, 0, 0),\n  datetime.datetime(2020, 8, 26, 14, 6, 37, 132135),\n  '14:06',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 26, 0, 0),\n  datetime.datetime(2020, 8, 26, 16, 7, 6, 917699),\n  '16:07',\n  Decimal('2.000')),\n (None,\n  datetime.datetime(2020, 8, 26, 0, 0),\n  datetime.datetime(2020, 8, 26, 13, 34, 19, 894809),\n  '13:34',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 27, 0, 0),\n  datetime.datetime(2020, 8, 27, 17, 43, 15, 812086),\n  '17:43',\n  Decimal('2.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 27, 0, 0),\n  datetime.datetime(2020, 8, 27, 16, 22, 27, 703693),\n  '16:22',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 27, 0, 0),\n  datetime.datetime(2020, 8, 27, 12, 22, 17, 60620),\n  '12:22',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 27, 0, 0),\n  datetime.datetime(2020, 8, 27, 14, 10, 18, 80324),\n  '14:10',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 27, 0, 0),\n  datetime.datetime(2020, 8, 27, 10, 25, 49, 337793),\n  '10:25',\n  Decimal('1.000')),\n (None,\n  datetime.datetime(2020, 8, 27, 0, 0),\n  datetime.datetime(2020, 8, 27, 11, 53, 53, 833694),\n  '11:53',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 28, 0, 0),\n  datetime.datetime(2020, 8, 28, 15, 55, 6, 57300),\n  '15:55',\n  Decimal('2.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 28, 0, 0),\n  datetime.datetime(2020, 8, 28, 12, 43, 11, 645754),\n  '12:43',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 28, 0, 0),\n  datetime.datetime(2020, 8, 28, 15, 19, 36, 553447),\n  '15:19',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 28, 0, 0),\n  datetime.datetime(2020, 8, 28, 16, 11, 19, 325729),\n  '16:11',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 28, 0, 0),\n  datetime.datetime(2020, 8, 28, 9, 7, 1, 362744),\n  '09:07',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 28, 0, 0),\n  datetime.datetime(2020, 8, 28, 15, 52, 42, 779927),\n  '15:52',\n  Decimal('8.000')),\n (None,\n  datetime.datetime(2020, 8, 28, 0, 0),\n  datetime.datetime(2020, 8, 28, 10, 16, 25, 783986),\n  '10:16',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 29, 0, 0),\n  datetime.datetime(2020, 8, 29, 15, 2, 7, 412910),\n  '15:02',\n  Decimal('3.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 29, 0, 0),\n  datetime.datetime(2020, 8, 29, 15, 26, 4, 122217),\n  '15:26',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 29, 0, 0),\n  datetime.datetime(2020, 8, 29, 16, 45, 44, 290983),\n  '16:45',\n  Decimal('10.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 29, 0, 0),\n  datetime.datetime(2020, 8, 29, 16, 30, 26, 593786),\n  '16:30',\n  Decimal('10.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 29, 0, 0),\n  datetime.datetime(2020, 8, 29, 16, 1, 8, 229802),\n  '16:01',\n  Decimal('12.000')),\n (None,\n  datetime.datetime(2020, 8, 29, 0, 0),\n  datetime.datetime(2020, 8, 29, 13, 20, 10, 508231),\n  '13:20',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 30, 0, 0),\n  datetime.datetime(2020, 8, 30, 14, 12, 10, 433949),\n  '14:12',\n  Decimal('3.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 30, 0, 0),\n  datetime.datetime(2020, 8, 30, 11, 1, 0, 538622),\n  '11:01',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 30, 0, 0),\n  datetime.datetime(2020, 8, 30, 13, 44, 3, 390922),\n  '13:44',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 30, 0, 0),\n  datetime.datetime(2020, 8, 30, 16, 30, 3, 162692),\n  '16:30',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 8, 30, 0, 0),\n  datetime.datetime(2020, 8, 30, 13, 22, 11, 598936),\n  '13:22',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 30, 0, 0),\n  datetime.datetime(2020, 8, 30, 15, 16, 32, 688031),\n  '15:16',\n  Decimal('8.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 8, 31, 0, 0),\n  datetime.datetime(2020, 8, 31, 12, 57, 15, 378610),\n  '12:57',\n  Decimal('1.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 8, 31, 0, 0),\n  datetime.datetime(2020, 8, 31, 16, 20, 36, 218791),\n  '16:20',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 8, 31, 0, 0),\n  datetime.datetime(2020, 8, 31, 16, 22, 40, 370028),\n  '16:22',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2020, 8, 31, 0, 0),\n  datetime.datetime(2020, 8, 31, 15, 25, 44, 761126),\n  '15:25',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2020, 8, 31, 0, 0),\n  datetime.datetime(2020, 8, 31, 16, 1, 40, 597698),\n  '16:01',\n  Decimal('4.000')),\n (None,\n  datetime.datetime(2020, 8, 31, 0, 0),\n  datetime.datetime(2020, 8, 31, 11, 55, 52, 702439),\n  '11:55',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 1, 0, 0),\n  datetime.datetime(2020, 9, 1, 16, 15, 41, 444139),\n  '16:15',\n  Decimal('4.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 1, 0, 0),\n  datetime.datetime(2020, 9, 1, 16, 2, 1, 849005),\n  '16:02',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 1, 0, 0),\n  datetime.datetime(2020, 9, 1, 10, 29, 27, 600719),\n  '10:29',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 1, 0, 0),\n  datetime.datetime(2020, 9, 1, 15, 14, 18, 960228),\n  '15:14',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 1, 0, 0),\n  datetime.datetime(2020, 9, 1, 16, 48, 21, 896640),\n  '16:48',\n  Decimal('8.000')),\n (None,\n  datetime.datetime(2020, 9, 1, 0, 0),\n  datetime.datetime(2020, 9, 1, 10, 12, 48, 225198),\n  '10:12',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 2, 0, 0),\n  datetime.datetime(2020, 9, 2, 17, 6, 8, 619252),\n  '17:06',\n  Decimal('1.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 2, 0, 0),\n  datetime.datetime(2020, 9, 2, 16, 13, 16, 753235),\n  '16:13',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 2, 0, 0),\n  datetime.datetime(2020, 9, 2, 16, 45, 58, 185692),\n  '16:45',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 2, 0, 0),\n  datetime.datetime(2020, 9, 2, 16, 8, 44, 780486),\n  '16:08',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 2, 0, 0),\n  datetime.datetime(2020, 9, 2, 13, 55, 47, 952190),\n  '13:55',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 2, 0, 0),\n  datetime.datetime(2020, 9, 2, 16, 2, 2, 943502),\n  '16:02',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 3, 0, 0),\n  datetime.datetime(2020, 9, 3, 15, 58, 15, 120717),\n  '15:58',\n  Decimal('4.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 3, 0, 0),\n  datetime.datetime(2020, 9, 3, 9, 42, 15, 318288),\n  '09:42',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 3, 0, 0),\n  datetime.datetime(2020, 9, 3, 15, 37, 15, 604293),\n  '15:37',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 3, 0, 0),\n  datetime.datetime(2020, 9, 3, 16, 28, 37, 763005),\n  '16:28',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 3, 0, 0),\n  datetime.datetime(2020, 9, 3, 16, 22, 4, 982402),\n  '16:22',\n  Decimal('6.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 4, 0, 0),\n  datetime.datetime(2020, 9, 4, 19, 37, 41, 739876),\n  '19:37',\n  Decimal('10.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 4, 0, 0),\n  datetime.datetime(2020, 9, 4, 15, 31, 4, 89714),\n  '15:31',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 4, 0, 0),\n  datetime.datetime(2020, 9, 4, 15, 53, 29, 931027),\n  '15:53',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 4, 0, 0),\n  datetime.datetime(2020, 9, 4, 13, 51, 38, 487380),\n  '13:51',\n  Decimal('7.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 4, 0, 0),\n  datetime.datetime(2020, 9, 4, 16, 11, 51, 419637),\n  '16:11',\n  Decimal('6.000')),\n (None,\n  datetime.datetime(2020, 9, 4, 0, 0),\n  datetime.datetime(2020, 9, 4, 13, 47, 50, 940459),\n  '13:47',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 5, 0, 0),\n  datetime.datetime(2020, 9, 5, 16, 4, 17, 339168),\n  '16:04',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 5, 0, 0),\n  datetime.datetime(2020, 9, 5, 15, 46, 17, 957294),\n  '15:46',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 5, 0, 0),\n  datetime.datetime(2020, 9, 5, 16, 10, 30, 494099),\n  '16:10',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 5, 0, 0),\n  datetime.datetime(2020, 9, 5, 16, 36, 47, 282516),\n  '16:36',\n  Decimal('10.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 5, 0, 0),\n  datetime.datetime(2020, 9, 5, 16, 5, 44, 728119),\n  '16:05',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 5, 0, 0),\n  datetime.datetime(2020, 9, 5, 16, 55, 30, 479118),\n  '16:55',\n  Decimal('13.000')),\n (None,\n  datetime.datetime(2020, 9, 5, 0, 0),\n  datetime.datetime(2020, 9, 5, 16, 32, 48, 185647),\n  '16:32',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 6, 0, 0),\n  datetime.datetime(2020, 9, 6, 11, 31, 36, 255244),\n  '11:31',\n  Decimal('1.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 6, 0, 0),\n  datetime.datetime(2020, 9, 6, 11, 0, 1, 216101),\n  '11:00',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 6, 0, 0),\n  datetime.datetime(2020, 9, 6, 13, 30, 31, 698048),\n  '13:30',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 6, 0, 0),\n  datetime.datetime(2020, 9, 6, 11, 42, 1, 658274),\n  '11:42',\n  Decimal('8.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 6, 0, 0),\n  datetime.datetime(2020, 9, 6, 13, 27, 8, 289210),\n  '13:27',\n  Decimal('7.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 7, 0, 0),\n  datetime.datetime(2020, 9, 7, 16, 42, 32, 359495),\n  '16:42',\n  Decimal('6.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 7, 0, 0),\n  datetime.datetime(2020, 9, 7, 16, 5, 29, 552394),\n  '16:05',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 7, 0, 0),\n  datetime.datetime(2020, 9, 7, 15, 21, 52, 723324),\n  '15:21',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 7, 0, 0),\n  datetime.datetime(2020, 9, 7, 14, 19, 57, 38038),\n  '14:19',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 7, 0, 0),\n  datetime.datetime(2020, 9, 7, 8, 35, 31, 794892),\n  '08:35',\n  Decimal('2.000')),\n (None,\n  datetime.datetime(2020, 9, 7, 0, 0),\n  datetime.datetime(2020, 9, 7, 12, 0, 33, 755506),\n  '12:00',\n  Decimal('7.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 8, 0, 0),\n  datetime.datetime(2020, 9, 8, 17, 38, 54, 682141),\n  '17:38',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 8, 0, 0),\n  datetime.datetime(2020, 9, 8, 16, 54, 48, 810572),\n  '16:54',\n  Decimal('15.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 8, 0, 0),\n  datetime.datetime(2020, 9, 8, 16, 14, 0, 46008),\n  '16:14',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 8, 0, 0),\n  datetime.datetime(2020, 9, 8, 16, 18, 37, 280940),\n  '16:18',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 8, 0, 0),\n  datetime.datetime(2020, 9, 8, 16, 15, 27, 271364),\n  '16:15',\n  Decimal('12.000')),\n (None,\n  datetime.datetime(2020, 9, 8, 0, 0),\n  datetime.datetime(2020, 9, 8, 13, 21, 56, 811930),\n  '13:21',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 9, 0, 0),\n  datetime.datetime(2020, 9, 9, 15, 12, 17, 979930),\n  '15:12',\n  Decimal('2.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 9, 0, 0),\n  datetime.datetime(2020, 9, 9, 15, 38, 7, 700772),\n  '15:38',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 9, 0, 0),\n  datetime.datetime(2020, 9, 9, 16, 49, 45, 91102),\n  '16:49',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 9, 0, 0),\n  datetime.datetime(2020, 9, 9, 16, 24, 29, 48272),\n  '16:24',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 9, 0, 0),\n  datetime.datetime(2020, 9, 9, 16, 1, 27, 960236),\n  '16:01',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 9, 9, 0, 0),\n  datetime.datetime(2020, 9, 9, 11, 3, 5, 270805),\n  '11:03',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 10, 0, 0),\n  datetime.datetime(2020, 9, 10, 16, 3, 31, 744419),\n  '16:03',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 10, 0, 0),\n  datetime.datetime(2020, 9, 10, 14, 11, 38, 996294),\n  '14:11',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 10, 0, 0),\n  datetime.datetime(2020, 9, 10, 12, 5, 14, 601649),\n  '12:05',\n  Decimal('9.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 10, 0, 0),\n  datetime.datetime(2020, 9, 10, 11, 30, 27, 506250),\n  '11:30',\n  Decimal('7.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 10, 0, 0),\n  datetime.datetime(2020, 9, 10, 16, 26, 25, 112490),\n  '16:26',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 10, 0, 0),\n  datetime.datetime(2020, 9, 10, 17, 1, 13, 108587),\n  '17:01',\n  Decimal('5.000')),\n (None,\n  datetime.datetime(2020, 9, 10, 0, 0),\n  datetime.datetime(2020, 9, 10, 14, 35, 29, 871745),\n  '14:35',\n  Decimal('7.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 11, 0, 0),\n  datetime.datetime(2020, 9, 11, 18, 2, 30, 673121),\n  '18:02',\n  Decimal('14.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 11, 0, 0),\n  datetime.datetime(2020, 9, 11, 15, 14, 1, 768772),\n  '15:14',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 11, 0, 0),\n  datetime.datetime(2020, 9, 11, 14, 45, 24, 406990),\n  '14:45',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 11, 0, 0),\n  datetime.datetime(2020, 9, 11, 14, 39, 35, 871197),\n  '14:39',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 11, 0, 0),\n  datetime.datetime(2020, 9, 11, 16, 30, 10, 353620),\n  '16:30',\n  Decimal('6.000')),\n (None,\n  datetime.datetime(2020, 9, 11, 0, 0),\n  datetime.datetime(2020, 9, 11, 14, 13, 5, 937934),\n  '14:13',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 12, 0, 0),\n  datetime.datetime(2020, 9, 12, 15, 1, 38, 516456),\n  '15:01',\n  Decimal('4.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 12, 0, 0),\n  datetime.datetime(2020, 9, 12, 16, 50, 57, 147398),\n  '16:50',\n  Decimal('9.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 12, 0, 0),\n  datetime.datetime(2020, 9, 12, 12, 51, 26, 197597),\n  '12:51',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 12, 0, 0),\n  datetime.datetime(2020, 9, 12, 15, 14, 21, 201756),\n  '15:14',\n  Decimal('11.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 12, 0, 0),\n  datetime.datetime(2020, 9, 12, 13, 20, 12, 278960),\n  '13:20',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 12, 0, 0),\n  datetime.datetime(2020, 9, 12, 16, 35, 40, 473649),\n  '16:35',\n  Decimal('18.000')),\n (None,\n  datetime.datetime(2020, 9, 12, 0, 0),\n  datetime.datetime(2020, 9, 12, 14, 51, 11, 101575),\n  '14:51',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 13, 0, 0),\n  datetime.datetime(2020, 9, 13, 17, 4, 27, 790474),\n  '17:04',\n  Decimal('6.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 13, 0, 0),\n  datetime.datetime(2020, 9, 13, 10, 26, 50, 384056),\n  '10:26',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 13, 0, 0),\n  datetime.datetime(2020, 9, 13, 13, 6, 28, 245592),\n  '13:06',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 13, 0, 0),\n  datetime.datetime(2020, 9, 13, 16, 21, 57, 414351),\n  '16:21',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 13, 0, 0),\n  datetime.datetime(2020, 9, 13, 13, 10, 49, 743798),\n  '13:10',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 14, 0, 0),\n  datetime.datetime(2020, 9, 14, 13, 22, 37, 356426),\n  '13:22',\n  Decimal('1.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 14, 0, 0),\n  datetime.datetime(2020, 9, 14, 12, 45, 38, 98227),\n  '12:45',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 14, 0, 0),\n  datetime.datetime(2020, 9, 14, 16, 21, 45, 828619),\n  '16:21',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 14, 0, 0),\n  datetime.datetime(2020, 9, 14, 16, 19, 6, 115713),\n  '16:19',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 9, 14, 0, 0),\n  datetime.datetime(2020, 9, 14, 11, 40, 10, 702446),\n  '11:40',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 15, 0, 0),\n  datetime.datetime(2020, 9, 15, 16, 24, 26, 260054),\n  '16:24',\n  Decimal('1.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 15, 0, 0),\n  datetime.datetime(2020, 9, 15, 17, 1, 25, 110356),\n  '17:01',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 15, 0, 0),\n  datetime.datetime(2020, 9, 15, 13, 45, 54, 210372),\n  '13:45',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 15, 0, 0),\n  datetime.datetime(2020, 9, 15, 15, 1, 52, 399404),\n  '15:01',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 15, 0, 0),\n  datetime.datetime(2020, 9, 15, 16, 45, 11, 837189),\n  '16:45',\n  Decimal('2.000')),\n (None,\n  datetime.datetime(2020, 9, 15, 0, 0),\n  datetime.datetime(2020, 9, 15, 11, 20, 29, 839041),\n  '11:20',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 16, 0, 0),\n  datetime.datetime(2020, 9, 16, 17, 48, 44, 479080),\n  '17:48',\n  Decimal('2.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 16, 0, 0),\n  datetime.datetime(2020, 9, 16, 15, 46, 31, 357911),\n  '15:46',\n  Decimal('8.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 16, 0, 0),\n  datetime.datetime(2020, 9, 16, 8, 13, 43, 874685),\n  '08:13',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 16, 0, 0),\n  datetime.datetime(2020, 9, 16, 16, 0, 36, 692807),\n  '16:00',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 16, 0, 0),\n  datetime.datetime(2020, 9, 16, 14, 53, 6, 809400),\n  '14:53',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 9, 16, 0, 0),\n  datetime.datetime(2020, 9, 16, 10, 27, 3, 796662),\n  '10:27',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 17, 0, 0),\n  datetime.datetime(2020, 9, 17, 18, 5, 4, 781781),\n  '18:05',\n  Decimal('15.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 17, 0, 0),\n  datetime.datetime(2020, 9, 17, 12, 51, 36, 133576),\n  '12:51',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 17, 0, 0),\n  datetime.datetime(2020, 9, 17, 14, 55, 26, 533147),\n  '14:55',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 17, 0, 0),\n  datetime.datetime(2020, 9, 17, 16, 54, 34, 108657),\n  '16:54',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 17, 0, 0),\n  datetime.datetime(2020, 9, 17, 16, 7, 5, 187105),\n  '16:07',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 17, 0, 0),\n  datetime.datetime(2020, 9, 17, 12, 57, 33, 661331),\n  '12:57',\n  Decimal('2.000')),\n (None,\n  datetime.datetime(2020, 9, 17, 0, 0),\n  datetime.datetime(2020, 9, 17, 13, 24, 57, 274466),\n  '13:24',\n  Decimal('2.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 18, 0, 0),\n  datetime.datetime(2020, 9, 18, 11, 54, 41, 153946),\n  '11:54',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 18, 0, 0),\n  datetime.datetime(2020, 9, 18, 13, 54, 23, 397792),\n  '13:54',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 18, 0, 0),\n  datetime.datetime(2020, 9, 18, 9, 38, 26, 219426),\n  '09:38',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 18, 0, 0),\n  datetime.datetime(2020, 9, 18, 17, 6, 19, 803289),\n  '17:06',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 18, 0, 0),\n  datetime.datetime(2020, 9, 18, 13, 22, 51, 598329),\n  '13:22',\n  Decimal('5.000')),\n (None,\n  datetime.datetime(2020, 9, 18, 0, 0),\n  datetime.datetime(2020, 9, 18, 11, 12, 40, 688286),\n  '11:12',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 19, 0, 0),\n  datetime.datetime(2020, 9, 19, 16, 22, 26, 822664),\n  '16:22',\n  Decimal('5.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 19, 0, 0),\n  datetime.datetime(2020, 9, 19, 16, 33, 49, 193272),\n  '16:33',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 19, 0, 0),\n  datetime.datetime(2020, 9, 19, 16, 12, 24, 910333),\n  '16:12',\n  Decimal('8.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 19, 0, 0),\n  datetime.datetime(2020, 9, 19, 16, 49, 16, 62289),\n  '16:49',\n  Decimal('21.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 19, 0, 0),\n  datetime.datetime(2020, 9, 19, 16, 46, 19, 473488),\n  '16:46',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 19, 0, 0),\n  datetime.datetime(2020, 9, 19, 16, 13, 58, 595397),\n  '16:13',\n  Decimal('10.000')),\n (None,\n  datetime.datetime(2020, 9, 19, 0, 0),\n  datetime.datetime(2020, 9, 19, 14, 15, 2, 723814),\n  '14:15',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 20, 0, 0),\n  datetime.datetime(2020, 9, 20, 17, 32, 55, 505238),\n  '17:32',\n  Decimal('8.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 20, 0, 0),\n  datetime.datetime(2020, 9, 20, 15, 22, 29, 371603),\n  '15:22',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 20, 0, 0),\n  datetime.datetime(2020, 9, 20, 13, 42, 29, 867466),\n  '13:42',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 20, 0, 0),\n  datetime.datetime(2020, 9, 20, 8, 54, 1, 35660),\n  '08:54',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 21, 0, 0),\n  datetime.datetime(2020, 9, 21, 14, 25, 57, 185222),\n  '14:25',\n  Decimal('1.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 21, 0, 0),\n  datetime.datetime(2020, 9, 21, 15, 35, 48, 827944),\n  '15:35',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 21, 0, 0),\n  datetime.datetime(2020, 9, 21, 14, 10, 7, 892260),\n  '14:10',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 21, 0, 0),\n  datetime.datetime(2020, 9, 21, 16, 22, 45, 334308),\n  '16:22',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 21, 0, 0),\n  datetime.datetime(2020, 9, 21, 16, 44, 37, 807381),\n  '16:44',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 9, 21, 0, 0),\n  datetime.datetime(2020, 9, 21, 9, 52, 55, 75358),\n  '09:52',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 22, 0, 0),\n  datetime.datetime(2020, 9, 22, 11, 22, 20, 179975),\n  '11:22',\n  Decimal('2.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 22, 0, 0),\n  datetime.datetime(2020, 9, 22, 16, 22, 2, 270360),\n  '16:22',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 22, 0, 0),\n  datetime.datetime(2020, 9, 22, 15, 17, 34, 816829),\n  '15:17',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 22, 0, 0),\n  datetime.datetime(2020, 9, 22, 14, 51, 14, 64715),\n  '14:51',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 22, 0, 0),\n  datetime.datetime(2020, 9, 22, 16, 41, 50, 704313),\n  '16:41',\n  Decimal('6.000')),\n (None,\n  datetime.datetime(2020, 9, 22, 0, 0),\n  datetime.datetime(2020, 9, 22, 13, 51, 18, 461169),\n  '13:51',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 23, 0, 0),\n  datetime.datetime(2020, 9, 23, 17, 33, 1, 4095),\n  '17:33',\n  Decimal('2.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 23, 0, 0),\n  datetime.datetime(2020, 9, 23, 16, 34, 4, 56858),\n  '16:34',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 23, 0, 0),\n  datetime.datetime(2020, 9, 23, 12, 23, 2, 544277),\n  '12:23',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 23, 0, 0),\n  datetime.datetime(2020, 9, 23, 13, 55, 12, 166276),\n  '13:55',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 23, 0, 0),\n  datetime.datetime(2020, 9, 23, 14, 10, 21, 593179),\n  '14:10',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 23, 0, 0),\n  datetime.datetime(2020, 9, 23, 15, 48, 19, 362807),\n  '15:48',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 9, 23, 0, 0),\n  datetime.datetime(2020, 9, 23, 11, 17, 11, 430015),\n  '11:17',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 24, 0, 0),\n  datetime.datetime(2020, 9, 24, 17, 54, 58, 32965),\n  '17:54',\n  Decimal('7.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 24, 0, 0),\n  datetime.datetime(2020, 9, 24, 14, 32, 35, 304998),\n  '14:32',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 24, 0, 0),\n  datetime.datetime(2020, 9, 24, 16, 58, 3, 962274),\n  '16:58',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 24, 0, 0),\n  datetime.datetime(2020, 9, 24, 16, 25, 53, 972731),\n  '16:25',\n  Decimal('7.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 24, 0, 0),\n  datetime.datetime(2020, 9, 24, 16, 40, 37, 134944),\n  '16:40',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 24, 0, 0),\n  datetime.datetime(2020, 9, 24, 16, 37, 16, 27228),\n  '16:37',\n  Decimal('6.000')),\n (None,\n  datetime.datetime(2020, 9, 24, 0, 0),\n  datetime.datetime(2020, 9, 24, 10, 31, 56, 94010),\n  '10:31',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 25, 0, 0),\n  datetime.datetime(2020, 9, 25, 17, 39, 54, 219854),\n  '17:39',\n  Decimal('9.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 25, 0, 0),\n  datetime.datetime(2020, 9, 25, 17, 4, 7, 347411),\n  '17:04',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 25, 0, 0),\n  datetime.datetime(2020, 9, 25, 10, 37, 11, 363699),\n  '10:37',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 25, 0, 0),\n  datetime.datetime(2020, 9, 25, 15, 47, 31, 964419),\n  '15:47',\n  Decimal('10.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 25, 0, 0),\n  datetime.datetime(2020, 9, 25, 13, 15, 32, 148704),\n  '13:15',\n  Decimal('6.000')),\n (None,\n  datetime.datetime(2020, 9, 25, 0, 0),\n  datetime.datetime(2020, 9, 25, 12, 7, 46, 655576),\n  '12:07',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 26, 0, 0),\n  datetime.datetime(2020, 9, 26, 17, 18, 26, 689293),\n  '17:18',\n  Decimal('6.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 26, 0, 0),\n  datetime.datetime(2020, 9, 26, 16, 6, 2, 741409),\n  '16:06',\n  Decimal('12.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 26, 0, 0),\n  datetime.datetime(2020, 9, 26, 13, 41, 19, 687804),\n  '13:41',\n  Decimal('20.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 26, 0, 0),\n  datetime.datetime(2020, 9, 26, 15, 34, 37, 202273),\n  '15:34',\n  Decimal('10.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 26, 0, 0),\n  datetime.datetime(2020, 9, 26, 11, 51, 28, 539778),\n  '11:51',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 26, 0, 0),\n  datetime.datetime(2020, 9, 26, 15, 38, 40, 930364),\n  '15:38',\n  Decimal('13.000')),\n (None,\n  datetime.datetime(2020, 9, 26, 0, 0),\n  datetime.datetime(2020, 9, 26, 10, 56, 41, 601031),\n  '10:56',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 27, 0, 0),\n  datetime.datetime(2020, 9, 27, 13, 12, 46, 877827),\n  '13:12',\n  Decimal('6.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 27, 0, 0),\n  datetime.datetime(2020, 9, 27, 11, 42, 45, 505586),\n  '11:42',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 27, 0, 0),\n  datetime.datetime(2020, 9, 27, 16, 25, 50, 729784),\n  '16:25',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 27, 0, 0),\n  datetime.datetime(2020, 9, 27, 16, 25, 35, 863136),\n  '16:25',\n  Decimal('11.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 27, 0, 0),\n  datetime.datetime(2020, 9, 27, 15, 16, 40, 530035),\n  '15:16',\n  Decimal('22.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 28, 0, 0),\n  datetime.datetime(2020, 9, 28, 14, 51, 59, 565395),\n  '14:51',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 28, 0, 0),\n  datetime.datetime(2020, 9, 28, 15, 6, 54, 784862),\n  '15:06',\n  Decimal('6.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 29, 0, 0),\n  datetime.datetime(2020, 9, 29, 16, 17, 41, 346658),\n  '16:17',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 29, 0, 0),\n  datetime.datetime(2020, 9, 29, 14, 20, 20, 575526),\n  '14:20',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 9, 29, 0, 0),\n  datetime.datetime(2020, 9, 29, 17, 15, 34, 750460),\n  '17:15',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 29, 0, 0),\n  datetime.datetime(2020, 9, 29, 17, 6, 15, 974317),\n  '17:06',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 29, 0, 0),\n  datetime.datetime(2020, 9, 29, 16, 30, 8, 971326),\n  '16:30',\n  Decimal('8.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 29, 0, 0),\n  datetime.datetime(2020, 9, 29, 14, 18, 8, 552240),\n  '14:18',\n  Decimal('1.000')),\n (None,\n  datetime.datetime(2020, 9, 29, 0, 0),\n  datetime.datetime(2020, 9, 29, 11, 48, 5, 287039),\n  '11:48',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 9, 30, 0, 0),\n  datetime.datetime(2020, 9, 30, 16, 40, 5, 219858),\n  '16:40',\n  Decimal('4.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 9, 30, 0, 0),\n  datetime.datetime(2020, 9, 30, 12, 54, 34, 558781),\n  '12:54',\n  Decimal('12.000')),\n ('Tongres',\n  datetime.datetime(2020, 9, 30, 0, 0),\n  datetime.datetime(2020, 9, 30, 16, 51, 58, 507424),\n  '16:51',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2020, 9, 30, 0, 0),\n  datetime.datetime(2020, 9, 30, 16, 0, 20, 343465),\n  '16:00',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 9, 30, 0, 0),\n  datetime.datetime(2020, 9, 30, 16, 44, 55, 107932),\n  '16:44',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 9, 30, 0, 0),\n  datetime.datetime(2020, 9, 30, 10, 54, 30, 13158),\n  '10:54',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 1, 0, 0),\n  datetime.datetime(2020, 10, 1, 10, 7, 45, 536173),\n  '10:07',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 1, 0, 0),\n  datetime.datetime(2020, 10, 1, 16, 27, 11, 223002),\n  '16:27',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 1, 0, 0),\n  datetime.datetime(2020, 10, 1, 15, 54, 20, 144391),\n  '15:54',\n  Decimal('8.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 1, 0, 0),\n  datetime.datetime(2020, 10, 1, 16, 21, 25, 252779),\n  '16:21',\n  Decimal('6.000')),\n (None,\n  datetime.datetime(2020, 10, 1, 0, 0),\n  datetime.datetime(2020, 10, 1, 11, 53, 7, 69605),\n  '11:53',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 2, 0, 0),\n  datetime.datetime(2020, 10, 2, 16, 32, 27, 368012),\n  '16:32',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 2, 0, 0),\n  datetime.datetime(2020, 10, 2, 13, 27, 27, 195142),\n  '13:27',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 2, 0, 0),\n  datetime.datetime(2020, 10, 2, 16, 21, 23, 816961),\n  '16:21',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 10, 2, 0, 0),\n  datetime.datetime(2020, 10, 2, 15, 23, 29, 242998),\n  '15:23',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 3, 0, 0),\n  datetime.datetime(2020, 10, 3, 16, 50, 25, 185206),\n  '16:50',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 3, 0, 0),\n  datetime.datetime(2020, 10, 3, 16, 41, 35, 592823),\n  '16:41',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 3, 0, 0),\n  datetime.datetime(2020, 10, 3, 15, 0, 53, 16230),\n  '15:00',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 3, 0, 0),\n  datetime.datetime(2020, 10, 3, 16, 38, 55, 268491),\n  '16:38',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 3, 0, 0),\n  datetime.datetime(2020, 10, 3, 15, 34, 4, 665351),\n  '15:34',\n  Decimal('14.000')),\n (None,\n  datetime.datetime(2020, 10, 3, 0, 0),\n  datetime.datetime(2020, 10, 3, 16, 23, 13, 194024),\n  '16:23',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 4, 0, 0),\n  datetime.datetime(2020, 10, 4, 17, 46, 34, 660155),\n  '17:46',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 4, 0, 0),\n  datetime.datetime(2020, 10, 4, 17, 3, 3, 166476),\n  '17:03',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 4, 0, 0),\n  datetime.datetime(2020, 10, 4, 16, 13, 5, 515936),\n  '16:13',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 4, 0, 0),\n  datetime.datetime(2020, 10, 4, 16, 2, 35, 754900),\n  '16:02',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 4, 0, 0),\n  datetime.datetime(2020, 10, 4, 16, 0, 57, 329450),\n  '16:00',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 5, 0, 0),\n  datetime.datetime(2020, 10, 5, 17, 6, 27, 221750),\n  '17:06',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 5, 0, 0),\n  datetime.datetime(2020, 10, 5, 11, 8, 42, 426728),\n  '11:08',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 5, 0, 0),\n  datetime.datetime(2020, 10, 5, 16, 54, 36, 824011),\n  '16:54',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 5, 0, 0),\n  datetime.datetime(2020, 10, 5, 15, 8, 44, 50617),\n  '15:08',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 5, 0, 0),\n  datetime.datetime(2020, 10, 5, 16, 22, 51, 897752),\n  '16:22',\n  Decimal('8.000')),\n (None,\n  datetime.datetime(2020, 10, 5, 0, 0),\n  datetime.datetime(2020, 10, 5, 11, 8, 43, 584191),\n  '11:08',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 6, 0, 0),\n  datetime.datetime(2020, 10, 6, 17, 15, 23, 688651),\n  '17:15',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 6, 0, 0),\n  datetime.datetime(2020, 10, 6, 15, 25, 38, 702978),\n  '15:25',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 6, 0, 0),\n  datetime.datetime(2020, 10, 6, 12, 54, 34, 803747),\n  '12:54',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 6, 0, 0),\n  datetime.datetime(2020, 10, 6, 16, 38, 35, 757920),\n  '16:38',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 6, 0, 0),\n  datetime.datetime(2020, 10, 6, 15, 57, 53, 891400),\n  '15:57',\n  Decimal('2.000')),\n (None,\n  datetime.datetime(2020, 10, 6, 0, 0),\n  datetime.datetime(2020, 10, 6, 13, 12, 32, 859563),\n  '13:12',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 7, 0, 0),\n  datetime.datetime(2020, 10, 7, 17, 24, 54, 484680),\n  '17:24',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 7, 0, 0),\n  datetime.datetime(2020, 10, 7, 9, 42, 15, 753999),\n  '09:42',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 7, 0, 0),\n  datetime.datetime(2020, 10, 7, 13, 12, 15, 452273),\n  '13:12',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 7, 0, 0),\n  datetime.datetime(2020, 10, 7, 16, 1, 20, 614151),\n  '16:01',\n  Decimal('6.000')),\n (None,\n  datetime.datetime(2020, 10, 7, 0, 0),\n  datetime.datetime(2020, 10, 7, 15, 6, 52, 563816),\n  '15:06',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 8, 0, 0),\n  datetime.datetime(2020, 10, 8, 16, 35, 4, 280859),\n  '16:35',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 8, 0, 0),\n  datetime.datetime(2020, 10, 8, 16, 43, 44, 418267),\n  '16:43',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 8, 0, 0),\n  datetime.datetime(2020, 10, 8, 16, 49, 19, 21241),\n  '16:49',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 8, 0, 0),\n  datetime.datetime(2020, 10, 8, 17, 27, 39, 747512),\n  '17:27',\n  Decimal('40.000')),\n (None,\n  datetime.datetime(2020, 10, 8, 0, 0),\n  datetime.datetime(2020, 10, 8, 11, 42, 16, 531948),\n  '11:42',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 9, 0, 0),\n  datetime.datetime(2020, 10, 9, 16, 56, 7, 590499),\n  '16:56',\n  Decimal('9.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 9, 0, 0),\n  datetime.datetime(2020, 10, 9, 16, 46, 33, 709942),\n  '16:46',\n  Decimal('13.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 9, 0, 0),\n  datetime.datetime(2020, 10, 9, 14, 40, 35, 457079),\n  '14:40',\n  Decimal('7.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 9, 0, 0),\n  datetime.datetime(2020, 10, 9, 16, 42, 17, 86388),\n  '16:42',\n  Decimal('10.000')),\n (None,\n  datetime.datetime(2020, 10, 9, 0, 0),\n  datetime.datetime(2020, 10, 9, 12, 0, 23, 539295),\n  '12:00',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 10, 0, 0),\n  datetime.datetime(2020, 10, 10, 16, 13, 33, 171786),\n  '16:13',\n  Decimal('13.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 10, 0, 0),\n  datetime.datetime(2020, 10, 10, 12, 21, 49, 117834),\n  '12:21',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 10, 0, 0),\n  datetime.datetime(2020, 10, 10, 16, 31, 31, 869698),\n  '16:31',\n  Decimal('13.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 10, 0, 0),\n  datetime.datetime(2020, 10, 10, 15, 17, 14, 780694),\n  '15:17',\n  Decimal('8.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 10, 0, 0),\n  datetime.datetime(2020, 10, 10, 11, 54, 56, 214209),\n  '11:54',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 11, 0, 0),\n  datetime.datetime(2020, 10, 11, 9, 15, 54, 488741),\n  '09:15',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 11, 0, 0),\n  datetime.datetime(2020, 10, 11, 16, 57, 0, 160876),\n  '16:57',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 11, 0, 0),\n  datetime.datetime(2020, 10, 11, 15, 7, 48, 56406),\n  '15:07',\n  Decimal('11.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 11, 0, 0),\n  datetime.datetime(2020, 10, 11, 14, 52, 10, 947402),\n  '14:52',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 12, 0, 0),\n  datetime.datetime(2020, 10, 12, 17, 11, 44, 373182),\n  '17:11',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 12, 0, 0),\n  datetime.datetime(2020, 10, 12, 16, 33, 46, 390496),\n  '16:33',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 13, 0, 0),\n  datetime.datetime(2020, 10, 13, 15, 50, 23, 413937),\n  '15:50',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 13, 0, 0),\n  datetime.datetime(2020, 10, 13, 16, 15, 22, 863700),\n  '16:15',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 13, 0, 0),\n  datetime.datetime(2020, 10, 13, 16, 43, 26, 802815),\n  '16:43',\n  Decimal('7.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 13, 0, 0),\n  datetime.datetime(2020, 10, 13, 16, 14, 44, 556082),\n  '16:14',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 13, 0, 0),\n  datetime.datetime(2020, 10, 13, 16, 50, 15, 170229),\n  '16:50',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 14, 0, 0),\n  datetime.datetime(2020, 10, 14, 17, 51, 51, 48812),\n  '17:51',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 14, 0, 0),\n  datetime.datetime(2020, 10, 14, 16, 20, 26, 18501),\n  '16:20',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 14, 0, 0),\n  datetime.datetime(2020, 10, 14, 16, 55, 1, 169497),\n  '16:55',\n  Decimal('7.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 14, 0, 0),\n  datetime.datetime(2020, 10, 14, 9, 51, 30, 156312),\n  '09:51',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 14, 0, 0),\n  datetime.datetime(2020, 10, 14, 15, 11, 29, 168105),\n  '15:11',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 15, 0, 0),\n  datetime.datetime(2020, 10, 15, 17, 23, 48, 728635),\n  '17:23',\n  Decimal('10.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 15, 0, 0),\n  datetime.datetime(2020, 10, 15, 14, 11, 59, 375894),\n  '14:11',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 15, 0, 0),\n  datetime.datetime(2020, 10, 15, 15, 38, 7, 146250),\n  '15:38',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 15, 0, 0),\n  datetime.datetime(2020, 10, 15, 11, 56, 51, 122532),\n  '11:56',\n  Decimal('31.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 15, 0, 0),\n  datetime.datetime(2020, 10, 15, 17, 2, 12, 795843),\n  '17:02',\n  Decimal('12.000')),\n (None,\n  datetime.datetime(2020, 10, 15, 0, 0),\n  datetime.datetime(2020, 10, 15, 11, 53, 59, 925833),\n  '11:53',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 16, 0, 0),\n  datetime.datetime(2020, 10, 16, 12, 22, 16, 3248),\n  '12:22',\n  Decimal('8.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 16, 0, 0),\n  datetime.datetime(2020, 10, 16, 12, 58, 11, 198093),\n  '12:58',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 16, 0, 0),\n  datetime.datetime(2020, 10, 16, 16, 27, 40, 384824),\n  '16:27',\n  Decimal('13.000')),\n (None,\n  datetime.datetime(2020, 10, 16, 0, 0),\n  datetime.datetime(2020, 10, 16, 13, 25, 0, 423331),\n  '13:25',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 17, 0, 0),\n  datetime.datetime(2020, 10, 17, 16, 36, 46, 120933),\n  '16:36',\n  Decimal('7.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 10, 17, 0, 0),\n  datetime.datetime(2020, 10, 17, 16, 5, 45, 941254),\n  '16:05',\n  Decimal('10.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 17, 0, 0),\n  datetime.datetime(2020, 10, 17, 16, 11, 1, 687446),\n  '16:11',\n  Decimal('9.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 17, 0, 0),\n  datetime.datetime(2020, 10, 17, 16, 8, 18, 477564),\n  '16:08',\n  Decimal('9.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 17, 0, 0),\n  datetime.datetime(2020, 10, 17, 15, 50, 27, 227859),\n  '15:50',\n  Decimal('9.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 17, 0, 0),\n  datetime.datetime(2020, 10, 17, 16, 32, 19, 937765),\n  '16:32',\n  Decimal('12.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 18, 0, 0),\n  datetime.datetime(2020, 10, 18, 16, 32, 48, 373025),\n  '16:32',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 18, 0, 0),\n  datetime.datetime(2020, 10, 18, 15, 21, 50, 437517),\n  '15:21',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 18, 0, 0),\n  datetime.datetime(2020, 10, 18, 8, 56, 40, 387865),\n  '08:56',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 18, 0, 0),\n  datetime.datetime(2020, 10, 18, 15, 42, 46, 690707),\n  '15:42',\n  Decimal('9.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 18, 0, 0),\n  datetime.datetime(2020, 10, 18, 16, 10, 10, 942175),\n  '16:10',\n  Decimal('11.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 19, 0, 0),\n  datetime.datetime(2020, 10, 19, 16, 4, 44, 32515),\n  '16:04',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 19, 0, 0),\n  datetime.datetime(2020, 10, 19, 15, 7, 14, 261759),\n  '15:07',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 19, 0, 0),\n  datetime.datetime(2020, 10, 19, 16, 29, 2, 8431),\n  '16:29',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 19, 0, 0),\n  datetime.datetime(2020, 10, 19, 13, 55, 15, 4449),\n  '13:55',\n  Decimal('8.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 20, 0, 0),\n  datetime.datetime(2020, 10, 20, 16, 41, 29, 904403),\n  '16:41',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 20, 0, 0),\n  datetime.datetime(2020, 10, 20, 16, 30, 30, 551206),\n  '16:30',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 20, 0, 0),\n  datetime.datetime(2020, 10, 20, 16, 43, 11, 582059),\n  '16:43',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 20, 0, 0),\n  datetime.datetime(2020, 10, 20, 16, 6, 22, 311936),\n  '16:06',\n  Decimal('7.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 21, 0, 0),\n  datetime.datetime(2020, 10, 21, 17, 37, 50, 726594),\n  '17:37',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 21, 0, 0),\n  datetime.datetime(2020, 10, 21, 11, 18, 16, 960997),\n  '11:18',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 21, 0, 0),\n  datetime.datetime(2020, 10, 21, 14, 56, 30, 366706),\n  '14:56',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 21, 0, 0),\n  datetime.datetime(2020, 10, 21, 13, 12, 22, 69443),\n  '13:12',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 21, 0, 0),\n  datetime.datetime(2020, 10, 21, 9, 46, 17, 737514),\n  '09:46',\n  Decimal('1.000')),\n (None,\n  datetime.datetime(2020, 10, 21, 0, 0),\n  datetime.datetime(2020, 10, 21, 14, 48, 47, 891273),\n  '14:48',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 22, 0, 0),\n  datetime.datetime(2020, 10, 22, 17, 45, 49, 6026),\n  '17:45',\n  Decimal('6.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 10, 22, 0, 0),\n  datetime.datetime(2020, 10, 22, 16, 47, 4, 69535),\n  '16:47',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 22, 0, 0),\n  datetime.datetime(2020, 10, 22, 16, 15, 29, 868816),\n  '16:15',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 22, 0, 0),\n  datetime.datetime(2020, 10, 22, 8, 28, 52, 991173),\n  '08:28',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 22, 0, 0),\n  datetime.datetime(2020, 10, 22, 16, 21, 1, 290817),\n  '16:21',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 22, 0, 0),\n  datetime.datetime(2020, 10, 22, 16, 38, 53, 30440),\n  '16:38',\n  Decimal('10.000')),\n (None,\n  datetime.datetime(2020, 10, 22, 0, 0),\n  datetime.datetime(2020, 10, 22, 9, 54, 58, 165792),\n  '09:54',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 23, 0, 0),\n  datetime.datetime(2020, 10, 23, 17, 26, 30, 266883),\n  '17:26',\n  Decimal('4.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 10, 23, 0, 0),\n  datetime.datetime(2020, 10, 23, 11, 21, 48, 653918),\n  '11:21',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 23, 0, 0),\n  datetime.datetime(2020, 10, 23, 15, 39, 15, 739643),\n  '15:39',\n  Decimal('8.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 23, 0, 0),\n  datetime.datetime(2020, 10, 23, 15, 41, 3, 357892),\n  '15:41',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 23, 0, 0),\n  datetime.datetime(2020, 10, 23, 15, 21, 51, 929370),\n  '15:21',\n  Decimal('1.000')),\n (None,\n  datetime.datetime(2020, 10, 23, 0, 0),\n  datetime.datetime(2020, 10, 23, 15, 8, 43, 829061),\n  '15:08',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 24, 0, 0),\n  datetime.datetime(2020, 10, 24, 17, 17, 18, 651819),\n  '17:17',\n  Decimal('9.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 24, 0, 0),\n  datetime.datetime(2020, 10, 24, 16, 41, 52, 507764),\n  '16:41',\n  Decimal('8.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 24, 0, 0),\n  datetime.datetime(2020, 10, 24, 16, 51, 39, 934231),\n  '16:51',\n  Decimal('9.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 24, 0, 0),\n  datetime.datetime(2020, 10, 24, 16, 10, 8, 151720),\n  '16:10',\n  Decimal('15.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 24, 0, 0),\n  datetime.datetime(2020, 10, 24, 16, 23, 47, 254696),\n  '16:23',\n  Decimal('14.000')),\n (None,\n  datetime.datetime(2020, 10, 24, 0, 0),\n  datetime.datetime(2020, 10, 24, 15, 15, 53, 187353),\n  '15:15',\n  Decimal('8.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 25, 0, 0),\n  datetime.datetime(2020, 10, 25, 18, 31, 9, 120818),\n  '18:31',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 25, 0, 0),\n  datetime.datetime(2020, 10, 25, 16, 42, 50, 209931),\n  '16:42',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 25, 0, 0),\n  datetime.datetime(2020, 10, 25, 17, 2, 53, 470005),\n  '17:02',\n  Decimal('7.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 25, 0, 0),\n  datetime.datetime(2020, 10, 25, 9, 3, 32, 800207),\n  '09:03',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 25, 0, 0),\n  datetime.datetime(2020, 10, 25, 14, 47, 1, 163832),\n  '14:47',\n  Decimal('12.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 26, 0, 0),\n  datetime.datetime(2020, 10, 26, 17, 38, 41, 17482),\n  '17:38',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 26, 0, 0),\n  datetime.datetime(2020, 10, 26, 15, 31, 35, 419989),\n  '15:31',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 26, 0, 0),\n  datetime.datetime(2020, 10, 26, 17, 13, 33, 299054),\n  '17:13',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 26, 0, 0),\n  datetime.datetime(2020, 10, 26, 14, 51, 31, 346355),\n  '14:51',\n  Decimal('7.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 27, 0, 0),\n  datetime.datetime(2020, 10, 27, 18, 31, 44, 774874),\n  '18:31',\n  Decimal('13.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 27, 0, 0),\n  datetime.datetime(2020, 10, 27, 12, 55, 13, 935424),\n  '12:55',\n  Decimal('10.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 27, 0, 0),\n  datetime.datetime(2020, 10, 27, 16, 37, 7, 707623),\n  '16:37',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 27, 0, 0),\n  datetime.datetime(2020, 10, 27, 15, 37, 30, 137456),\n  '15:37',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 27, 0, 0),\n  datetime.datetime(2020, 10, 27, 17, 30, 31, 603139),\n  '17:30',\n  Decimal('12.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 28, 0, 0),\n  datetime.datetime(2020, 10, 28, 17, 54, 10, 954514),\n  '17:54',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 28, 0, 0),\n  datetime.datetime(2020, 10, 28, 15, 35, 17, 634064),\n  '15:35',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 28, 0, 0),\n  datetime.datetime(2020, 10, 28, 16, 5, 17, 871691),\n  '16:05',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 28, 0, 0),\n  datetime.datetime(2020, 10, 28, 17, 25, 44, 76655),\n  '17:25',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 29, 0, 0),\n  datetime.datetime(2020, 10, 29, 18, 19, 22, 108554),\n  '18:19',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 29, 0, 0),\n  datetime.datetime(2020, 10, 29, 17, 28, 16, 534885),\n  '17:28',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 29, 0, 0),\n  datetime.datetime(2020, 10, 29, 11, 32, 52, 422247),\n  '11:32',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 29, 0, 0),\n  datetime.datetime(2020, 10, 29, 16, 58, 13, 18537),\n  '16:58',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 29, 0, 0),\n  datetime.datetime(2020, 10, 29, 16, 4, 5, 246314),\n  '16:04',\n  Decimal('7.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 30, 0, 0),\n  datetime.datetime(2020, 10, 30, 15, 19, 38, 44819),\n  '15:19',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 30, 0, 0),\n  datetime.datetime(2020, 10, 30, 11, 54, 6, 732190),\n  '11:54',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 30, 0, 0),\n  datetime.datetime(2020, 10, 30, 16, 59, 7, 221801),\n  '16:59',\n  Decimal('11.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 30, 0, 0),\n  datetime.datetime(2020, 10, 30, 17, 28, 7, 649307),\n  '17:28',\n  Decimal('7.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 30, 0, 0),\n  datetime.datetime(2020, 10, 30, 16, 21, 56, 983357),\n  '16:21',\n  Decimal('13.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 10, 31, 0, 0),\n  datetime.datetime(2020, 10, 31, 17, 30, 5, 620244),\n  '17:30',\n  Decimal('13.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 10, 31, 0, 0),\n  datetime.datetime(2020, 10, 31, 16, 19, 47, 202923),\n  '16:19',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 10, 31, 0, 0),\n  datetime.datetime(2020, 10, 31, 17, 51, 11, 13185),\n  '17:51',\n  Decimal('18.000')),\n ('Wemmel',\n  datetime.datetime(2020, 10, 31, 0, 0),\n  datetime.datetime(2020, 10, 31, 15, 41, 41, 210184),\n  '15:41',\n  Decimal('12.000')),\n ('Woluwe',\n  datetime.datetime(2020, 10, 31, 0, 0),\n  datetime.datetime(2020, 10, 31, 17, 41, 49, 97422),\n  '17:41',\n  Decimal('12.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 1, 0, 0),\n  datetime.datetime(2020, 11, 1, 13, 30, 43, 100257),\n  '13:30',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 1, 0, 0),\n  datetime.datetime(2020, 11, 1, 15, 26, 27, 92974),\n  '15:26',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 1, 0, 0),\n  datetime.datetime(2020, 11, 1, 16, 28, 57, 176323),\n  '16:28',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 1, 0, 0),\n  datetime.datetime(2020, 11, 1, 16, 56, 3, 434574),\n  '16:56',\n  Decimal('13.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 2, 0, 0),\n  datetime.datetime(2020, 11, 2, 18, 14, 28, 555672),\n  '18:14',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 2, 0, 0),\n  datetime.datetime(2020, 11, 2, 10, 9, 14, 625749),\n  '10:09',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 2, 0, 0),\n  datetime.datetime(2020, 11, 2, 18, 3, 3, 359332),\n  '18:03',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 3, 0, 0),\n  datetime.datetime(2020, 11, 3, 16, 37, 47, 503205),\n  '16:37',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 3, 0, 0),\n  datetime.datetime(2020, 11, 3, 18, 2, 3, 290629),\n  '18:02',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 3, 0, 0),\n  datetime.datetime(2020, 11, 3, 15, 9, 33, 89153),\n  '15:09',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 3, 0, 0),\n  datetime.datetime(2020, 11, 3, 15, 26, 43, 192442),\n  '15:26',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 3, 0, 0),\n  datetime.datetime(2020, 11, 3, 17, 45, 10, 943415),\n  '17:45',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 4, 0, 0),\n  datetime.datetime(2020, 11, 4, 19, 8, 52, 544694),\n  '19:08',\n  Decimal('8.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 4, 0, 0),\n  datetime.datetime(2020, 11, 4, 17, 24, 39, 101117),\n  '17:24',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 4, 0, 0),\n  datetime.datetime(2020, 11, 4, 16, 59, 54, 984872),\n  '16:59',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 4, 0, 0),\n  datetime.datetime(2020, 11, 4, 17, 19, 23, 691145),\n  '17:19',\n  Decimal('8.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 4, 0, 0),\n  datetime.datetime(2020, 11, 4, 16, 52, 45, 319044),\n  '16:52',\n  Decimal('8.000')),\n (None,\n  datetime.datetime(2020, 11, 4, 0, 0),\n  datetime.datetime(2020, 11, 4, 17, 16, 32, 166444),\n  '17:16',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 5, 0, 0),\n  datetime.datetime(2020, 11, 5, 14, 31, 45, 914576),\n  '14:31',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 5, 0, 0),\n  datetime.datetime(2020, 11, 5, 18, 25, 29, 107032),\n  '18:25',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 5, 0, 0),\n  datetime.datetime(2020, 11, 5, 17, 17, 24, 383070),\n  '17:17',\n  Decimal('7.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 5, 0, 0),\n  datetime.datetime(2020, 11, 5, 11, 35, 23, 373362),\n  '11:35',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 6, 0, 0),\n  datetime.datetime(2020, 11, 6, 11, 55, 2, 902568),\n  '11:55',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 6, 0, 0),\n  datetime.datetime(2020, 11, 6, 12, 51, 35, 298078),\n  '12:51',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 6, 0, 0),\n  datetime.datetime(2020, 11, 6, 16, 16, 7, 747474),\n  '16:16',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 7, 0, 0),\n  datetime.datetime(2020, 11, 7, 17, 55, 20, 786794),\n  '17:55',\n  Decimal('17.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 7, 0, 0),\n  datetime.datetime(2020, 11, 7, 17, 10, 1, 891765),\n  '17:10',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 7, 0, 0),\n  datetime.datetime(2020, 11, 7, 16, 35, 3, 798616),\n  '16:35',\n  Decimal('10.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 7, 0, 0),\n  datetime.datetime(2020, 11, 7, 15, 23, 40, 206422),\n  '15:23',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 7, 0, 0),\n  datetime.datetime(2020, 11, 7, 13, 42, 47, 447249),\n  '13:42',\n  Decimal('6.000')),\n (None,\n  datetime.datetime(2020, 11, 7, 0, 0),\n  datetime.datetime(2020, 11, 7, 15, 56, 59, 838613),\n  '15:56',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 8, 0, 0),\n  datetime.datetime(2020, 11, 8, 14, 47, 16, 487875),\n  '14:47',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 8, 0, 0),\n  datetime.datetime(2020, 11, 8, 15, 4, 26, 461646),\n  '15:04',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 8, 0, 0),\n  datetime.datetime(2020, 11, 8, 14, 49, 58, 66370),\n  '14:49',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 8, 0, 0),\n  datetime.datetime(2020, 11, 8, 11, 47, 25, 321437),\n  '11:47',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 8, 0, 0),\n  datetime.datetime(2020, 11, 8, 14, 59, 54, 304414),\n  '14:59',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 9, 0, 0),\n  datetime.datetime(2020, 11, 9, 16, 35, 49, 987396),\n  '16:35',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 9, 0, 0),\n  datetime.datetime(2020, 11, 9, 14, 9, 14, 704254),\n  '14:09',\n  Decimal('7.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 9, 0, 0),\n  datetime.datetime(2020, 11, 9, 17, 9, 47, 227749),\n  '17:09',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 9, 0, 0),\n  datetime.datetime(2020, 11, 9, 17, 9, 9, 136205),\n  '17:09',\n  Decimal('6.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 10, 0, 0),\n  datetime.datetime(2020, 11, 10, 19, 7, 1, 47257),\n  '19:07',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 10, 0, 0),\n  datetime.datetime(2020, 11, 10, 16, 12, 2, 728789),\n  '16:12',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 10, 0, 0),\n  datetime.datetime(2020, 11, 10, 16, 29, 56, 909722),\n  '16:29',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 10, 0, 0),\n  datetime.datetime(2020, 11, 10, 12, 55, 1, 698496),\n  '12:55',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 10, 0, 0),\n  datetime.datetime(2020, 11, 10, 18, 0, 39, 769889),\n  '18:00',\n  Decimal('19.000')),\n (None,\n  datetime.datetime(2020, 11, 10, 0, 0),\n  datetime.datetime(2020, 11, 10, 17, 9, 48, 247442),\n  '17:09',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 11, 0, 0),\n  datetime.datetime(2020, 11, 11, 18, 0, 2, 410940),\n  '18:00',\n  Decimal('8.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 11, 0, 0),\n  datetime.datetime(2020, 11, 11, 14, 18, 23, 398505),\n  '14:18',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 11, 0, 0),\n  datetime.datetime(2020, 11, 11, 17, 11, 26, 746379),\n  '17:11',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 11, 0, 0),\n  datetime.datetime(2020, 11, 11, 17, 18, 51, 662444),\n  '17:18',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 11, 0, 0),\n  datetime.datetime(2020, 11, 11, 17, 22, 2, 500677),\n  '17:22',\n  Decimal('26.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 12, 0, 0),\n  datetime.datetime(2020, 11, 12, 16, 33, 56, 702036),\n  '16:33',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 12, 0, 0),\n  datetime.datetime(2020, 11, 12, 14, 46, 12, 652948),\n  '14:46',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 12, 0, 0),\n  datetime.datetime(2020, 11, 12, 13, 24, 22, 543084),\n  '13:24',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 12, 0, 0),\n  datetime.datetime(2020, 11, 12, 9, 4, 17, 469414),\n  '09:04',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 12, 0, 0),\n  datetime.datetime(2020, 11, 12, 16, 51, 41, 51379),\n  '16:51',\n  Decimal('13.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 13, 0, 0),\n  datetime.datetime(2020, 11, 13, 19, 8, 45, 477841),\n  '19:08',\n  Decimal('14.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 13, 0, 0),\n  datetime.datetime(2020, 11, 13, 17, 30, 5, 418085),\n  '17:30',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 13, 0, 0),\n  datetime.datetime(2020, 11, 13, 12, 25, 26, 42216),\n  '12:25',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 13, 0, 0),\n  datetime.datetime(2020, 11, 13, 18, 0, 17, 607146),\n  '18:00',\n  Decimal('13.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 14, 0, 0),\n  datetime.datetime(2020, 11, 14, 18, 20, 19, 720078),\n  '18:20',\n  Decimal('14.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 14, 0, 0),\n  datetime.datetime(2020, 11, 14, 17, 11, 35, 763950),\n  '17:11',\n  Decimal('12.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 14, 0, 0),\n  datetime.datetime(2020, 11, 14, 16, 58, 55, 992363),\n  '16:58',\n  Decimal('15.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 14, 0, 0),\n  datetime.datetime(2020, 11, 14, 17, 18, 11, 872991),\n  '17:18',\n  Decimal('14.000')),\n (None,\n  datetime.datetime(2020, 11, 14, 0, 0),\n  datetime.datetime(2020, 11, 14, 14, 44, 12, 392178),\n  '14:44',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 15, 0, 0),\n  datetime.datetime(2020, 11, 15, 15, 54, 58, 673166),\n  '15:54',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 11, 15, 0, 0),\n  datetime.datetime(2020, 11, 15, 12, 3, 48, 758899),\n  '12:03',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 15, 0, 0),\n  datetime.datetime(2020, 11, 15, 16, 48, 21, 943817),\n  '16:48',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 15, 0, 0),\n  datetime.datetime(2020, 11, 15, 18, 0, 39, 451248),\n  '18:00',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 15, 0, 0),\n  datetime.datetime(2020, 11, 15, 11, 2, 46, 519560),\n  '11:02',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 15, 0, 0),\n  datetime.datetime(2020, 11, 15, 13, 16, 46, 608150),\n  '13:16',\n  Decimal('6.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 16, 0, 0),\n  datetime.datetime(2020, 11, 16, 11, 58, 5, 659076),\n  '11:58',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 16, 0, 0),\n  datetime.datetime(2020, 11, 16, 11, 45, 14, 391604),\n  '11:45',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 16, 0, 0),\n  datetime.datetime(2020, 11, 16, 15, 20, 40, 496336),\n  '15:20',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 16, 0, 0),\n  datetime.datetime(2020, 11, 16, 12, 46, 28, 954089),\n  '12:46',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 16, 0, 0),\n  datetime.datetime(2020, 11, 16, 17, 53, 20, 911433),\n  '17:53',\n  Decimal('13.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 17, 0, 0),\n  datetime.datetime(2020, 11, 17, 17, 11, 33, 382125),\n  '17:11',\n  Decimal('9.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 17, 0, 0),\n  datetime.datetime(2020, 11, 17, 16, 16, 43, 509098),\n  '16:16',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 17, 0, 0),\n  datetime.datetime(2020, 11, 17, 12, 10, 8, 857530),\n  '12:10',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 17, 0, 0),\n  datetime.datetime(2020, 11, 17, 16, 45, 46, 914405),\n  '16:45',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 18, 0, 0),\n  datetime.datetime(2020, 11, 18, 18, 12, 35, 816909),\n  '18:12',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 18, 0, 0),\n  datetime.datetime(2020, 11, 18, 15, 58, 23, 579013),\n  '15:58',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 18, 0, 0),\n  datetime.datetime(2020, 11, 18, 17, 20, 33, 791837),\n  '17:20',\n  Decimal('13.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 18, 0, 0),\n  datetime.datetime(2020, 11, 18, 17, 7, 52, 241389),\n  '17:07',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 19, 0, 0),\n  datetime.datetime(2020, 11, 19, 15, 13, 19, 592488),\n  '15:13',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 19, 0, 0),\n  datetime.datetime(2020, 11, 19, 17, 7, 21, 499416),\n  '17:07',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 19, 0, 0),\n  datetime.datetime(2020, 11, 19, 14, 59, 42, 432827),\n  '14:59',\n  Decimal('9.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 19, 0, 0),\n  datetime.datetime(2020, 11, 19, 17, 55, 30, 937916),\n  '17:55',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 20, 0, 0),\n  datetime.datetime(2020, 11, 20, 15, 21, 4, 95001),\n  '15:21',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 20, 0, 0),\n  datetime.datetime(2020, 11, 20, 10, 58, 25, 596314),\n  '10:58',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 20, 0, 0),\n  datetime.datetime(2020, 11, 20, 18, 0, 41, 542897),\n  '18:00',\n  Decimal('7.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 20, 0, 0),\n  datetime.datetime(2020, 11, 20, 16, 58, 41, 867921),\n  '16:58',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 11, 20, 0, 0),\n  datetime.datetime(2020, 11, 20, 13, 34, 57, 452888),\n  '13:34',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 21, 0, 0),\n  datetime.datetime(2020, 11, 21, 10, 54, 20, 533064),\n  '10:54',\n  Decimal('1.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 11, 21, 0, 0),\n  datetime.datetime(2020, 11, 21, 16, 50, 17, 205042),\n  '16:50',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 21, 0, 0),\n  datetime.datetime(2020, 11, 21, 11, 6, 41, 588718),\n  '11:06',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 21, 0, 0),\n  datetime.datetime(2020, 11, 21, 17, 23, 53, 434498),\n  '17:23',\n  Decimal('9.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 21, 0, 0),\n  datetime.datetime(2020, 11, 21, 14, 42, 15, 817100),\n  '14:42',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 21, 0, 0),\n  datetime.datetime(2020, 11, 21, 17, 36, 40, 421421),\n  '17:36',\n  Decimal('15.000')),\n (None,\n  datetime.datetime(2020, 11, 21, 0, 0),\n  datetime.datetime(2020, 11, 21, 14, 11, 5, 230298),\n  '14:11',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 22, 0, 0),\n  datetime.datetime(2020, 11, 22, 17, 10, 0, 253166),\n  '17:10',\n  Decimal('9.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 22, 0, 0),\n  datetime.datetime(2020, 11, 22, 17, 56, 51, 978179),\n  '17:56',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 22, 0, 0),\n  datetime.datetime(2020, 11, 22, 17, 52, 20, 161313),\n  '17:52',\n  Decimal('12.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 22, 0, 0),\n  datetime.datetime(2020, 11, 22, 15, 28, 43, 896164),\n  '15:28',\n  Decimal('9.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 22, 0, 0),\n  datetime.datetime(2020, 11, 22, 16, 50, 6, 717026),\n  '16:50',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 23, 0, 0),\n  datetime.datetime(2020, 11, 23, 18, 38, 14, 563036),\n  '18:38',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 23, 0, 0),\n  datetime.datetime(2020, 11, 23, 17, 32, 49, 418768),\n  '17:32',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 23, 0, 0),\n  datetime.datetime(2020, 11, 23, 15, 0, 33, 467794),\n  '15:00',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 23, 0, 0),\n  datetime.datetime(2020, 11, 23, 15, 51, 18, 154326),\n  '15:51',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 23, 0, 0),\n  datetime.datetime(2020, 11, 23, 16, 42, 18, 888271),\n  '16:42',\n  Decimal('12.000')),\n (None,\n  datetime.datetime(2020, 11, 23, 0, 0),\n  datetime.datetime(2020, 11, 23, 16, 49, 48, 787282),\n  '16:49',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 24, 0, 0),\n  datetime.datetime(2020, 11, 24, 18, 40, 10, 184744),\n  '18:40',\n  Decimal('10.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 24, 0, 0),\n  datetime.datetime(2020, 11, 24, 9, 40, 16, 332357),\n  '09:40',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 24, 0, 0),\n  datetime.datetime(2020, 11, 24, 17, 11, 20, 683445),\n  '17:11',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 24, 0, 0),\n  datetime.datetime(2020, 11, 24, 17, 37, 22, 307631),\n  '17:37',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 24, 0, 0),\n  datetime.datetime(2020, 11, 24, 16, 32, 55, 132897),\n  '16:32',\n  Decimal('6.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 25, 0, 0),\n  datetime.datetime(2020, 11, 25, 14, 54, 29, 921820),\n  '14:54',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 25, 0, 0),\n  datetime.datetime(2020, 11, 25, 17, 34, 2, 929822),\n  '17:34',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 25, 0, 0),\n  datetime.datetime(2020, 11, 25, 13, 50, 23, 181562),\n  '13:50',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 25, 0, 0),\n  datetime.datetime(2020, 11, 25, 14, 0, 44, 423237),\n  '14:00',\n  Decimal('10.000')),\n (None,\n  datetime.datetime(2020, 11, 25, 0, 0),\n  datetime.datetime(2020, 11, 25, 10, 28, 11, 837864),\n  '10:28',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 26, 0, 0),\n  datetime.datetime(2020, 11, 26, 16, 12, 26, 883428),\n  '16:12',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 26, 0, 0),\n  datetime.datetime(2020, 11, 26, 16, 31, 8, 691198),\n  '16:31',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 26, 0, 0),\n  datetime.datetime(2020, 11, 26, 15, 51, 47, 718683),\n  '15:51',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 11, 26, 0, 0),\n  datetime.datetime(2020, 11, 26, 16, 34, 4, 153313),\n  '16:34',\n  Decimal('1.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 27, 0, 0),\n  datetime.datetime(2020, 11, 27, 18, 0, 20, 41194),\n  '18:00',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 27, 0, 0),\n  datetime.datetime(2020, 11, 27, 12, 30, 57, 618924),\n  '12:30',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 27, 0, 0),\n  datetime.datetime(2020, 11, 27, 15, 40, 6, 226932),\n  '15:40',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 27, 0, 0),\n  datetime.datetime(2020, 11, 27, 17, 47, 0, 37789),\n  '17:47',\n  Decimal('13.000')),\n (None,\n  datetime.datetime(2020, 11, 27, 0, 0),\n  datetime.datetime(2020, 11, 27, 9, 54, 56, 960988),\n  '09:54',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 28, 0, 0),\n  datetime.datetime(2020, 11, 28, 18, 32, 29, 542086),\n  '18:32',\n  Decimal('16.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 11, 28, 0, 0),\n  datetime.datetime(2020, 11, 28, 17, 5, 45, 994151),\n  '17:05',\n  Decimal('9.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 28, 0, 0),\n  datetime.datetime(2020, 11, 28, 17, 49, 20, 445971),\n  '17:49',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 28, 0, 0),\n  datetime.datetime(2020, 11, 28, 16, 48, 58, 917226),\n  '16:48',\n  Decimal('8.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 28, 0, 0),\n  datetime.datetime(2020, 11, 28, 16, 55, 45, 910362),\n  '16:55',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 28, 0, 0),\n  datetime.datetime(2020, 11, 28, 17, 21, 26, 953788),\n  '17:21',\n  Decimal('15.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 11, 29, 0, 0),\n  datetime.datetime(2020, 11, 29, 16, 21, 23, 468025),\n  '16:21',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 11, 29, 0, 0),\n  datetime.datetime(2020, 11, 29, 13, 15, 12, 849511),\n  '13:15',\n  Decimal('8.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 29, 0, 0),\n  datetime.datetime(2020, 11, 29, 17, 36, 36, 831431),\n  '17:36',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 29, 0, 0),\n  datetime.datetime(2020, 11, 29, 15, 44, 26, 904378),\n  '15:44',\n  Decimal('8.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 29, 0, 0),\n  datetime.datetime(2020, 11, 29, 16, 3, 33, 53324),\n  '16:03',\n  Decimal('8.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 29, 0, 0),\n  datetime.datetime(2020, 11, 29, 14, 27, 4, 975760),\n  '14:27',\n  Decimal('7.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 11, 30, 0, 0),\n  datetime.datetime(2020, 11, 30, 17, 58, 42, 879607),\n  '17:58',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 11, 30, 0, 0),\n  datetime.datetime(2020, 11, 30, 16, 3, 37, 423278),\n  '16:03',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 11, 30, 0, 0),\n  datetime.datetime(2020, 11, 30, 17, 54, 21, 512858),\n  '17:54',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 11, 30, 0, 0),\n  datetime.datetime(2020, 11, 30, 14, 48, 54, 251711),\n  '14:48',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 11, 30, 0, 0),\n  datetime.datetime(2020, 11, 30, 17, 58, 55, 638718),\n  '17:58',\n  Decimal('7.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 1, 0, 0),\n  datetime.datetime(2020, 12, 1, 17, 59, 34, 109329),\n  '17:59',\n  Decimal('6.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 1, 0, 0),\n  datetime.datetime(2020, 12, 1, 15, 16, 59, 230734),\n  '15:16',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 1, 0, 0),\n  datetime.datetime(2020, 12, 1, 18, 15, 16, 969208),\n  '18:15',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 1, 0, 0),\n  datetime.datetime(2020, 12, 1, 17, 20, 36, 251858),\n  '17:20',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 1, 0, 0),\n  datetime.datetime(2020, 12, 1, 16, 57, 12, 202097),\n  '16:57',\n  Decimal('9.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 1, 0, 0),\n  datetime.datetime(2020, 12, 1, 15, 41, 4, 121885),\n  '15:41',\n  Decimal('7.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 2, 0, 0),\n  datetime.datetime(2020, 12, 2, 18, 23, 51, 765468),\n  '18:23',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 2, 0, 0),\n  datetime.datetime(2020, 12, 2, 13, 6, 48, 685013),\n  '13:06',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 2, 0, 0),\n  datetime.datetime(2020, 12, 2, 17, 19, 35, 385359),\n  '17:19',\n  Decimal('7.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 2, 0, 0),\n  datetime.datetime(2020, 12, 2, 17, 23, 34, 272004),\n  '17:23',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 2, 0, 0),\n  datetime.datetime(2020, 12, 2, 15, 37, 30, 9242),\n  '15:37',\n  Decimal('8.000')),\n (None,\n  datetime.datetime(2020, 12, 2, 0, 0),\n  datetime.datetime(2020, 12, 2, 9, 57, 6, 895439),\n  '09:57',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 3, 0, 0),\n  datetime.datetime(2020, 12, 3, 17, 15, 42, 186565),\n  '17:15',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 3, 0, 0),\n  datetime.datetime(2020, 12, 3, 16, 57, 28, 373656),\n  '16:57',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 3, 0, 0),\n  datetime.datetime(2020, 12, 3, 15, 16, 26, 77424),\n  '15:16',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 3, 0, 0),\n  datetime.datetime(2020, 12, 3, 17, 26, 9, 448827),\n  '17:26',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 3, 0, 0),\n  datetime.datetime(2020, 12, 3, 16, 22, 48, 346697),\n  '16:22',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 3, 0, 0),\n  datetime.datetime(2020, 12, 3, 17, 59, 30, 346911),\n  '17:59',\n  Decimal('15.000')),\n (None,\n  datetime.datetime(2020, 12, 3, 0, 0),\n  datetime.datetime(2020, 12, 3, 10, 33, 48, 440962),\n  '10:33',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 4, 0, 0),\n  datetime.datetime(2020, 12, 4, 18, 46, 8, 746287),\n  '18:46',\n  Decimal('7.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 4, 0, 0),\n  datetime.datetime(2020, 12, 4, 17, 44, 53, 610545),\n  '17:44',\n  Decimal('12.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 4, 0, 0),\n  datetime.datetime(2020, 12, 4, 16, 41, 36, 153573),\n  '16:41',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 4, 0, 0),\n  datetime.datetime(2020, 12, 4, 16, 18, 6, 140713),\n  '16:18',\n  Decimal('9.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 4, 0, 0),\n  datetime.datetime(2020, 12, 4, 17, 39, 33, 689347),\n  '17:39',\n  Decimal('22.000')),\n (None,\n  datetime.datetime(2020, 12, 4, 0, 0),\n  datetime.datetime(2020, 12, 4, 15, 51, 50, 717522),\n  '15:51',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 5, 0, 0),\n  datetime.datetime(2020, 12, 5, 15, 46, 23, 977682),\n  '15:46',\n  Decimal('13.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 5, 0, 0),\n  datetime.datetime(2020, 12, 5, 17, 27, 26, 928664),\n  '17:27',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 5, 0, 0),\n  datetime.datetime(2020, 12, 5, 17, 45, 31, 656886),\n  '17:45',\n  Decimal('11.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 5, 0, 0),\n  datetime.datetime(2020, 12, 5, 15, 23, 51, 42642),\n  '15:23',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 5, 0, 0),\n  datetime.datetime(2020, 12, 5, 12, 48, 55, 102295),\n  '12:48',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 5, 0, 0),\n  datetime.datetime(2020, 12, 5, 17, 13, 6, 871750),\n  '17:13',\n  Decimal('10.000')),\n (None,\n  datetime.datetime(2020, 12, 5, 0, 0),\n  datetime.datetime(2020, 12, 5, 11, 24, 0, 537426),\n  '11:24',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 6, 0, 0),\n  datetime.datetime(2020, 12, 6, 17, 44, 1, 488061),\n  '17:44',\n  Decimal('7.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 6, 0, 0),\n  datetime.datetime(2020, 12, 6, 11, 6, 7, 744576),\n  '11:06',\n  Decimal('1.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 6, 0, 0),\n  datetime.datetime(2020, 12, 6, 17, 36, 45, 146428),\n  '17:36',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 6, 0, 0),\n  datetime.datetime(2020, 12, 6, 15, 41, 43, 776566),\n  '15:41',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 6, 0, 0),\n  datetime.datetime(2020, 12, 6, 11, 4, 57, 687486),\n  '11:04',\n  Decimal('7.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 6, 0, 0),\n  datetime.datetime(2020, 12, 6, 12, 22, 8, 214745),\n  '12:22',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 7, 0, 0),\n  datetime.datetime(2020, 12, 7, 17, 11, 35, 628618),\n  '17:11',\n  Decimal('7.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 7, 0, 0),\n  datetime.datetime(2020, 12, 7, 14, 51, 16, 741940),\n  '14:51',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 7, 0, 0),\n  datetime.datetime(2020, 12, 7, 17, 51, 53, 945468),\n  '17:51',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 7, 0, 0),\n  datetime.datetime(2020, 12, 7, 16, 43, 55, 459092),\n  '16:43',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 7, 0, 0),\n  datetime.datetime(2020, 12, 7, 17, 43, 27, 158193),\n  '17:43',\n  Decimal('8.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 7, 0, 0),\n  datetime.datetime(2020, 12, 7, 16, 0, 35, 853827),\n  '16:00',\n  Decimal('4.000')),\n (None,\n  datetime.datetime(2020, 12, 7, 0, 0),\n  datetime.datetime(2020, 12, 7, 9, 39, 23, 522194),\n  '09:39',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 8, 0, 0),\n  datetime.datetime(2020, 12, 8, 18, 35, 21, 25700),\n  '18:35',\n  Decimal('7.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 8, 0, 0),\n  datetime.datetime(2020, 12, 8, 17, 53, 5, 840897),\n  '17:53',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 8, 0, 0),\n  datetime.datetime(2020, 12, 8, 18, 12, 53, 249689),\n  '18:12',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 8, 0, 0),\n  datetime.datetime(2020, 12, 8, 18, 3, 11, 332266),\n  '18:03',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 8, 0, 0),\n  datetime.datetime(2020, 12, 8, 17, 53, 37, 983404),\n  '17:53',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 8, 0, 0),\n  datetime.datetime(2020, 12, 8, 11, 24, 27, 51925),\n  '11:24',\n  Decimal('3.000')),\n (None,\n  datetime.datetime(2020, 12, 8, 0, 0),\n  datetime.datetime(2020, 12, 8, 14, 0, 35, 70737),\n  '14:00',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 9, 0, 0),\n  datetime.datetime(2020, 12, 9, 19, 26, 4, 974617),\n  '19:26',\n  Decimal('12.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 9, 0, 0),\n  datetime.datetime(2020, 12, 9, 17, 6, 20, 168455),\n  '17:06',\n  Decimal('9.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 9, 0, 0),\n  datetime.datetime(2020, 12, 9, 17, 37, 46, 309573),\n  '17:37',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 9, 0, 0),\n  datetime.datetime(2020, 12, 9, 14, 59, 18, 929825),\n  '14:59',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 9, 0, 0),\n  datetime.datetime(2020, 12, 9, 15, 49, 24, 1873),\n  '15:49',\n  Decimal('9.000')),\n (None,\n  datetime.datetime(2020, 12, 9, 0, 0),\n  datetime.datetime(2020, 12, 9, 16, 26, 16, 802665),\n  '16:26',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 10, 0, 0),\n  datetime.datetime(2020, 12, 10, 17, 38, 51, 599999),\n  '17:38',\n  Decimal('4.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 10, 0, 0),\n  datetime.datetime(2020, 12, 10, 14, 14, 32, 434719),\n  '14:14',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 10, 0, 0),\n  datetime.datetime(2020, 12, 10, 13, 46, 12, 213890),\n  '13:46',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 10, 0, 0),\n  datetime.datetime(2020, 12, 10, 17, 4, 39, 167920),\n  '17:04',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 10, 0, 0),\n  datetime.datetime(2020, 12, 10, 12, 13, 50, 510898),\n  '12:13',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 10, 0, 0),\n  datetime.datetime(2020, 12, 10, 13, 58, 36, 228700),\n  '13:58',\n  Decimal('2.000')),\n (None,\n  datetime.datetime(2020, 12, 10, 0, 0),\n  datetime.datetime(2020, 12, 10, 15, 58, 49, 894809),\n  '15:58',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 11, 0, 0),\n  datetime.datetime(2020, 12, 11, 15, 12, 2, 492552),\n  '15:12',\n  Decimal('7.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 11, 0, 0),\n  datetime.datetime(2020, 12, 11, 12, 49, 43, 59237),\n  '12:49',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 11, 0, 0),\n  datetime.datetime(2020, 12, 11, 17, 47, 11, 665614),\n  '17:47',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 11, 0, 0),\n  datetime.datetime(2020, 12, 11, 17, 7, 13, 912473),\n  '17:07',\n  Decimal('7.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 11, 0, 0),\n  datetime.datetime(2020, 12, 11, 17, 59, 41, 374663),\n  '17:59',\n  Decimal('12.000')),\n (None,\n  datetime.datetime(2020, 12, 11, 0, 0),\n  datetime.datetime(2020, 12, 11, 16, 31, 9, 738867),\n  '16:31',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 12, 0, 0),\n  datetime.datetime(2020, 12, 12, 17, 2, 46, 701850),\n  '17:02',\n  Decimal('14.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 12, 0, 0),\n  datetime.datetime(2020, 12, 12, 17, 35, 0, 368988),\n  '17:35',\n  Decimal('13.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 12, 0, 0),\n  datetime.datetime(2020, 12, 12, 17, 32, 26, 536747),\n  '17:32',\n  Decimal('16.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 12, 0, 0),\n  datetime.datetime(2020, 12, 12, 15, 26, 13, 106233),\n  '15:26',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 12, 0, 0),\n  datetime.datetime(2020, 12, 12, 16, 52, 7, 106471),\n  '16:52',\n  Decimal('8.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 12, 0, 0),\n  datetime.datetime(2020, 12, 12, 15, 34, 40, 32603),\n  '15:34',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 12, 12, 0, 0),\n  datetime.datetime(2020, 12, 12, 16, 28, 8, 370505),\n  '16:28',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 13, 0, 0),\n  datetime.datetime(2020, 12, 13, 19, 2, 15, 226356),\n  '19:02',\n  Decimal('9.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 13, 0, 0),\n  datetime.datetime(2020, 12, 13, 11, 59, 21, 504876),\n  '11:59',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 13, 0, 0),\n  datetime.datetime(2020, 12, 13, 15, 28, 36, 641649),\n  '15:28',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 13, 0, 0),\n  datetime.datetime(2020, 12, 13, 17, 19, 48, 628797),\n  '17:19',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 13, 0, 0),\n  datetime.datetime(2020, 12, 13, 17, 43, 52, 552116),\n  '17:43',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 13, 0, 0),\n  datetime.datetime(2020, 12, 13, 16, 52, 26, 571018),\n  '16:52',\n  Decimal('10.000')),\n (None,\n  datetime.datetime(2020, 12, 13, 0, 0),\n  datetime.datetime(2020, 12, 13, 14, 54, 22, 966921),\n  '14:54',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 14, 0, 0),\n  datetime.datetime(2020, 12, 14, 10, 47, 11, 194319),\n  '10:47',\n  Decimal('1.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 14, 0, 0),\n  datetime.datetime(2020, 12, 14, 17, 54, 32, 211877),\n  '17:54',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 14, 0, 0),\n  datetime.datetime(2020, 12, 14, 17, 32, 21, 886877),\n  '17:32',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 14, 0, 0),\n  datetime.datetime(2020, 12, 14, 17, 44, 15, 228937),\n  '17:44',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 14, 0, 0),\n  datetime.datetime(2020, 12, 14, 15, 45, 32, 743470),\n  '15:45',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 12, 14, 0, 0),\n  datetime.datetime(2020, 12, 14, 15, 1, 34, 741367),\n  '15:01',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 15, 0, 0),\n  datetime.datetime(2020, 12, 15, 18, 15, 15, 441336),\n  '18:15',\n  Decimal('11.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 15, 0, 0),\n  datetime.datetime(2020, 12, 15, 14, 21, 49, 568840),\n  '14:21',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 15, 0, 0),\n  datetime.datetime(2020, 12, 15, 17, 57, 17, 482181),\n  '17:57',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 15, 0, 0),\n  datetime.datetime(2020, 12, 15, 16, 22, 40, 123854),\n  '16:22',\n  Decimal('7.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 15, 0, 0),\n  datetime.datetime(2020, 12, 15, 17, 50, 51, 970254),\n  '17:50',\n  Decimal('9.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 15, 0, 0),\n  datetime.datetime(2020, 12, 15, 16, 18, 49, 140287),\n  '16:18',\n  Decimal('10.000')),\n (None,\n  datetime.datetime(2020, 12, 15, 0, 0),\n  datetime.datetime(2020, 12, 15, 12, 53, 26, 262065),\n  '12:53',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 16, 0, 0),\n  datetime.datetime(2020, 12, 16, 16, 58, 52, 538046),\n  '16:58',\n  Decimal('3.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 16, 0, 0),\n  datetime.datetime(2020, 12, 16, 16, 17, 27, 129403),\n  '16:17',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 16, 0, 0),\n  datetime.datetime(2020, 12, 16, 18, 9, 24, 681691),\n  '18:09',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 16, 0, 0),\n  datetime.datetime(2020, 12, 16, 17, 29, 39, 812464),\n  '17:29',\n  Decimal('12.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 16, 0, 0),\n  datetime.datetime(2020, 12, 16, 13, 14, 38, 900058),\n  '13:14',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 16, 0, 0),\n  datetime.datetime(2020, 12, 16, 17, 5, 53, 155261),\n  '17:05',\n  Decimal('8.000')),\n (None,\n  datetime.datetime(2020, 12, 16, 0, 0),\n  datetime.datetime(2020, 12, 16, 17, 5, 28, 215359),\n  '17:05',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 17, 0, 0),\n  datetime.datetime(2020, 12, 17, 18, 28, 36, 855901),\n  '18:28',\n  Decimal('7.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 17, 0, 0),\n  datetime.datetime(2020, 12, 17, 15, 42, 44, 535627),\n  '15:42',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 17, 0, 0),\n  datetime.datetime(2020, 12, 17, 15, 51, 40, 17008),\n  '15:51',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 17, 0, 0),\n  datetime.datetime(2020, 12, 17, 9, 30, 26, 185720),\n  '09:30',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 17, 0, 0),\n  datetime.datetime(2020, 12, 17, 17, 59, 19, 371852),\n  '17:59',\n  Decimal('5.000')),\n (None,\n  datetime.datetime(2020, 12, 17, 0, 0),\n  datetime.datetime(2020, 12, 17, 13, 43, 2, 379490),\n  '13:43',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 18, 0, 0),\n  datetime.datetime(2020, 12, 18, 17, 42, 32, 268001),\n  '17:42',\n  Decimal('9.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 18, 0, 0),\n  datetime.datetime(2020, 12, 18, 18, 17, 41, 213903),\n  '18:17',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 18, 0, 0),\n  datetime.datetime(2020, 12, 18, 17, 51, 49, 394109),\n  '17:51',\n  Decimal('17.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 19, 0, 0),\n  datetime.datetime(2020, 12, 19, 17, 30, 26, 395033),\n  '17:30',\n  Decimal('11.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 19, 0, 0),\n  datetime.datetime(2020, 12, 19, 16, 53, 6, 478554),\n  '16:53',\n  Decimal('11.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 19, 0, 0),\n  datetime.datetime(2020, 12, 19, 16, 43, 42, 175733),\n  '16:43',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 19, 0, 0),\n  datetime.datetime(2020, 12, 19, 16, 42, 16, 541034),\n  '16:42',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 19, 0, 0),\n  datetime.datetime(2020, 12, 19, 17, 0, 33, 157398),\n  '17:00',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 19, 0, 0),\n  datetime.datetime(2020, 12, 19, 17, 0, 43, 249673),\n  '17:00',\n  Decimal('13.000')),\n (None,\n  datetime.datetime(2020, 12, 19, 0, 0),\n  datetime.datetime(2020, 12, 19, 16, 47, 20, 615209),\n  '16:47',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 20, 0, 0),\n  datetime.datetime(2020, 12, 20, 19, 1, 34, 30533),\n  '19:01',\n  Decimal('6.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 20, 0, 0),\n  datetime.datetime(2020, 12, 20, 10, 51, 6, 616605),\n  '10:51',\n  Decimal('1.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 20, 0, 0),\n  datetime.datetime(2020, 12, 20, 15, 10, 10, 73068),\n  '15:10',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 20, 0, 0),\n  datetime.datetime(2020, 12, 20, 15, 29, 28, 542788),\n  '15:29',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 20, 0, 0),\n  datetime.datetime(2020, 12, 20, 15, 58, 32, 655718),\n  '15:58',\n  Decimal('10.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 20, 0, 0),\n  datetime.datetime(2020, 12, 20, 17, 45, 59, 553881),\n  '17:45',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 12, 20, 0, 0),\n  datetime.datetime(2020, 12, 20, 13, 58, 2, 761825),\n  '13:58',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 21, 0, 0),\n  datetime.datetime(2020, 12, 21, 11, 37, 30, 595354),\n  '11:37',\n  Decimal('1.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 21, 0, 0),\n  datetime.datetime(2020, 12, 21, 16, 3, 37, 204461),\n  '16:03',\n  Decimal('8.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 21, 0, 0),\n  datetime.datetime(2020, 12, 21, 18, 38, 56, 332961),\n  '18:38',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 21, 0, 0),\n  datetime.datetime(2020, 12, 21, 16, 45, 12, 988754),\n  '16:45',\n  Decimal('11.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 21, 0, 0),\n  datetime.datetime(2020, 12, 21, 16, 33, 12, 530264),\n  '16:33',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 21, 0, 0),\n  datetime.datetime(2020, 12, 21, 16, 44, 50, 891684),\n  '16:44',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 22, 0, 0),\n  datetime.datetime(2020, 12, 22, 17, 40, 26, 809277),\n  '17:40',\n  Decimal('10.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 22, 0, 0),\n  datetime.datetime(2020, 12, 22, 16, 47, 45, 151205),\n  '16:47',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 22, 0, 0),\n  datetime.datetime(2020, 12, 22, 15, 49, 26, 449812),\n  '15:49',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 22, 0, 0),\n  datetime.datetime(2020, 12, 22, 16, 12, 1, 331221),\n  '16:12',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 22, 0, 0),\n  datetime.datetime(2020, 12, 22, 16, 21, 54, 244471),\n  '16:21',\n  Decimal('12.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 22, 0, 0),\n  datetime.datetime(2020, 12, 22, 13, 25, 30, 646728),\n  '13:25',\n  Decimal('6.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 23, 0, 0),\n  datetime.datetime(2020, 12, 23, 17, 18, 48, 515211),\n  '17:18',\n  Decimal('6.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 23, 0, 0),\n  datetime.datetime(2020, 12, 23, 17, 43, 30, 597448),\n  '17:43',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 23, 0, 0),\n  datetime.datetime(2020, 12, 23, 17, 53, 17, 475991),\n  '17:53',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 23, 0, 0),\n  datetime.datetime(2020, 12, 23, 17, 5, 27, 379335),\n  '17:05',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 23, 0, 0),\n  datetime.datetime(2020, 12, 23, 16, 50, 23, 923754),\n  '16:50',\n  Decimal('9.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 23, 0, 0),\n  datetime.datetime(2020, 12, 23, 17, 26, 10, 133127),\n  '17:26',\n  Decimal('20.000')),\n (None,\n  datetime.datetime(2020, 12, 23, 0, 0),\n  datetime.datetime(2020, 12, 23, 12, 48, 51, 283547),\n  '12:48',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 24, 0, 0),\n  datetime.datetime(2020, 12, 24, 17, 41, 22, 208124),\n  '17:41',\n  Decimal('14.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 24, 0, 0),\n  datetime.datetime(2020, 12, 24, 15, 31, 19, 739503),\n  '15:31',\n  Decimal('14.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 24, 0, 0),\n  datetime.datetime(2020, 12, 24, 17, 12, 44, 6395),\n  '17:12',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 24, 0, 0),\n  datetime.datetime(2020, 12, 24, 9, 5, 39, 501394),\n  '09:05',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 24, 0, 0),\n  datetime.datetime(2020, 12, 24, 12, 32, 12, 328212),\n  '12:32',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 24, 0, 0),\n  datetime.datetime(2020, 12, 24, 17, 13, 35, 799348),\n  '17:13',\n  Decimal('10.000')),\n (None,\n  datetime.datetime(2020, 12, 24, 0, 0),\n  datetime.datetime(2020, 12, 24, 15, 37, 56, 900083),\n  '15:37',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 26, 0, 0),\n  datetime.datetime(2020, 12, 26, 12, 55, 7, 314641),\n  '12:55',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 26, 0, 0),\n  datetime.datetime(2020, 12, 26, 11, 8, 24, 324193),\n  '11:08',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 26, 0, 0),\n  datetime.datetime(2020, 12, 26, 16, 33, 27, 344551),\n  '16:33',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 26, 0, 0),\n  datetime.datetime(2020, 12, 26, 13, 9, 40, 441996),\n  '13:09',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 26, 0, 0),\n  datetime.datetime(2020, 12, 26, 15, 13, 36, 789368),\n  '15:13',\n  Decimal('3.000')),\n (None,\n  datetime.datetime(2020, 12, 26, 0, 0),\n  datetime.datetime(2020, 12, 26, 16, 26, 18, 304536),\n  '16:26',\n  Decimal('1.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 27, 0, 0),\n  datetime.datetime(2020, 12, 27, 10, 43, 48, 417482),\n  '10:43',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 27, 0, 0),\n  datetime.datetime(2020, 12, 27, 13, 47, 4, 790528),\n  '13:47',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 27, 0, 0),\n  datetime.datetime(2020, 12, 27, 17, 44, 21, 442092),\n  '17:44',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2020, 12, 27, 0, 0),\n  datetime.datetime(2020, 12, 27, 10, 2, 16, 176335),\n  '10:02',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 28, 0, 0),\n  datetime.datetime(2020, 12, 28, 15, 31, 0, 296191),\n  '15:31',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 28, 0, 0),\n  datetime.datetime(2020, 12, 28, 17, 11, 3, 261429),\n  '17:11',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 28, 0, 0),\n  datetime.datetime(2020, 12, 28, 16, 46, 48, 400699),\n  '16:46',\n  Decimal('12.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 28, 0, 0),\n  datetime.datetime(2020, 12, 28, 15, 48, 48, 933460),\n  '15:48',\n  Decimal('14.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 29, 0, 0),\n  datetime.datetime(2020, 12, 29, 16, 30, 45, 117241),\n  '16:30',\n  Decimal('10.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 29, 0, 0),\n  datetime.datetime(2020, 12, 29, 17, 33, 56, 323305),\n  '17:33',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 29, 0, 0),\n  datetime.datetime(2020, 12, 29, 17, 9, 27, 333933),\n  '17:09',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 29, 0, 0),\n  datetime.datetime(2020, 12, 29, 16, 2, 48, 383057),\n  '16:02',\n  Decimal('7.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 29, 0, 0),\n  datetime.datetime(2020, 12, 29, 16, 38, 55, 74775),\n  '16:38',\n  Decimal('10.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 29, 0, 0),\n  datetime.datetime(2020, 12, 29, 17, 38, 5, 87378),\n  '17:38',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 30, 0, 0),\n  datetime.datetime(2020, 12, 30, 15, 39, 21, 628206),\n  '15:39',\n  Decimal('5.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 30, 0, 0),\n  datetime.datetime(2020, 12, 30, 16, 50, 30, 592768),\n  '16:50',\n  Decimal('9.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 30, 0, 0),\n  datetime.datetime(2020, 12, 30, 16, 4, 31, 766290),\n  '16:04',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 30, 0, 0),\n  datetime.datetime(2020, 12, 30, 15, 38, 38, 796234),\n  '15:38',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 30, 0, 0),\n  datetime.datetime(2020, 12, 30, 14, 51, 56, 626022),\n  '14:51',\n  Decimal('11.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 30, 0, 0),\n  datetime.datetime(2020, 12, 30, 17, 25, 33, 544600),\n  '17:25',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2020, 12, 31, 0, 0),\n  datetime.datetime(2020, 12, 31, 18, 32, 46, 190344),\n  '18:32',\n  Decimal('17.000')),\n ('Fort Jaco',\n  datetime.datetime(2020, 12, 31, 0, 0),\n  datetime.datetime(2020, 12, 31, 17, 14, 17, 456638),\n  '17:14',\n  Decimal('12.000')),\n ('La Hulpe',\n  datetime.datetime(2020, 12, 31, 0, 0),\n  datetime.datetime(2020, 12, 31, 17, 18, 35, 519264),\n  '17:18',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2020, 12, 31, 0, 0),\n  datetime.datetime(2020, 12, 31, 16, 9, 32, 619935),\n  '16:09',\n  Decimal('15.000')),\n ('Wemmel',\n  datetime.datetime(2020, 12, 31, 0, 0),\n  datetime.datetime(2020, 12, 31, 14, 51, 18, 190336),\n  '14:51',\n  Decimal('8.000')),\n ('Woluwe',\n  datetime.datetime(2020, 12, 31, 0, 0),\n  datetime.datetime(2020, 12, 31, 14, 2, 12, 298055),\n  '14:02',\n  Decimal('16.000')),\n (None,\n  datetime.datetime(2020, 12, 31, 0, 0),\n  datetime.datetime(2020, 12, 31, 15, 44, 19, 109922),\n  '15:44',\n  Decimal('6.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 2, 0, 0),\n  datetime.datetime(2021, 1, 2, 11, 43, 12, 221614),\n  '11:43',\n  Decimal('1.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 2, 0, 0),\n  datetime.datetime(2021, 1, 2, 13, 10, 26, 254094),\n  '13:10',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 2, 0, 0),\n  datetime.datetime(2021, 1, 2, 17, 39, 45, 662625),\n  '17:39',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 2, 0, 0),\n  datetime.datetime(2021, 1, 2, 16, 38, 36, 988302),\n  '16:38',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 3, 0, 0),\n  datetime.datetime(2021, 1, 3, 10, 36, 49, 824333),\n  '10:36',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 3, 0, 0),\n  datetime.datetime(2021, 1, 3, 12, 4, 54, 821794),\n  '12:04',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 4, 0, 0),\n  datetime.datetime(2021, 1, 4, 12, 19, 13, 666681),\n  '12:19',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 4, 0, 0),\n  datetime.datetime(2021, 1, 4, 17, 32, 32, 235777),\n  '17:32',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 5, 0, 0),\n  datetime.datetime(2021, 1, 5, 16, 22, 3, 579177),\n  '16:22',\n  Decimal('5.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 5, 0, 0),\n  datetime.datetime(2021, 1, 5, 16, 55, 20, 39194),\n  '16:55',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 5, 0, 0),\n  datetime.datetime(2021, 1, 5, 11, 35, 44, 291701),\n  '11:35',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 5, 0, 0),\n  datetime.datetime(2021, 1, 5, 16, 36, 18, 578776),\n  '16:36',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 5, 0, 0),\n  datetime.datetime(2021, 1, 5, 17, 39, 4, 546704),\n  '17:39',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 6, 0, 0),\n  datetime.datetime(2021, 1, 6, 17, 13, 35, 439363),\n  '17:13',\n  Decimal('3.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 6, 0, 0),\n  datetime.datetime(2021, 1, 6, 17, 51, 5, 79800),\n  '17:51',\n  Decimal('8.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 6, 0, 0),\n  datetime.datetime(2021, 1, 6, 17, 15, 32, 952336),\n  '17:15',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 6, 0, 0),\n  datetime.datetime(2021, 1, 6, 17, 42, 44, 143612),\n  '17:42',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 6, 0, 0),\n  datetime.datetime(2021, 1, 6, 11, 15, 3, 679656),\n  '11:15',\n  Decimal('6.000')),\n (None,\n  datetime.datetime(2021, 1, 6, 0, 0),\n  datetime.datetime(2021, 1, 6, 12, 25, 31, 719355),\n  '12:25',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 7, 0, 0),\n  datetime.datetime(2021, 1, 7, 18, 39, 10, 390560),\n  '18:39',\n  Decimal('10.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 7, 0, 0),\n  datetime.datetime(2021, 1, 7, 16, 18, 49, 184651),\n  '16:18',\n  Decimal('8.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 7, 0, 0),\n  datetime.datetime(2021, 1, 7, 14, 44, 6, 274930),\n  '14:44',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 7, 0, 0),\n  datetime.datetime(2021, 1, 7, 17, 8, 32, 369416),\n  '17:08',\n  Decimal('3.000')),\n (None,\n  datetime.datetime(2021, 1, 7, 0, 0),\n  datetime.datetime(2021, 1, 7, 14, 20, 36, 245501),\n  '14:20',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 8, 0, 0),\n  datetime.datetime(2021, 1, 8, 16, 44, 43, 879718),\n  '16:44',\n  Decimal('4.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 8, 0, 0),\n  datetime.datetime(2021, 1, 8, 16, 44, 27, 263416),\n  '16:44',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 8, 0, 0),\n  datetime.datetime(2021, 1, 8, 18, 13, 37, 485072),\n  '18:13',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 8, 0, 0),\n  datetime.datetime(2021, 1, 8, 17, 32, 47, 981498),\n  '17:32',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 8, 0, 0),\n  datetime.datetime(2021, 1, 8, 17, 10, 26, 738780),\n  '17:10',\n  Decimal('10.000')),\n (None,\n  datetime.datetime(2021, 1, 8, 0, 0),\n  datetime.datetime(2021, 1, 8, 14, 2, 26, 945808),\n  '14:02',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 9, 0, 0),\n  datetime.datetime(2021, 1, 9, 18, 47, 28, 176658),\n  '18:47',\n  Decimal('13.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 9, 0, 0),\n  datetime.datetime(2021, 1, 9, 17, 20, 55, 618020),\n  '17:20',\n  Decimal('10.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 9, 0, 0),\n  datetime.datetime(2021, 1, 9, 16, 4, 31, 158871),\n  '16:04',\n  Decimal('13.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 9, 0, 0),\n  datetime.datetime(2021, 1, 9, 17, 1, 47, 788229),\n  '17:01',\n  Decimal('10.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 9, 0, 0),\n  datetime.datetime(2021, 1, 9, 17, 31, 44, 737039),\n  '17:31',\n  Decimal('8.000')),\n (None,\n  datetime.datetime(2021, 1, 9, 0, 0),\n  datetime.datetime(2021, 1, 9, 16, 43, 38, 469185),\n  '16:43',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 10, 0, 0),\n  datetime.datetime(2021, 1, 10, 17, 37, 51, 38214),\n  '17:37',\n  Decimal('9.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 10, 0, 0),\n  datetime.datetime(2021, 1, 10, 12, 21, 51, 801473),\n  '12:21',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 10, 0, 0),\n  datetime.datetime(2021, 1, 10, 17, 39, 57, 394105),\n  '17:39',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 10, 0, 0),\n  datetime.datetime(2021, 1, 10, 11, 27, 51, 53833),\n  '11:27',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 10, 0, 0),\n  datetime.datetime(2021, 1, 10, 17, 33, 0, 644376),\n  '17:33',\n  Decimal('11.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 10, 0, 0),\n  datetime.datetime(2021, 1, 10, 14, 58, 58, 169488),\n  '14:58',\n  Decimal('8.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 11, 0, 0),\n  datetime.datetime(2021, 1, 11, 18, 12, 4, 154929),\n  '18:12',\n  Decimal('9.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 11, 0, 0),\n  datetime.datetime(2021, 1, 11, 11, 43, 39, 102406),\n  '11:43',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 11, 0, 0),\n  datetime.datetime(2021, 1, 11, 16, 17, 50, 688613),\n  '16:17',\n  Decimal('6.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 11, 0, 0),\n  datetime.datetime(2021, 1, 11, 13, 13, 41, 745043),\n  '13:13',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 11, 0, 0),\n  datetime.datetime(2021, 1, 11, 14, 56, 11, 897091),\n  '14:56',\n  Decimal('5.000')),\n (None,\n  datetime.datetime(2021, 1, 11, 0, 0),\n  datetime.datetime(2021, 1, 11, 12, 3, 52, 839965),\n  '12:03',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 12, 0, 0),\n  datetime.datetime(2021, 1, 12, 18, 34, 44, 201697),\n  '18:34',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 12, 0, 0),\n  datetime.datetime(2021, 1, 12, 17, 34, 2, 401314),\n  '17:34',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 12, 0, 0),\n  datetime.datetime(2021, 1, 12, 16, 57, 38, 652980),\n  '16:57',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 12, 0, 0),\n  datetime.datetime(2021, 1, 12, 16, 10, 32, 882404),\n  '16:10',\n  Decimal('4.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 12, 0, 0),\n  datetime.datetime(2021, 1, 12, 17, 28, 41, 790677),\n  '17:28',\n  Decimal('3.000')),\n (None,\n  datetime.datetime(2021, 1, 12, 0, 0),\n  datetime.datetime(2021, 1, 12, 15, 48, 36, 255996),\n  '15:48',\n  Decimal('3.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 13, 0, 0),\n  datetime.datetime(2021, 1, 13, 16, 0, 26, 119579),\n  '16:00',\n  Decimal('5.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 13, 0, 0),\n  datetime.datetime(2021, 1, 13, 17, 49, 31, 964742),\n  '17:49',\n  Decimal('9.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 13, 0, 0),\n  datetime.datetime(2021, 1, 13, 14, 55, 27, 525227),\n  '14:55',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 13, 0, 0),\n  datetime.datetime(2021, 1, 13, 17, 23, 1, 839348),\n  '17:23',\n  Decimal('14.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 13, 0, 0),\n  datetime.datetime(2021, 1, 13, 15, 5, 0, 55059),\n  '15:05',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 13, 0, 0),\n  datetime.datetime(2021, 1, 13, 12, 2, 37, 371463),\n  '12:02',\n  Decimal('5.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 14, 0, 0),\n  datetime.datetime(2021, 1, 14, 16, 43, 16, 923587),\n  '16:43',\n  Decimal('11.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 14, 0, 0),\n  datetime.datetime(2021, 1, 14, 13, 44, 5, 396812),\n  '13:44',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 14, 0, 0),\n  datetime.datetime(2021, 1, 14, 14, 8, 43, 544986),\n  '14:08',\n  Decimal('9.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 14, 0, 0),\n  datetime.datetime(2021, 1, 14, 17, 45, 59, 814971),\n  '17:45',\n  Decimal('6.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 14, 0, 0),\n  datetime.datetime(2021, 1, 14, 16, 35, 51, 514818),\n  '16:35',\n  Decimal('7.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 14, 0, 0),\n  datetime.datetime(2021, 1, 14, 17, 1, 19, 263219),\n  '17:01',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2021, 1, 14, 0, 0),\n  datetime.datetime(2021, 1, 14, 15, 51, 2, 472506),\n  '15:51',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 15, 0, 0),\n  datetime.datetime(2021, 1, 15, 18, 52, 31, 248562),\n  '18:52',\n  Decimal('14.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 15, 0, 0),\n  datetime.datetime(2021, 1, 15, 17, 39, 35, 531893),\n  '17:39',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 15, 0, 0),\n  datetime.datetime(2021, 1, 15, 10, 24, 21, 891583),\n  '10:24',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 15, 0, 0),\n  datetime.datetime(2021, 1, 15, 14, 35, 44, 879815),\n  '14:35',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 15, 0, 0),\n  datetime.datetime(2021, 1, 15, 17, 32, 8, 942007),\n  '17:32',\n  Decimal('12.000')),\n (None,\n  datetime.datetime(2021, 1, 15, 0, 0),\n  datetime.datetime(2021, 1, 15, 16, 33, 8, 493624),\n  '16:33',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 16, 0, 0),\n  datetime.datetime(2021, 1, 16, 16, 33, 23, 983708),\n  '16:33',\n  Decimal('15.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 16, 0, 0),\n  datetime.datetime(2021, 1, 16, 16, 45, 54, 585814),\n  '16:45',\n  Decimal('10.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 16, 0, 0),\n  datetime.datetime(2021, 1, 16, 9, 33, 9, 39456),\n  '09:33',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 16, 0, 0),\n  datetime.datetime(2021, 1, 16, 17, 35, 20, 299216),\n  '17:35',\n  Decimal('10.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 16, 0, 0),\n  datetime.datetime(2021, 1, 16, 17, 17, 19, 657856),\n  '17:17',\n  Decimal('8.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 16, 0, 0),\n  datetime.datetime(2021, 1, 16, 17, 24, 40, 890360),\n  '17:24',\n  Decimal('12.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 17, 0, 0),\n  datetime.datetime(2021, 1, 17, 12, 28, 6, 504280),\n  '12:28',\n  Decimal('3.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 17, 0, 0),\n  datetime.datetime(2021, 1, 17, 12, 38, 9, 154040),\n  '12:38',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 17, 0, 0),\n  datetime.datetime(2021, 1, 17, 11, 30, 23, 580584),\n  '11:30',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 17, 0, 0),\n  datetime.datetime(2021, 1, 17, 15, 27, 39, 814241),\n  '15:27',\n  Decimal('4.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 17, 0, 0),\n  datetime.datetime(2021, 1, 17, 10, 58, 23, 943825),\n  '10:58',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 17, 0, 0),\n  datetime.datetime(2021, 1, 17, 15, 24, 49, 844764),\n  '15:24',\n  Decimal('6.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 18, 0, 0),\n  datetime.datetime(2021, 1, 18, 11, 49, 57, 48656),\n  '11:49',\n  Decimal('2.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 18, 0, 0),\n  datetime.datetime(2021, 1, 18, 13, 50, 9, 239211),\n  '13:50',\n  Decimal('1.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 18, 0, 0),\n  datetime.datetime(2021, 1, 18, 16, 9, 56, 398305),\n  '16:09',\n  Decimal('1.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 18, 0, 0),\n  datetime.datetime(2021, 1, 18, 16, 57, 16, 5872),\n  '16:57',\n  Decimal('3.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 18, 0, 0),\n  datetime.datetime(2021, 1, 18, 15, 45, 53, 756542),\n  '15:45',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 18, 0, 0),\n  datetime.datetime(2021, 1, 18, 17, 40, 56, 206228),\n  '17:40',\n  Decimal('11.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 19, 0, 0),\n  datetime.datetime(2021, 1, 19, 16, 54, 36, 966859),\n  '16:54',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 19, 0, 0),\n  datetime.datetime(2021, 1, 19, 16, 18, 42, 176420),\n  '16:18',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 19, 0, 0),\n  datetime.datetime(2021, 1, 19, 17, 25, 19, 249959),\n  '17:25',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 19, 0, 0),\n  datetime.datetime(2021, 1, 19, 17, 34, 26, 523037),\n  '17:34',\n  Decimal('13.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 20, 0, 0),\n  datetime.datetime(2021, 1, 20, 17, 57, 47, 275729),\n  '17:57',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 20, 0, 0),\n  datetime.datetime(2021, 1, 20, 14, 8, 2, 272),\n  '14:08',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 20, 0, 0),\n  datetime.datetime(2021, 1, 20, 15, 40, 46, 159695),\n  '15:40',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 20, 0, 0),\n  datetime.datetime(2021, 1, 20, 17, 59, 3, 47159),\n  '17:59',\n  Decimal('3.000')),\n (None,\n  datetime.datetime(2021, 1, 20, 0, 0),\n  datetime.datetime(2021, 1, 20, 14, 50, 2, 537496),\n  '14:50',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 21, 0, 0),\n  datetime.datetime(2021, 1, 21, 16, 26, 55, 713187),\n  '16:26',\n  Decimal('6.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 21, 0, 0),\n  datetime.datetime(2021, 1, 21, 14, 18, 25, 722170),\n  '14:18',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 21, 0, 0),\n  datetime.datetime(2021, 1, 21, 17, 0, 42, 828500),\n  '17:00',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 21, 0, 0),\n  datetime.datetime(2021, 1, 21, 16, 6, 34, 385343),\n  '16:06',\n  Decimal('2.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 21, 0, 0),\n  datetime.datetime(2021, 1, 21, 16, 14, 30, 677083),\n  '16:14',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 21, 0, 0),\n  datetime.datetime(2021, 1, 21, 15, 27, 36, 10640),\n  '15:27',\n  Decimal('16.000')),\n (None,\n  datetime.datetime(2021, 1, 21, 0, 0),\n  datetime.datetime(2021, 1, 21, 17, 16, 19, 462439),\n  '17:16',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 22, 0, 0),\n  datetime.datetime(2021, 1, 22, 17, 32, 40, 571259),\n  '17:32',\n  Decimal('7.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 22, 0, 0),\n  datetime.datetime(2021, 1, 22, 17, 35, 2, 641108),\n  '17:35',\n  Decimal('6.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 22, 0, 0),\n  datetime.datetime(2021, 1, 22, 17, 33, 18, 358983),\n  '17:33',\n  Decimal('2.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 22, 0, 0),\n  datetime.datetime(2021, 1, 22, 18, 2, 38, 236082),\n  '18:02',\n  Decimal('17.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 22, 0, 0),\n  datetime.datetime(2021, 1, 22, 16, 6, 8, 806859),\n  '16:06',\n  Decimal('3.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 22, 0, 0),\n  datetime.datetime(2021, 1, 22, 15, 35, 47, 157274),\n  '15:35',\n  Decimal('8.000')),\n (None,\n  datetime.datetime(2021, 1, 22, 0, 0),\n  datetime.datetime(2021, 1, 22, 16, 31, 49, 320511),\n  '16:31',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 23, 0, 0),\n  datetime.datetime(2021, 1, 23, 16, 29, 17, 179385),\n  '16:29',\n  Decimal('5.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 23, 0, 0),\n  datetime.datetime(2021, 1, 23, 16, 32, 27, 41123),\n  '16:32',\n  Decimal('16.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 23, 0, 0),\n  datetime.datetime(2021, 1, 23, 17, 39, 18, 433901),\n  '17:39',\n  Decimal('10.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 23, 0, 0),\n  datetime.datetime(2021, 1, 23, 17, 36, 32, 448221),\n  '17:36',\n  Decimal('9.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 23, 0, 0),\n  datetime.datetime(2021, 1, 23, 17, 22, 13, 86360),\n  '17:22',\n  Decimal('13.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 23, 0, 0),\n  datetime.datetime(2021, 1, 23, 17, 56, 1, 46156),\n  '17:56',\n  Decimal('8.000')),\n (None,\n  datetime.datetime(2021, 1, 23, 0, 0),\n  datetime.datetime(2021, 1, 23, 17, 17, 53, 301272),\n  '17:17',\n  Decimal('4.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 24, 0, 0),\n  datetime.datetime(2021, 1, 24, 16, 48, 58, 764161),\n  '16:48',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 24, 0, 0),\n  datetime.datetime(2021, 1, 24, 9, 56, 47, 976511),\n  '09:56',\n  Decimal('2.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 24, 0, 0),\n  datetime.datetime(2021, 1, 24, 16, 6, 34, 257467),\n  '16:06',\n  Decimal('16.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 24, 0, 0),\n  datetime.datetime(2021, 1, 24, 17, 15, 27, 329915),\n  '17:15',\n  Decimal('5.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 24, 0, 0),\n  datetime.datetime(2021, 1, 24, 12, 3, 48, 214577),\n  '12:03',\n  Decimal('9.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 24, 0, 0),\n  datetime.datetime(2021, 1, 24, 17, 9, 22, 449198),\n  '17:09',\n  Decimal('13.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 25, 0, 0),\n  datetime.datetime(2021, 1, 25, 11, 31, 35, 204029),\n  '11:31',\n  Decimal('4.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 25, 0, 0),\n  datetime.datetime(2021, 1, 25, 18, 13, 51, 449229),\n  '18:13',\n  Decimal('4.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 25, 0, 0),\n  datetime.datetime(2021, 1, 25, 10, 54, 11, 511343),\n  '10:54',\n  Decimal('1.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 25, 0, 0),\n  datetime.datetime(2021, 1, 25, 16, 30, 6, 700404),\n  '16:30',\n  Decimal('5.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 25, 0, 0),\n  datetime.datetime(2021, 1, 25, 17, 6, 12, 950876),\n  '17:06',\n  Decimal('11.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 26, 0, 0),\n  datetime.datetime(2021, 1, 26, 18, 45, 55, 139783),\n  '18:45',\n  Decimal('12.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 26, 0, 0),\n  datetime.datetime(2021, 1, 26, 17, 49, 13, 788655),\n  '17:49',\n  Decimal('5.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 26, 0, 0),\n  datetime.datetime(2021, 1, 26, 17, 22, 23, 553749),\n  '17:22',\n  Decimal('9.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 26, 0, 0),\n  datetime.datetime(2021, 1, 26, 11, 43, 31, 859858),\n  '11:43',\n  Decimal('1.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 26, 0, 0),\n  datetime.datetime(2021, 1, 26, 10, 48, 7, 645358),\n  '10:48',\n  Decimal('4.000')),\n (None,\n  datetime.datetime(2021, 1, 26, 0, 0),\n  datetime.datetime(2021, 1, 26, 12, 3, 30, 640226),\n  '12:03',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 27, 0, 0),\n  datetime.datetime(2021, 1, 27, 15, 23, 35, 880150),\n  '15:23',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 27, 0, 0),\n  datetime.datetime(2021, 1, 27, 17, 51, 43, 86776),\n  '17:51',\n  Decimal('7.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 27, 0, 0),\n  datetime.datetime(2021, 1, 27, 16, 8, 37, 207828),\n  '16:08',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 27, 0, 0),\n  datetime.datetime(2021, 1, 27, 12, 29, 26, 293998),\n  '12:29',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 27, 0, 0),\n  datetime.datetime(2021, 1, 27, 16, 48, 10, 671680),\n  '16:48',\n  Decimal('9.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 28, 0, 0),\n  datetime.datetime(2021, 1, 28, 16, 15, 56, 307895),\n  '16:15',\n  Decimal('8.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 28, 0, 0),\n  datetime.datetime(2021, 1, 28, 17, 2, 49, 863155),\n  '17:02',\n  Decimal('11.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 28, 0, 0),\n  datetime.datetime(2021, 1, 28, 16, 3, 46, 324108),\n  '16:03',\n  Decimal('2.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 28, 0, 0),\n  datetime.datetime(2021, 1, 28, 17, 32, 57, 531370),\n  '17:32',\n  Decimal('7.000')),\n (None,\n  datetime.datetime(2021, 1, 28, 0, 0),\n  datetime.datetime(2021, 1, 28, 9, 41, 45, 206634),\n  '09:41',\n  Decimal('1.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 29, 0, 0),\n  datetime.datetime(2021, 1, 29, 18, 22, 33, 772177),\n  '18:22',\n  Decimal('12.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 29, 0, 0),\n  datetime.datetime(2021, 1, 29, 15, 31, 53, 386161),\n  '15:31',\n  Decimal('5.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 29, 0, 0),\n  datetime.datetime(2021, 1, 29, 16, 46, 32, 370473),\n  '16:46',\n  Decimal('16.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 29, 0, 0),\n  datetime.datetime(2021, 1, 29, 17, 51, 54, 876871),\n  '17:51',\n  Decimal('19.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 30, 0, 0),\n  datetime.datetime(2021, 1, 30, 18, 20, 53, 769254),\n  '18:20',\n  Decimal('14.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 30, 0, 0),\n  datetime.datetime(2021, 1, 30, 15, 36, 35, 211786),\n  '15:36',\n  Decimal('10.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 30, 0, 0),\n  datetime.datetime(2021, 1, 30, 12, 28, 12, 808315),\n  '12:28',\n  Decimal('3.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 30, 0, 0),\n  datetime.datetime(2021, 1, 30, 17, 31, 42, 720395),\n  '17:31',\n  Decimal('9.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 30, 0, 0),\n  datetime.datetime(2021, 1, 30, 16, 48, 20, 757183),\n  '16:48',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 30, 0, 0),\n  datetime.datetime(2021, 1, 30, 16, 49, 33, 602780),\n  '16:49',\n  Decimal('5.000')),\n (None,\n  datetime.datetime(2021, 1, 30, 0, 0),\n  datetime.datetime(2021, 1, 30, 14, 6, 5, 161516),\n  '14:06',\n  Decimal('2.000')),\n ('CHATELAIN',\n  datetime.datetime(2021, 1, 31, 0, 0),\n  datetime.datetime(2021, 1, 31, 17, 31, 32, 397277),\n  '17:31',\n  Decimal('11.000')),\n ('Fort Jaco',\n  datetime.datetime(2021, 1, 31, 0, 0),\n  datetime.datetime(2021, 1, 31, 10, 40, 1, 325144),\n  '10:40',\n  Decimal('3.000')),\n ('La Hulpe',\n  datetime.datetime(2021, 1, 31, 0, 0),\n  datetime.datetime(2021, 1, 31, 17, 35, 3, 517373),\n  '17:35',\n  Decimal('7.000')),\n ('Tongres',\n  datetime.datetime(2021, 1, 31, 0, 0),\n  datetime.datetime(2021, 1, 31, 16, 58, 6, 134544),\n  '16:58',\n  Decimal('8.000')),\n ('Wemmel',\n  datetime.datetime(2021, 1, 31, 0, 0),\n  datetime.datetime(2021, 1, 31, 17, 7, 39, 954667),\n  '17:07',\n  Decimal('6.000')),\n ('Woluwe',\n  datetime.datetime(2021, 1, 31, 0, 0),\n  datetime.datetime(2021, 1, 31, 12, 26, 51, 383341),\n  '12:26',\n  Decimal('4.000')),\n ...]\n\n\n\nsource\n\n\nget_sales_for_period_for_shop_per_day\n\n get_sales_for_period_for_shop_per_day (start_date, end_date, shop='')\n\n\nsource\n\n\nget_sales_for_period_for_corporate_restaurant_per_day\n\n get_sales_for_period_for_corporate_restaurant_per_day (start_date,\n                                                        end_date, shop='')\n\n\nget_sales_for_period_for_corporate_restaurant_per_day('01-01-2023','01-05-2023', 'R.E ALOST')\n\nconfig.ini file available... using that\n\n\n\n\n\n\n\n\n\nshop_name\nday\ntotal_sales\n\n\n\n\n0\nR.E ALOST\n2023-01-02\n2073.36152\n\n\n1\nR.E ALOST\n2023-01-03\n2277.62152\n\n\n2\nR.E ALOST\n2023-01-04\n2453.53384\n\n\n\n\n\n\n\n\nsource\n\n\nget_date_range\n\n get_date_range (start_date, end_date)\n\n\nget_date_range('2023-01-01','2023-01-3')\n\n[datetime.date(2023, 1, 1),\n datetime.date(2023, 1, 2),\n datetime.date(2023, 1, 3)]\n\n\n\nsource\n\n\nget_supplier_food_costs_period\n\n get_supplier_food_costs_period (start_date, end_date, shop='')\n\n\nget_supplier_food_costs_period('2023-01-01','2023-01-15', 'Woluwe')\n\nconfig.ini file available... using that\n\n\n[[datetime.datetime(2023, 1, 2, 0, 0), Decimal('260.53')],\n [datetime.datetime(2023, 1, 4, 0, 0), Decimal('294.76')],\n [datetime.datetime(2023, 1, 5, 0, 0), Decimal('277.69')],\n [datetime.datetime(2023, 1, 6, 0, 0), Decimal('432.13')],\n [datetime.datetime(2023, 1, 7, 0, 0), Decimal('54.95')],\n [datetime.datetime(2023, 1, 8, 0, 0), Decimal('252.87')],\n [datetime.datetime(2023, 1, 9, 0, 0), Decimal('363.91')],\n [datetime.datetime(2023, 1, 10, 0, 0), Decimal('778.05')],\n [datetime.datetime(2023, 1, 11, 0, 0), Decimal('137.38')],\n [datetime.datetime(2023, 1, 12, 0, 0), Decimal('910.65')],\n [datetime.datetime(2023, 1, 13, 0, 0), Decimal('491.44')],\n [datetime.datetime(2023, 1, 14, 0, 0), Decimal('27.48')]]\n\n\n\nsource\n\n\nget_sum_products_bought\n\n get_sum_products_bought (start_date, end_date, product_ids,\n                          resto_name='')\n\n\nsource\n\n\nget_supplier_food_costs_period_for_resto\n\n get_supplier_food_costs_period_for_resto (start_date, end_date,\n                                           resto_name='')\n\n\nget_supplier_food_costs_period_for_resto('2023-01-01', '2023-01-20', resto_name = 'R.E ALOST')\n\nconfig.ini file available... using that\n\n\n[[datetime.datetime(2023, 1, 2, 0, 0), Decimal('124.45')],\n [datetime.datetime(2023, 1, 4, 0, 0), Decimal('166.25')],\n [datetime.datetime(2023, 1, 5, 0, 0), Decimal('1064.39')],\n [datetime.datetime(2023, 1, 6, 0, 0), Decimal('195.25')],\n [datetime.datetime(2023, 1, 9, 0, 0), Decimal('181.09')],\n [datetime.datetime(2023, 1, 10, 0, 0), Decimal('2432.85')],\n [datetime.datetime(2023, 1, 11, 0, 0), Decimal('281.72')],\n [datetime.datetime(2023, 1, 12, 0, 0), Decimal('1144.61')],\n [datetime.datetime(2023, 1, 13, 0, 0), Decimal('243.99')],\n [datetime.datetime(2023, 1, 16, 0, 0), Decimal('163.29')],\n [datetime.datetime(2023, 1, 17, 0, 0), Decimal('1961.58')],\n [datetime.datetime(2023, 1, 19, 0, 0), Decimal('207.81')]]\n\n\n\nsource\n\n\nget_atelier_food_costs_period\n\n get_atelier_food_costs_period (start_date, end_date, shop='')\n\n\nget_atelier_food_costs_period('2023-01-01','2023-01-05', shop = 'Woluwe')\n\nconfig.ini file available... using that\n\n\n[[datetime.date(2023, 1, 1), Decimal('0.00')],\n [datetime.date(2023, 1, 2), Decimal('1865.16')],\n [datetime.date(2023, 1, 3), Decimal('2000.41')],\n [datetime.date(2023, 1, 4), Decimal('1384.03')],\n [datetime.date(2023, 1, 5), Decimal('2372.48')]]\n\n\n\nsource\n\n\nget_atelier_food_costs_period_for_resto\n\n get_atelier_food_costs_period_for_resto (start_date, end_date,\n                                          resto_name='')\n\n\nget_atelier_food_costs_period_for_resto('2023-02-01','2023-02-28',resto_name='R.E ALOST')\n\nconfig.ini file available... using that\n\n\n[[datetime.date(2023, 2, 3), Decimal('118.42')],\n [datetime.date(2023, 2, 7), Decimal('25.65')],\n [datetime.date(2023, 2, 10), Decimal('326.82')],\n [datetime.date(2023, 2, 14), Decimal('420.82')],\n [datetime.date(2023, 2, 24), Decimal('179.93')],\n [datetime.date(2023, 2, 27), Decimal('200.38')],\n [datetime.date(2023, 2, 28), Decimal('57.21')]]\n\n\n\nsource\n\n\nget_food_costs_for_period_for_shop_per_day\n\n get_food_costs_for_period_for_shop_per_day (start_date, end_date,\n                                             shop='')\n\n\nget_food_costs_for_period_for_shop_per_day('2023-01-01', '2023-01-05', shop = 'Woluwe')\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\n\n\n\n\n\n\ndate\natelier\nsupplier\ntotal\n\n\n\n\n0\n2023-01-01\n0.00\n0\n0.00\n\n\n1\n2023-01-02\n1865.16\n260.53\n2125.69\n\n\n2\n2023-01-03\n2000.41\n0\n2000.41\n\n\n3\n2023-01-04\n1384.03\n294.76\n1678.79\n\n\n4\n2023-01-05\n2372.48\n0\n2372.48\n\n\n\n\n\n\n\n\nsource\n\n\nget_food_costs_for_period_for_resto_per_day\n\n get_food_costs_for_period_for_resto_per_day (start_date, end_date,\n                                              resto_name='')\n\n\nget_food_costs_for_period_for_resto_per_day('2023-01-01', '2023-01-20', resto_name = 'R.E ALOST')\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\n\n\n\n\n\n\ndate\natelier\nsupplier\ntotal\n\n\n\n\n0\n2023-01-01\n0\n0\n0\n\n\n1\n2023-01-02\n0\n124.45\n124.45\n\n\n2\n2023-01-03\n213.68\n0\n213.68\n\n\n3\n2023-01-04\n0\n166.25\n166.25\n\n\n4\n2023-01-05\n40.96\n1064.39\n1105.35\n\n\n5\n2023-01-06\n105.52\n195.25\n300.77\n\n\n6\n2023-01-07\n0\n0\n0\n\n\n7\n2023-01-08\n0\n0\n0\n\n\n8\n2023-01-09\n154.48\n181.09\n335.57\n\n\n9\n2023-01-10\n625.78\n2432.85\n3058.63\n\n\n10\n2023-01-11\n0\n281.72\n281.72\n\n\n11\n2023-01-12\n0\n1144.61\n1144.61\n\n\n12\n2023-01-13\n0\n243.99\n243.99\n\n\n13\n2023-01-14\n0\n0\n0\n\n\n14\n2023-01-15\n0\n0\n0\n\n\n15\n2023-01-16\n0\n163.29\n163.29\n\n\n16\n2023-01-17\n990.20\n1961.58\n2951.78\n\n\n17\n2023-01-18\n143.27\n0\n143.27\n\n\n18\n2023-01-19\n0\n207.81\n207.81\n\n\n19\n2023-01-20\n0\n0\n0\n\n\n\n\n\n\n\n\n# example\nget_food_costs_for_period_for_shop_per_day('2023-01-01', '2023-01-31', shop='Woluwe')\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\n\n\n\n\n\n\ndate\natelier\nsupplier\ntotal\n\n\n\n\n0\n2023-01-01\n0.00\n0\n0.00\n\n\n1\n2023-01-02\n1865.16\n260.53\n2125.69\n\n\n2\n2023-01-03\n2000.41\n0\n2000.41\n\n\n3\n2023-01-04\n1384.03\n294.76\n1678.79\n\n\n4\n2023-01-05\n2372.48\n277.69\n2650.17\n\n\n5\n2023-01-06\n1473.02\n432.13\n1905.15\n\n\n6\n2023-01-07\n1665.08\n54.95\n1720.03\n\n\n7\n2023-01-08\n4326.60\n252.87\n4579.47\n\n\n8\n2023-01-09\n1500.32\n363.91\n1864.23\n\n\n9\n2023-01-10\n2299.12\n778.05\n3077.17\n\n\n10\n2023-01-11\n1258.67\n137.38\n1396.05\n\n\n11\n2023-01-12\n1812.84\n910.65\n2723.49\n\n\n12\n2023-01-13\n1198.86\n491.44\n1690.30\n\n\n13\n2023-01-14\n867.69\n27.48\n895.17\n\n\n14\n2023-01-15\n3775.71\n0\n3775.71\n\n\n15\n2023-01-16\n2202.40\n537.89\n2740.29\n\n\n16\n2023-01-17\n2319.98\n0\n2319.98\n\n\n17\n2023-01-18\n655.01\n422.06\n1077.07\n\n\n18\n2023-01-19\n1960.28\n611.43\n2571.71\n\n\n19\n2023-01-20\n1618.98\n704.26\n2323.24\n\n\n20\n2023-01-21\n1745.71\n27.48\n1773.19\n\n\n21\n2023-01-22\n3451.38\n0\n3451.38\n\n\n22\n2023-01-23\n923.53\n247.74\n1171.27\n\n\n23\n2023-01-24\n2354.44\n812.08\n3166.52\n\n\n24\n2023-01-25\n1913.61\n137.38\n2050.99\n\n\n25\n2023-01-26\n2482.45\n985.97\n3468.42\n\n\n26\n2023-01-27\n1342.48\n378.89\n1721.37\n\n\n27\n2023-01-28\n1391.84\n54.95\n1446.79\n\n\n28\n2023-01-29\n4683.05\n0\n4683.05\n\n\n29\n2023-01-30\n481.57\n255.85\n737.42\n\n\n30\n2023-01-31\n2764.45\n0\n2764.45"
  },
  {
    "objectID": "salad bar & hotbar sales in latem & overijse.html",
    "href": "salad bar & hotbar sales in latem & overijse.html",
    "title": "what is selling the best salad bar or hotbar in Latem?",
    "section": "",
    "text": "import foodcosts.core as core\n\n\ncore.get_shop_names()\n\nconfig.ini file available... using that\n\n\n['La Hulpe',\n 'Fort Jaco',\n 'Woluwe',\n 'Tongres',\n 'Wemmel',\n 'CHATELAIN',\n 'OVERIJSE',\n 'LATEM']\n\n\n\nprint('hello')\n\nhello\n\n\n\nprods_sold_latem = core.get_products_sold_for_a_shop('01-01-2022','01-04-2023', )\n\nconfig.ini file available... using that\n\n\n\ndisplay(prods_sold_latem)\n\n[]"
  },
  {
    "objectID": "Vraag guy ivm winkels.html",
    "href": "Vraag guy ivm winkels.html",
    "title": "foodcosts",
    "section": "",
    "text": "import sys\nsys.path.append(\"..\")\nimport foodcosts.core as core\nimport requests\nimport json\nimport calendar\nimport pandas as pd\nfrom datetime import date\n\n\n\n# fetch hours worked for a shop\n# use the API formation.fthek.be/api/hours_worked with body\n# {\n#   \"warehouse_id\": 2,\n#   \"yyyy_mm_dd\": \"2023-03-15\"\n# }\ndef get_hours_worked_for_a_shop_for_a_day(warehouse_id, yyyy_mm_dd):\n    url = \"https://formation.fthek.be/api/v2/hours_worked/period\"\n    body = {\n        \"warehouse_id\": warehouse_id,\n        \"start_yyyy_mm_dd\": yyyy_mm_dd,\n        \"end_yyyy_mm_dd\": yyyy_mm_dd,\n    }\n    response = requests.get(url, json=body)\n    print(response.status_code)\n    if response.status_code == 200:\n        return response.json()\n    else:\n        return None\n\ndef get_hours_worked_for_a_shop_for_a_month_per_employee(warehouse_id, yyyy_mm):\n    prod = 'https://formation.fthek.be'\n    test = 'http://localhost:3000'\n    url = prod + \"/api/v2/hours_worked/period\"\n    start_yyyy_mm_dd = yyyy_mm + '-01';\n    end_yyyy_mm_dd = yyyy_mm + '-' + str(calendar.monthrange(int(yyyy_mm[:4]), int(yyyy_mm[5:]))[1])\n    body = {\n        \"warehouse_id\": warehouse_id,\n        \"start_yyyy_mm_dd\": start_yyyy_mm_dd,\n        \"end_yyyy_mm_dd\": end_yyyy_mm_dd\n    }\n    response = requests.get(url, json=body)\n    print(response.status_code)\n    print(response.text)\n    if response.status_code == 200:\n        return response.json()\n    else:\n        return None\n\n\n# call the API for a shop and a day\n# return the hours worked\nanswer = get_hours_worked_for_a_shop_for_a_day(core.get_shop_id('La Hulpe'), \"2023-03-15\")\nprint(answer)\n\nconfig.ini file available... using that\n200\n[{'hoursWorked': 10.5, 'employee': 'Kevin BETTE', 'date': '2023-03-15T23:00:00.000Z', 'warehouseId': 2}, {'hoursWorked': 3.716666666666667, 'employee': 'Léa VAN DEN HOUTE', 'date': '2023-03-15T23:00:00.000Z', 'warehouseId': 2}]\n\n\n\n# sums the hours worked for a shop\n# input: [{'hours': 10.5, 'name': 'Kevin BETTE ', 'id': 2628104}, {'hours': 6.466666666666667, 'name': 'Massimo OLIVO ', 'id': 2786566}]\n\ndef sum_hours_worked_for_a_shop_and_day(warehouse_id, yyyy_mm_dd):\n    hours_worked = get_hours_worked_for_a_shop_for_a_day(warehouse_id, yyyy_mm_dd)\n    if hours_worked is None:\n        return 0\n    else:\n        return sum([h['hoursWorked'] for h in hours_worked])\n\n\n# example\nsum_hours_worked_for_a_shop_and_day(core.get_shop_id('Woluwe'), \"2023-03-15\")\n\nconfig.ini file available... using that\n200\n\n\n26.566666666666663\n\n\n\n# returns a list of days in format yyyy-mm-dd for a given month\n# input: 2023-03\ndef get_days_in_month(yyyy_mm):\n    # Split the input string into year and month\n    year, month = map(int, yyyy_mm.split('-'))\n\n    # Get the number of days in the given month and year\n    num_days = calendar.monthrange(year, month)[1]\n\n    # Generate a list of days in the given month and year\n    days = [date(year, month, day).strftime(\"%Y-%m-%d\") for day in range(1, num_days + 1)]\n\n    return days\n\n# returns the list of strings (format YYYY-MM-DD) in a period (start and end dates included)\n# start and end are in format YYYY-MM-DD\ndef get_days_in_period(start,end):\n    start = date.fromisoformat(start)\n    end = date.fromisoformat(end)\n    delta = end - start\n    dates = [start + pd.DateOffset(days=i) for i in range(delta.days + 1)]\n    return [d.strftime(\"%Y-%m-%d\") for d in dates]\n\n#example\nget_days_in_period(\"2023-03-01\", \"2023-03-15\")\n\n['2023-03-01',\n '2023-03-02',\n '2023-03-03',\n '2023-03-04',\n '2023-03-05',\n '2023-03-06',\n '2023-03-07',\n '2023-03-08',\n '2023-03-09',\n '2023-03-10',\n '2023-03-11',\n '2023-03-12',\n '2023-03-13',\n '2023-03-14',\n '2023-03-15']\n\n\n\n# returns the total hours worked for a shop in a given month\n# input: 2023-03\ndef get_hours_worked_for_a_shop_in_a_month(warehouse_id, yyyy_mm):\n    hours_worked = get_hours_worked_for_a_shop_for_a_month_per_employee(warehouse_id, yyyy_mm)\n    if hours_worked is None:\n        return 0\n    return sum([e['hoursWorked'] for e in hours_worked])\n\ndef get_hours_worked_for_a_shop_in_a_period(warehouse_id, start, end):\n    hours_worked = get_hours_worked_for_a_shop_in_a_period(warehouse_id, start, end)\n    return sum([e['hoursWorked'] for e in hours_worked])\n\n\n# example\nhours_worked_in_la_hulpe = get_hours_worked_for_a_shop_in_a_month(core.get_shop_id('Woluwe'), \"2023-03\")\nprint(hours_worked_in_la_hulpe)\n\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":7.55,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.433333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.683333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.133333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.516666666666667,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.6,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.566666666666666,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.55,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.633333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.616666666666666,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.666666666666667,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.533333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.2,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.766666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.1,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.716666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.75,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.116666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.31666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.95,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.7,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.08333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.633333333333334,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.933333333333334,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.23333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.13333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.55,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.35,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.583333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":2,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.75,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.53333333333333,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.55,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":11.36666666666667,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.46666666666667,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.18333333333333,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":1.25,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":3.833333333333333,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.066666666666666,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.383333333333334,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.41666666666667,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.35,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.6,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.18333333333333,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.133333333333334,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.083333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.95,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.216666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.166666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.133333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.316666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.1,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.683333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.333333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.316666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.033333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.3,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.083333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.433333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.183333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.4,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.35,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.566666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.266666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.233333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.683333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.916666666666666,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.483333333333333,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.916666666666666,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.833333333333334,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.21666666666667,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.933333333333334,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.73333333333333,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.866666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.13333333333333,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.45,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.06666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.41666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.21666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.5,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.85,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.333333333333333,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.65,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.6,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.3,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.733333333333333,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.2,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.45,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.666666666666667,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.683333333333334,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.1,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.916666666666667,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.616666666666666,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.216666666666667,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.133333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.216666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.1,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.03333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.133333333333334,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.266666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.28333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.983333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.08333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.11666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4}]\n1106.1833333333332\n\n\n\nla_hulpe = core.get_sales_for_period_for_shop_per_day(\"2023-02-01\", \"2023-02-28\", \"La Hulpe\")\n\nconfig.ini file available... using that\n\n\n\n# sum the total sales for a shop\nla_hulpe['total_sales'].sum()\n\n66249.88284\n\n\n\ncore.get_shop_names()\n\nconfig.ini file available... using that\n\n\n['La Hulpe',\n 'Fort Jaco',\n 'Woluwe',\n 'Tongres',\n 'Wemmel',\n 'CHATELAIN',\n 'OVERIJSE',\n 'LATEM']\n\n\n\nfoodcosts = core.get_food_costs_for_period_for_shop_per_day(\"2023-02-01\", \"2023-02-28\", \"La Hulpe\")\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\nfoodcosts.index = foodcosts['date']\nfoodcosts = foodcosts.drop('date', axis=1)\n\n\nfoodcosts\n\n\n\n\n\n\n\n\natelier\nsupplier\ntotal\n\n\ndate\n\n\n\n\n\n\n\n2023-02-01\n521.51\n363.44\n884.95\n\n\n2023-02-02\n1019.11\n289.97\n1309.08\n\n\n2023-02-03\n1244.03\n567.64\n1811.67\n\n\n2023-02-04\n1514.06\n0\n1514.06\n\n\n2023-02-05\n1810.74\n0\n1810.74\n\n\n2023-02-06\n1034.98\n306.07\n1341.05\n\n\n2023-02-07\n1167.42\n216.49\n1383.91\n\n\n2023-02-08\n603.62\n414.54\n1018.16\n\n\n2023-02-09\n1894.81\n303.90\n2198.71\n\n\n2023-02-10\n1057.54\n334.20\n1391.74\n\n\n2023-02-11\n814.10\n0\n814.10\n\n\n2023-02-12\n2209.62\n0\n2209.62\n\n\n2023-02-13\n321.12\n975.70\n1296.82\n\n\n2023-02-14\n2011.11\n323.37\n2334.48\n\n\n2023-02-15\n630.69\n115.03\n745.72\n\n\n2023-02-16\n1332.40\n127.52\n1459.92\n\n\n2023-02-17\n1313.14\n383.03\n1696.17\n\n\n2023-02-18\n637.55\n0\n637.55\n\n\n2023-02-19\n2131.71\n100.61\n2232.32\n\n\n2023-02-20\n292.98\n291.83\n584.81\n\n\n2023-02-21\n2560.01\n411.74\n2971.75\n\n\n2023-02-22\n1048.51\n127.56\n1176.07\n\n\n2023-02-23\n1593.92\n476.99\n2070.91\n\n\n2023-02-24\n1129.05\n279.36\n1408.41\n\n\n2023-02-25\n837.11\n0\n837.11\n\n\n2023-02-26\n2181.23\n0\n2181.23\n\n\n2023-02-27\n842.36\n380.00\n1222.36\n\n\n2023-02-28\n1291.01\n0\n1291.01\n\n\n\n\n\n\n\n\nfoodcosts.sum()\n\natelier     35045.44\nsupplier     6788.99\ntotal       41834.43\ndtype: object\n\n\n\ndef get_hours(month, shop_name):\n    total_hours = get_hours_worked_for_a_shop_in_a_month(core.get_shop_id(shop_name), month)\n    return {\n        \"total_hours\": total_hours\n    }\n\ndef test():\n    shop_names = core.get_shop_names()\n    shop_stats = {}\n    for shop_name in shop_names:\n        gross_margin = get_hours(\"2023-03\", shop_name)\n        print('shop ' + shop_name + ' gross margins:')\n        print(gross_margin)\n        \ntest()\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":3.683333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":3.783333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.65,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.58333333333333,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.53333333333333,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.18333333333333,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.38333333333333,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.51666666666667,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.65,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.18333333333333,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.18333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.08333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.58333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":11.03333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.28333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.416666666666667,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.53333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.5,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.5,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.51666666666667,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.91666666666667,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.78333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.75,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.75,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.73333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.68333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.53333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.65,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":7,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":3.716666666666667,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":9.916666666666666,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":4.916666666666667,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":3.95,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.01666666666667,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":5.033333333333333,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.96666666666667,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":7.95,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":7.1,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.25,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":5.5,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.83333333333333,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.58333333333333,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":11.38333333333333,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.733333333333333,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.466666666666667,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.75,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.666666666666667,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.433333333333334,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":7.416666666666667,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":11.3,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.78333333333333,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.05,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.06666666666667,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":7.4,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.08333333333333,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":4.616666666666666,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.13333333333333,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.433333333333334,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":2}]\nshop La Hulpe gross margins:\n{'total_hours': 528.0333333333332}\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":9.85,\"employee\":\"Armel KANDJEU\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.85,\"employee\":\"Armel KANDJEU\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.21666666666667,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.05,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.13333333333333,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.3,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.3,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.25,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.25,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.916666666666666,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.08333333333333,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.266666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.33333333333333,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.08333333333333,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.25,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.08333333333333,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.41666666666667,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7.116666666666666,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.75,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.35,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7.066666666666666,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7.083333333333333,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.08333333333333,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.15,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.46666666666667,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.616666666666666,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.26666666666667,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.25,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.45,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.18333333333333,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.21666666666667,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.41666666666667,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.583333333333333,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.25,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.25,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.5,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.83333333333333,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.25,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.1,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.05,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.23333333333333,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.266666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.916666666666666,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.25,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":6.466666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.916666666666666,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.166666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.13333333333333,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.166666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.333333333333333,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.033333333333333,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.1,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.28333333333333,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7.016666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":6.416666666666667,\"employee\":\"Ana DE OLIVEIRA CARREIRA\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.95,\"employee\":\"Ana DE OLIVEIRA CARREIRA\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.983333333333333,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.4,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7.366666666666666,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.1,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.933333333333334,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.433333333333334,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.316666666666666,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.933333333333334,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.18333333333333,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.95,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.8,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.8,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.26666666666667,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10,\"employee\":\"Carlos AZUCINA RECINA\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":8.5,\"employee\":\"Carlos AZUCINA RECINA\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.416666666666667,\"employee\":\"Carlos AZUCINA RECINA\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.333333333333333,\"employee\":\"Carlos AZUCINA RECINA\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":4.75,\"employee\":\"Carlos AZUCINA RECINA\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":3}]\nshop Fort Jaco gross margins:\n{'total_hours': 786.033333333333}\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":7.55,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.433333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.683333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.133333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.516666666666667,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.6,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.566666666666666,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.55,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.633333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.616666666666666,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.666666666666667,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.533333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.2,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.766666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.1,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.716666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.75,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.116666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.31666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.95,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.7,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.08333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.633333333333334,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.933333333333334,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.23333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.13333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.55,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.35,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.583333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":2,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.75,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.53333333333333,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.55,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":11.36666666666667,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.46666666666667,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.18333333333333,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":1.25,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":3.833333333333333,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.066666666666666,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.383333333333334,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.41666666666667,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.35,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.6,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.18333333333333,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.133333333333334,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.083333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.95,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.216666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.166666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.133333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.316666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.1,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.683333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.333333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.316666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.033333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.3,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.083333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.433333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.183333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.4,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.35,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.566666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.266666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.233333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.683333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.916666666666666,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.483333333333333,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.916666666666666,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.833333333333334,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.21666666666667,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.933333333333334,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.73333333333333,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.866666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.13333333333333,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.45,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.06666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.41666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.21666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.5,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.85,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.333333333333333,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.65,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.6,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.3,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.733333333333333,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.2,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.45,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.666666666666667,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.683333333333334,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.1,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.916666666666667,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.616666666666666,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.216666666666667,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.133333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.216666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.1,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.03333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.133333333333334,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.266666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.28333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.983333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.08333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.11666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4}]\nshop Woluwe gross margins:\n{'total_hours': 1106.1833333333332}\nconfig.ini file available... using that\n400\nNo match found for warehouse_id or tanda_location_id not set\nshop Tongres gross margins:\n{'total_hours': 0}\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":5.45,\"employee\":\"Armel KANDJEU\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.216666666666667,\"employee\":\"Armel KANDJEU\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.65,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.76666666666667,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.65,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.133333333333334,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.55,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.71666666666667,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":6.783333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.733333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":8.633333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":8.866666666666667,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":8.7,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.083333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":6.133333333333334,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":8.033333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.73333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.71666666666667,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.95,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.73333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.16666666666667,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.333333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.98333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.28333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.13333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.83333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.3,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.18333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.85,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.4,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.1,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.06666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.43333333333333,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.4,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.15,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.216666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.46666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.48333333333333,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.416666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.33333333333333,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":6.7,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.466666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.15,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.416666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":0.95,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.21666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.4,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.133333333333334,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.08333333333333,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.483333333333333,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.25,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.08333333333333,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":12.1,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.166666666666667,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.36666666666667,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":2.116666666666667,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.3,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.45,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.35,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.6,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.233333333333333,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.983333333333333,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.333333333333333,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.216666666666667,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.2,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.4,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.75,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.466666666666667,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.166666666666667,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.266666666666667,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.083333333333333,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.333333333333333,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.25,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":7}]\nshop Wemmel gross margins:\n{'total_hours': 548.2333333333335}\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":11.43333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.1,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.95,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.01666666666667,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.98333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.33333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":5.166666666666667,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":3,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.06666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.56666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.45,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.53333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.03333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.46666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.76666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.13333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.83333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.31666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.73333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.46666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.76666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.43333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.81666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.38333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.15,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.28333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":7.033333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.06666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.1,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.26666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":6.85,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.71666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.95,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.98333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.11666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.86666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.8,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":3.95,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.28333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.53333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.13333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.95,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.71666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.41666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.55,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":4.2,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.03333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.41666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.8,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":3.166666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.71666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.3,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.11666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.666666666666666,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.46666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.13333333333333,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.13333333333333,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.71666666666667,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.6,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":6.3,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":4.5,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.85,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.76666666666667,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.65,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.333333333333334,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":9.266666666666667,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.5,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.45,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":7.083333333333333,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12}]\nshop CHATELAIN gross margins:\n{'total_hours': 866.7333333333332}\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":13.5,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":13.5,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":13.58333333333333,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":13.66666666666667,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":9.5,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":9.583333333333334,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":13.91666666666667,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.56666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.68333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.9,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.35,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.43333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":11.01666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.53333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.53333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.95,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.71666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.65,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.48333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":8.416666666666666,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.41666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.63333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.51666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.66666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.48333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.56666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.81666666666667,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.4,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.46666666666667,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.4,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.78333333333333,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.35,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.53333333333333,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.3,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":5.666666666666667,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.6,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.46666666666667,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.6,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.2,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.433333333333334,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.333333333333333,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.266666666666666,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":2.266666666666667,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.26666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.43333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.16666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.08333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.48333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.3,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":6.266666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.6,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.48333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.2,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.03333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.36666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.41666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.51666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.46666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":2.466666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.38333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.36666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.68333333333333,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":8.183333333333334,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.85,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.51666666666667,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":8.416666666666666,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":5.05,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":5.183333333333334,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.5,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":6.966666666666667,\"employee\":\"Mathis DENIS\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.9,\"employee\":\"Mathis DENIS\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.533333333333333,\"employee\":\"Mathis DENIS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":36}]\nshop OVERIJSE gross margins:\n{'total_hours': 709.7333333333331}\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":6.616666666666666,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.016666666666667,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.333333333333333,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.333333333333333,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.45,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.35,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.45,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.05,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.3,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.31666666666667,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.233333333333333,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.3,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.1,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.55,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.41666666666667,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.31666666666667,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.2,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":2.4,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.55,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.51666666666667,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.11666666666667,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.35,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":9.116666666666667,\"employee\":\"Carine VERCRAYE\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.583333333333333,\"employee\":\"Carine VERCRAYE\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.533333333333333,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.85,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":12,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":9.75,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":12.16666666666667,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.15,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.883333333333334,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.65,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.583333333333333,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.25,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.75,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.66666666666667,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.083333333333333,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.666666666666667,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.56666666666667,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.083333333333333,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.25,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.133333333333334,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.15,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.483333333333333,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.25,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.283333333333333,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.3,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.166666666666667,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.4,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.95,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.05,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.833333333333333,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.916666666666667,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":3.466666666666667,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.533333333333333,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":8.85,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.466666666666667,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.116666666666666,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.833333333333333,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.233333333333333,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.983333333333333,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.066666666666666,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.2,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.1,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.266666666666667,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.25,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":3.666666666666667,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.05,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.2,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.133333333333334,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.1,\"employee\":\"Britt JOORIS\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.183333333333334,\"employee\":\"Britt JOORIS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.033333333333333,\"employee\":\"Jules DE WITTE\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.033333333333333,\"employee\":\"Jules DE WITTE\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.05,\"employee\":\"Alix VERSTRAETEN\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":3.566666666666667,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.866666666666666,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.083333333333333,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.566666666666666,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":1.65,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":1.833333333333333,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.133333333333334,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.516666666666667,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.15,\"employee\":\"Anna SCHEPENS\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.083333333333333,\"employee\":\"Anna SCHEPENS\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.016666666666667,\"employee\":\"Anna SCHEPENS\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.016666666666667,\"employee\":\"Anna SCHEPENS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.233333333333333,\"employee\":\"Ella DE GRAEVE\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.1,\"employee\":\"Lies VERSTRAETEN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.616666666666666,\"employee\":\"Lies VERSTRAETEN\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.58333333333333,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.75,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.8,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.016666666666667,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.25,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.183333333333334,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":3.5,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.333333333333333,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.75,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.76666666666667,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.18333333333333,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.05,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.18333333333333,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.716666666666667,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.28333333333333,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.383333333333334,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":9.266666666666667,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.5,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.2,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.75,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6,\"employee\":\"Charlotte DE LANGE\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6,\"employee\":\"Charlotte DE LANGE\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.25,\"employee\":\"Charlotte DE LANGE\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.166666666666667,\"employee\":\"Charlotte DE LANGE\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5,\"employee\":\"Wout VERSTRAEYEN\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6,\"employee\":\"Wout VERSTRAEYEN\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4,\"employee\":\"Lisa DE BRUYKER CHABBA\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5,\"employee\":\"Lisa DE BRUYKER CHABBA\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":39}]\nshop LATEM gross margins:\n{'total_hours': 855.8833333333331}\n\n\n\nFULLY_LOADED_COST_HOURS = 30 \n\n# month: 2023-02\n# returns the start and end day for a given month (format YYYY-MM-DD)\ndef get_start_and_end_day_for_month(month):\n    days_in_month = get_days_in_month(month)\n    return days_in_month[0], days_in_month[-1]\n\ndef get_gross_margin_for_month(month, shop_name):\n    start_date, end_date = get_start_and_end_day_for_month(month)\n    foodcosts = core.get_food_costs_for_period_for_shop_per_day(start_date, end_date, shop_name)\n    print('foodcosts ok')\n    foodcosts.index = foodcosts['date']\n    foodcosts = foodcosts.drop('date', axis=1)\n    sales = core.get_sales_for_period_for_shop_per_day(start_date, end_date, shop_name)\n    print('sales ok')\n    total_hours = get_hours_worked_for_a_shop_in_a_month(core.get_shop_id(shop_name), month)\n    print('total hours')\n    gross_margin = float(sales['total_sales'].sum()) - float(foodcosts['total'].sum()) - float(FULLY_LOADED_COST_HOURS) * total_hours\n    print('gross margin')\n    return {\n        \"gross_margin\": gross_margin,\n        \"total_hours\": total_hours,\n        \"total_sales\": sales['total_sales'].sum(),\n        \"total_foodcosts\": float(foodcosts['total'].sum()),\n        \"total_foodcosts_atelier\": float(foodcosts['atelier'].sum()),\n        \"total_foodcosts_supplier\": float(foodcosts['supplier'].sum()),\n    }\n\n\nget_gross_margin_for_month(\"2023-03\",\"Woluwe\")\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nfoodcosts ok\nconfig.ini file available... using that\nsales ok\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":7.55,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.433333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.683333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.133333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.516666666666667,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.6,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.566666666666666,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.55,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.633333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.616666666666666,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.666666666666667,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.533333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.2,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.766666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.1,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.716666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.75,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.116666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.31666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.95,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.7,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.08333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.633333333333334,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.933333333333334,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.23333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.13333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.55,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.35,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.583333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":2,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.75,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.53333333333333,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.55,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":11.36666666666667,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.46666666666667,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.18333333333333,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":1.25,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":3.833333333333333,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.066666666666666,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.383333333333334,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.41666666666667,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.35,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.6,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.18333333333333,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.133333333333334,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.083333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.95,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.216666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.166666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.133333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.316666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.1,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.683333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.333333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.316666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.033333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.3,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.083333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.433333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.183333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.4,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.35,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.566666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.266666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.233333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.683333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.916666666666666,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.483333333333333,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.916666666666666,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.833333333333334,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.21666666666667,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.933333333333334,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.73333333333333,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.866666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.13333333333333,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.45,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.06666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.41666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.21666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.5,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.85,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.333333333333333,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.65,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.6,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.3,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.733333333333333,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.2,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.45,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.666666666666667,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.683333333333334,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.1,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.916666666666667,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.616666666666666,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.216666666666667,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.133333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.216666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.1,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.03333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.133333333333334,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.266666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.28333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.983333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.08333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.11666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4}]\ntotal hours\ngross margin\n\n\n{'gross_margin': 28703.468780000003,\n 'total_hours': 1106.1833333333332,\n 'total_sales': 135823.62878,\n 'total_foodcosts': 73934.66,\n 'total_foodcosts_atelier': 61721.6,\n 'total_foodcosts_supplier': 12213.06}\n\n\n\nprint(core.get_shop_names())\nget_gross_margin_for_month(\"2023-03\", \"CHATELAIN\")\n\nconfig.ini file available... using that\n['La Hulpe', 'Fort Jaco', 'Woluwe', 'Tongres', 'Wemmel', 'CHATELAIN', 'OVERIJSE', 'LATEM']\nconfig.ini file available... using that\nconfig.ini file available... using that\nfoodcosts ok\nconfig.ini file available... using that\nsales ok\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":11.43333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.1,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.95,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.01666666666667,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.98333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.33333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":5.166666666666667,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":3,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.06666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.56666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.45,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.53333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.03333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.46666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.76666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.13333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.83333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.31666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.73333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.46666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.76666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.43333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.81666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.38333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.15,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.28333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":7.033333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.06666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.1,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.26666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":6.85,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.71666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.95,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.98333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.11666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.86666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.8,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":3.95,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.28333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.53333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.13333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.95,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.71666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.41666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.55,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":4.2,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.03333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.41666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.8,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":3.166666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.71666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.3,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.11666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.666666666666666,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.46666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.13333333333333,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.13333333333333,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.71666666666667,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.6,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":6.3,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":4.5,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.85,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.76666666666667,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.65,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.333333333333334,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":9.266666666666667,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.5,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.45,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":7.083333333333333,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12}]\ntotal hours\ngross margin\n\n\n{'gross_margin': 30169.4785,\n 'total_hours': 866.7333333333332,\n 'total_sales': 126056.73849999999,\n 'total_foodcosts': 69885.26,\n 'total_foodcosts_atelier': 56964.86,\n 'total_foodcosts_supplier': 12920.4}\n\n\n\nshop_names = core.get_shop_names()\nshop_stats = {}\nfor shop_name in shop_names:\n    gross_margin = get_gross_margin_for_month(\"2023-03\", shop_name)\n    print('Shop ' + shop_name + ' gross margins:')\n    shop_stats[shop_name] = gross_margin\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nfoodcosts ok\nconfig.ini file available... using that\nsales ok\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":3.683333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":3.783333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.65,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.58333333333333,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.53333333333333,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.18333333333333,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.38333333333333,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.51666666666667,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.65,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.18333333333333,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.18333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.08333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.58333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":11.03333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.28333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.416666666666667,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.53333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.5,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.5,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.51666666666667,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.91666666666667,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.78333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.75,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.75,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.73333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.68333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.53333333333333,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.65,\"employee\":\"Kevin BETTE\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":7,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":3.716666666666667,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":9.916666666666666,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":4.916666666666667,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":3.95,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.01666666666667,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":5.033333333333333,\"employee\":\"Léa VAN DEN HOUTE\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.96666666666667,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":7.95,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":7.1,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.25,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":5.5,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.83333333333333,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.58333333333333,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":11.38333333333333,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.733333333333333,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.466666666666667,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.75,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.666666666666667,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.433333333333334,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":7.416666666666667,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":11.3,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.78333333333333,\"employee\":\"Massimo OLIVO\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.05,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.06666666666667,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":7.4,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.08333333333333,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":4.616666666666666,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":10.13333333333333,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":2},{\"hoursWorked\":6.433333333333334,\"employee\":\"Annabelle GATHY\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":2}]\ntotal hours\ngross margin\nShop La Hulpe gross margins:\nconfig.ini file available... using that\nconfig.ini file available... using that\nfoodcosts ok\nconfig.ini file available... using that\nsales ok\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":9.85,\"employee\":\"Armel KANDJEU\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.85,\"employee\":\"Armel KANDJEU\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.21666666666667,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.05,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.13333333333333,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.3,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.3,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.25,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.25,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.916666666666666,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.08333333333333,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.266666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.33333333333333,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.08333333333333,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.25,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.08333333333333,\"employee\":\"Vincenzo LO GATTO\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.41666666666667,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7.116666666666666,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.75,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.35,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7.066666666666666,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7.083333333333333,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.08333333333333,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.15,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.46666666666667,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.616666666666666,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.26666666666667,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.25,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.45,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.18333333333333,\"employee\":\"Savina RAJANAH\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.21666666666667,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.41666666666667,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.583333333333333,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.25,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.25,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.5,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.83333333333333,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.25,\"employee\":\"Maximilien MICHIELS\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.1,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.05,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.23333333333333,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.266666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.916666666666666,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.25,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":6.466666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.916666666666666,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.166666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.13333333333333,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.166666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.333333333333333,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.033333333333333,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.1,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.28333333333333,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7.016666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.16666666666667,\"employee\":\"Tito RODRIGUEZ AMAYA\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":6.416666666666667,\"employee\":\"Ana DE OLIVEIRA CARREIRA\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.95,\"employee\":\"Ana DE OLIVEIRA CARREIRA\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.983333333333333,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.4,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":7.366666666666666,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.1,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.933333333333334,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.433333333333334,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.316666666666666,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.933333333333334,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.18333333333333,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.95,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.8,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":9.8,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10.26666666666667,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":10,\"employee\":\"Carlos AZUCINA RECINA\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":8.5,\"employee\":\"Carlos AZUCINA RECINA\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.416666666666667,\"employee\":\"Carlos AZUCINA RECINA\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":5.333333333333333,\"employee\":\"Carlos AZUCINA RECINA\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":3},{\"hoursWorked\":4.75,\"employee\":\"Carlos AZUCINA RECINA\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":3}]\ntotal hours\ngross margin\nShop Fort Jaco gross margins:\nconfig.ini file available... using that\nconfig.ini file available... using that\nfoodcosts ok\nconfig.ini file available... using that\nsales ok\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":7.55,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.433333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.5,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.683333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.133333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.516666666666667,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.6,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.566666666666666,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.55,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.033333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.3333333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.633333333333334,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.616666666666666,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.666666666666667,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.533333333333333,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.2,\"employee\":\"Diana ARBELAEZ CORREA\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.766666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.1,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.716666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.75,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.116666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.31666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.95,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.7,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.08333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.633333333333334,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.933333333333334,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.23333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.13333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.55,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.35,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.583333333333333,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Nadine DEBROUX\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":2,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":0.75,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.53333333333333,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.55,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":11.36666666666667,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.46666666666667,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.18333333333333,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":1.25,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":3.833333333333333,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.066666666666666,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.383333333333334,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.41666666666667,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.35,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.6,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.15,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.18333333333333,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.133333333333334,\"employee\":\"Myriam VANDERHAEGEN\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.083333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.95,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.216666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.166666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.133333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.316666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.1,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.683333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.333333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.316666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.033333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.3,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.083333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.433333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.183333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.4,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.35,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.566666666666666,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.266666666666667,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.233333333333333,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.683333333333334,\"employee\":\"Armando APARICIO PEREZ\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.916666666666666,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.483333333333333,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.916666666666666,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.833333333333334,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.21666666666667,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.933333333333334,\"employee\":\"Esther ZHU\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.73333333333333,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":9.866666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.13333333333333,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.45,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.06666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.41666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.21666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.5,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.85,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Charlotte SNEYERS\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.15,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.4,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.333333333333333,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Luca BORGO\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.65,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.26666666666667,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.6,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.3,\"employee\":\"Maxime VANHAMME\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.733333333333333,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.2,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.45,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":6.666666666666667,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.683333333333334,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.1,\"employee\":\"Ronny BERT\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.916666666666667,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.616666666666666,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.216666666666667,\"employee\":\"Guy MAWETE\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.133333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.216666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.1,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.03333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":5.133333333333334,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.2,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.25,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":8.266666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.16666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.28333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":7.983333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.08333333333333,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":4},{\"hoursWorked\":10.11666666666667,\"employee\":\"Kris GALOPPIN\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":4}]\ntotal hours\ngross margin\nShop Woluwe gross margins:\nconfig.ini file available... using that\nconfig.ini file available... using that\nfoodcosts ok\nconfig.ini file available... using that\nsales ok\nconfig.ini file available... using that\n400\nNo match found for warehouse_id or tanda_location_id not set\ntotal hours\ngross margin\nShop Tongres gross margins:\nconfig.ini file available... using that\nconfig.ini file available... using that\nfoodcosts ok\nconfig.ini file available... using that\nsales ok\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":5.45,\"employee\":\"Armel KANDJEU\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.216666666666667,\"employee\":\"Armel KANDJEU\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.65,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.76666666666667,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.65,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.133333333333334,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.55,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.71666666666667,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":6.783333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.733333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":8.633333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":8.866666666666667,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":8.7,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.083333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":6.133333333333334,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":8.033333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.73333333333333,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.71666666666667,\"employee\":\"Aubin KANDJEU\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.95,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.73333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.16666666666667,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.333333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.98333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.28333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.13333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.83333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.3,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.18333333333333,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.85,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.4,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":11.1,\"employee\":\"Nicolas QUERTINMONT\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.06666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.43333333333333,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.4,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.15,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.216666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.46666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.48333333333333,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.416666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.33333333333333,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":6.7,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.466666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.15,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.416666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":0.95,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.21666666666667,\"employee\":\"Sanne DE LOOSE\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.4,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.133333333333334,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.08333333333333,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":7.483333333333333,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.25,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.08333333333333,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":12.1,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.166666666666667,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":10.36666666666667,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":2.116666666666667,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.3,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.45,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.35,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.6,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.233333333333333,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.983333333333333,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.333333333333333,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.216666666666667,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.2,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.4,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":5.75,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":4.466666666666667,\"employee\":\"Justine CORNET\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.166666666666667,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.266666666666667,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.083333333333333,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.333333333333333,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3.25,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":7},{\"hoursWorked\":3,\"employee\":\"Pauline POSOCCO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":7}]\ntotal hours\ngross margin\nShop Wemmel gross margins:\nconfig.ini file available... using that\nconfig.ini file available... using that\nfoodcosts ok\nconfig.ini file available... using that\nsales ok\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":11.43333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.1,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.95,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.01666666666667,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.98333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.33333333333333,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":5.166666666666667,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":3,\"employee\":\"Khalil BOUMESHED\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.06666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.56666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.45,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.53333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.03333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.46666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.76666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.13333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.83333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.31666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.73333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.46666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.76666666666667,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.43333333333333,\"employee\":\"Bram DE KEYSER\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.81666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.38333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.15,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.28333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":7.033333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.06666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.1,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.26666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":6.85,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.71666666666667,\"employee\":\"Marine JANSSENS\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.95,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.98333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.11666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.86666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.8,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":3.95,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.28333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.53333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.13333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.95,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.71666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.41666666666667,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.55,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":4.2,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Fernando HERNANDEZ GUARDADO\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.18333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.03333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.41666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.16666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.8,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":3.166666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.71666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.3,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.11666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.666666666666666,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.08333333333333,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.46666666666667,\"employee\":\"Paul GUERRERO\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.13333333333333,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.13333333333333,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.71666666666667,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11.6,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":6.3,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":11,\"employee\":\"Fatou YARA\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":4.5,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.85,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.76666666666667,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":10.65,\"employee\":\"Benjamin MOENECLAEY\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.333333333333334,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":9.266666666666667,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.5,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":8.45,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":12},{\"hoursWorked\":7.083333333333333,\"employee\":\"Cécile BOLSAIE\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":12}]\ntotal hours\ngross margin\nShop CHATELAIN gross margins:\nconfig.ini file available... using that\nconfig.ini file available... using that\nfoodcosts ok\nconfig.ini file available... using that\nsales ok\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":13.5,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":13.5,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":13.58333333333333,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":13.66666666666667,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":9.5,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":9.583333333333334,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":13.91666666666667,\"employee\":\"Jelle ERAERTS\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.56666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.68333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.9,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.35,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.43333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":11.01666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.53333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.53333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.95,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.71666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.65,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.48333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":8.416666666666666,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.41666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.63333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.51666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.66666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.48333333333333,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.56666666666667,\"employee\":\"Alessandra CHIANALE\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.81666666666667,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.4,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.46666666666667,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.4,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.78333333333333,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.35,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.53333333333333,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.3,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":5.666666666666667,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.6,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.46666666666667,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.6,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.2,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.433333333333334,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.333333333333333,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.266666666666666,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":2.266666666666667,\"employee\":\"Olivier HEES\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.26666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.43333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.16666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.08333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.48333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.3,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":6.266666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.6,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.48333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.2,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.03333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.36666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.41666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.51666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.46666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":2.466666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.38333333333333,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.36666666666667,\"employee\":\"Hubert VAN STRIEN\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.68333333333333,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":8.183333333333334,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.85,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.51666666666667,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":8.416666666666666,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":5.05,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":5.183333333333334,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":10.5,\"employee\":\"Kathy REGELBRUGGE\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":6.966666666666667,\"employee\":\"Mathis DENIS\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.9,\"employee\":\"Mathis DENIS\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":36},{\"hoursWorked\":7.533333333333333,\"employee\":\"Mathis DENIS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":36}]\ntotal hours\ngross margin\nShop OVERIJSE gross margins:\nconfig.ini file available... using that\nconfig.ini file available... using that\nfoodcosts ok\nconfig.ini file available... using that\nsales ok\nconfig.ini file available... using that\n200\n[{\"hoursWorked\":6.616666666666666,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.016666666666667,\"employee\":\"Anne LIPPENS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.333333333333333,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.333333333333333,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.45,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.35,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.45,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.05,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.3,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.31666666666667,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.233333333333333,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.3,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.1,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.55,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.41666666666667,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.31666666666667,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.2,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":2.4,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.55,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.51666666666667,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.11666666666667,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.35,\"employee\":\"Michel WOUTERS\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":9.116666666666667,\"employee\":\"Carine VERCRAYE\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.583333333333333,\"employee\":\"Carine VERCRAYE\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.533333333333333,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.85,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":12,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":9.75,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":12.16666666666667,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.15,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.883333333333334,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.65,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.583333333333333,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.25,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.75,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.66666666666667,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.083333333333333,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.666666666666667,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.56666666666667,\"employee\":\"Johan VAN GUCHT\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.083333333333333,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.25,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.133333333333334,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.15,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.483333333333333,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.25,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.283333333333333,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.3,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.166666666666667,\"employee\":\"Sylvie DE MEYER\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.4,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.95,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-02T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.05,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.833333333333333,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.916666666666667,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":3.466666666666667,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.533333333333333,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":8.85,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.466666666666667,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.116666666666666,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.833333333333333,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.233333333333333,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.983333333333333,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.066666666666666,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.2,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-21T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.1,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.266666666666667,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-23T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.25,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":3.666666666666667,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.05,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.2,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.133333333333334,\"employee\":\"Roos VANDEKERCKHOVE\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.1,\"employee\":\"Britt JOORIS\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.183333333333334,\"employee\":\"Britt JOORIS\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.033333333333333,\"employee\":\"Jules DE WITTE\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.033333333333333,\"employee\":\"Jules DE WITTE\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.05,\"employee\":\"Alix VERSTRAETEN\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":3.566666666666667,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-01T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.866666666666666,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-05T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.083333333333333,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.566666666666666,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-12T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":1.65,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":1.833333333333333,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-19T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.133333333333334,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.516666666666667,\"employee\":\"Stefanie VERMEERSCH\",\"date\":\"2023-03-26T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.15,\"employee\":\"Anna SCHEPENS\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.083333333333333,\"employee\":\"Anna SCHEPENS\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.016666666666667,\"employee\":\"Anna SCHEPENS\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.016666666666667,\"employee\":\"Anna SCHEPENS\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.233333333333333,\"employee\":\"Ella DE GRAEVE\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.1,\"employee\":\"Lies VERSTRAETEN\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.616666666666666,\"employee\":\"Lies VERSTRAETEN\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.58333333333333,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-03T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.75,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-06T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.8,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-07T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.016666666666667,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-08T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.25,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-09T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.183333333333334,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":3.5,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.333333333333333,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-13T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.75,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-14T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.76666666666667,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-15T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.18333333333333,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.05,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":10.18333333333333,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-20T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.716666666666667,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-22T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":11.28333333333333,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-24T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.383333333333334,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":9.266666666666667,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-27T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6.5,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-28T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":7.2,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-29T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.75,\"employee\":\"Thomas MOT\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6,\"employee\":\"Charlotte DE LANGE\",\"date\":\"2023-03-16T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6,\"employee\":\"Charlotte DE LANGE\",\"date\":\"2023-03-17T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5.25,\"employee\":\"Charlotte DE LANGE\",\"date\":\"2023-03-18T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4.166666666666667,\"employee\":\"Charlotte DE LANGE\",\"date\":\"2023-03-30T22:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5,\"employee\":\"Wout VERSTRAEYEN\",\"date\":\"2023-03-10T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":6,\"employee\":\"Wout VERSTRAEYEN\",\"date\":\"2023-03-25T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":4,\"employee\":\"Lisa DE BRUYKER CHABBA\",\"date\":\"2023-03-04T23:00:00.000Z\",\"warehouseId\":39},{\"hoursWorked\":5,\"employee\":\"Lisa DE BRUYKER CHABBA\",\"date\":\"2023-03-11T23:00:00.000Z\",\"warehouseId\":39}]\ntotal hours\ngross margin\nShop LATEM gross margins:\n\n\n\ndf = pd.DataFrame.from_dict(shop_stats, orient='index').round(2)\n\n\n\n\n\n\n\n\ngross_margin\ntotal_hours\ntotal_sales\ntotal_foodcosts\ntotal_foodcosts_atelier\ntotal_foodcosts_supplier\n\n\n\n\nLa Hulpe\n11302.20\n528.03\n68805.60\n41662.40\n34281.65\n7380.75\n\n\nFort Jaco\n29742.55\n786.03\n115598.02\n62274.47\n48670.34\n13604.13\n\n\nWoluwe\n28703.47\n1106.18\n135823.63\n73934.66\n61721.60\n12213.06\n\n\nTongres\n-14555.83\n0.00\n96901.45\n111457.28\n108300.61\n3156.67\n\n\nWemmel\n8448.25\n548.23\n63945.14\n39049.89\n32920.36\n6129.53\n\n\nCHATELAIN\n30169.48\n866.73\n126056.74\n69885.26\n56964.86\n12920.40\n\n\nOVERIJSE\n-2460.15\n709.73\n60874.05\n42042.20\n34244.76\n7797.44\n\n\nLATEM\n-1654.66\n855.88\n72003.99\n47982.15\n40084.04\n7898.11\n\n\n\n\n\n\n\n\ndisplay([n for n in df.index])\n# download the dataframe as a csv file\ndf.to_csv('gross_margin.csv')\n\nNameError: name 'df' is not defined\n\n\n\ndf['gross_margin_pct'] = (df['gross_margin'] / df['total_sales'] * 100).round(0)\n\n\ndf_pct = df.copy()\ndf_pct['gross_margin_pct'] = (df['gross_margin'] / df['total_sales'] * 100).round(0)\n# create a dataframe with the gross margin percentage, % of foodcosts atelier and % of foodcosts supplier\ndf_pct['foodcosts_atelier_pct'] = (df_pct['total_foodcosts_atelier'] / df_pct['total_sales'] * 100).round(0)\ndf_pct['foodcosts_supplier_pct'] = (df_pct['total_foodcosts_supplier'] / df_pct['total_sales'] * 100).round(0)\ndf_pct['wage_cost_pct'] = (df_pct['total_hours'] * FULLY_LOADED_COST_HOURS / df_pct['total_sales'] * 100).round(0)\n\ndf_pct = df_pct[['gross_margin_pct', 'foodcosts_atelier_pct', 'foodcosts_supplier_pct', 'wage_cost_pct']]\n# remove Tongres as it is a franchisee\ndf_pct = df_pct.drop('Tongres')\n# sort by gross margin percentage\ndf_pct = df_pct.sort_values(by=['gross_margin_pct'], ascending=False)\n# show all columns except gross_margin_pct and wage_cost_pct\n\ndisplay(df_pct[['foodcosts_atelier_pct', 'foodcosts_supplier_pct']])\n\n\n\n\n\n\n\n\nfoodcosts_atelier_pct\nfoodcosts_supplier_pct\n\n\n\n\nFort Jaco\n42.0\n12.0\n\n\nCHATELAIN\n45.0\n10.0\n\n\nWoluwe\n45.0\n9.0\n\n\nLa Hulpe\n50.0\n11.0\n\n\nWemmel\n51.0\n10.0\n\n\nLATEM\n56.0\n11.0\n\n\nOVERIJSE\n56.0\n13.0\n\n\n\n\n\n\n\n\n# create markdown table\nprint(df_pct.to_markdown())\n\n|           |   gross_margin_pct |   foodcosts_atelier_pct |   foodcosts_supplier_pct |   wage_cost_pct |\n|:----------|-------------------:|------------------------:|-------------------------:|----------------:|\n| Fort Jaco |                 26 |                      42 |                       12 |              20 |\n| CHATELAIN |                 24 |                      45 |                       10 |              21 |\n| Woluwe    |                 21 |                      45 |                        9 |              24 |\n| La Hulpe  |                 16 |                      50 |                       11 |              23 |\n| Wemmel    |                 13 |                      51 |                       10 |              26 |\n| LATEM     |                 -2 |                      56 |                       11 |              36 |\n| OVERIJSE  |                 -4 |                      56 |                       13 |              35 |\n\n\n\nget_gross_margin_for_month(\"2023-02-01\", \"2023-02-28\", 'PAVLOVA BAR ANVERS')\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n\n\n{'gross_margin': -3866.1100000000006,\n 'total_hours': 301.8,\n 'total_sales': 8256.74,\n 'total_foodcosts': 3068.85}\n\n\n\npavlova = {'gross_margin': -2357.1100000000006,\n 'total_hours': 301.8,\n 'total_sales': 8256.74,\n 'total_foodcosts': 3068.85}\n\n\n\n\nconfig.ini file available... using that"
  },
  {
    "objectID": "automatic-daily-report.html",
    "href": "automatic-daily-report.html",
    "title": "foodcosts",
    "section": "",
    "text": "get_last_four_weekday_dates\n\n get_last_four_weekday_dates ()\n\n\n\n\nget_weekday\n\n get_weekday (date)\n\n\n\n\nget_tomorrow\n\n get_tomorrow ()\n\n\n\n\nget_today\n\n get_today ()\n\n\n\n\nget_at_risk_of_loosing_title_cus_details_md\n\n get_at_risk_of_loosing_title_cus_details_md (customer_name,\n                                              total_purchase, location)\n\n\n\n\nget_cus_at_risk_of_loosing_title_md\n\n get_cus_at_risk_of_loosing_title_md ()\n\n\n\n\nget_no_sales_in_corporate_restaurant_md\n\n get_no_sales_in_corporate_restaurant_md ()\n\n\n\n\nget_corporate_restaurant_sales_title_md\n\n get_corporate_restaurant_sales_title_md ()\n\n\n\n\nget_stock_out_product_details_md\n\n get_stock_out_product_details_md (product_name, outlet)\n\n\n\n\nget_product_stock_out_title_md\n\n get_product_stock_out_title_md (outlet_type)\n\n\n\n\nget_sales_details_md\n\n get_sales_details_md (name, total_sale, weekday, avg_sales, change_pct,\n                       change)\n\n\n\n\nget_store_sales_title_md\n\n get_store_sales_title_md ()\n\n\n\n\nget_daily_report_top_md\n\n get_daily_report_top_md (date, day, total_sales, shops_total_sales,\n                          re_restaurants_total_sales, events_total_sales)\n\n\n\n\nget_email_subject\n\n get_email_subject (date)\n\n\n\n\nget_sales_details_html\n\n get_sales_details_html (sales_details_md, change)\n\n\n\n\nget_all_event_sales_as_pd\n\n get_all_event_sales_as_pd (start_date, end_date)\n\n\n\n\nget_all_corporate_restaurant_sales_as_pd\n\n get_all_corporate_restaurant_sales_as_pd (dates)\n\n\n\n\nget_all_shop_sales_as_pd\n\n get_all_shop_sales_as_pd (dates)\n\n\n\n\nget_corporate_restaurant_names\n\n get_corporate_restaurant_names ()\n\n\n\n\nget_products_sold_for_re_as_pd\n\n get_products_sold_for_re_as_pd (start_date, end_date)\n\n\n\n\nget_products_sold_for_shops_as_pd\n\n get_products_sold_for_shops_as_pd (start_date, end_date)\n\n\n\n\nget_pos_order_as_pd\n\n get_pos_order_as_pd (start_date, end_date)\n\n\n\n\nget_pos_order\n\n get_pos_order (start_date, end_date)\n\n\n\n\nget_change_percentage\n\n get_change_percentage (x, y)\n\n\n\n\ncompare_value_in_percentage\n\n compare_value_in_percentage (x, y)\n\n\n\n\nget_daily_report_top\n\n get_daily_report_top ()\n\n\n\n\nget_sales_per_shop\n\n get_sales_per_shop ()\n\n\n\n\nget_store_sales_title\n\n get_store_sales_title ()\n\n\n\n\nget_shop_product_likely_to_stock_out\n\n get_shop_product_likely_to_stock_out ()\n\n\n\n\nget_shop_product_stock_out_title\n\n get_shop_product_stock_out_title ()\n\n\n\n\nget_sales_per_re\n\n get_sales_per_re ()\n\n\n\n\nget_re_sales_title\n\n get_re_sales_title ()\n\n\n\n\nget_re_product_likely_to_stock_out\n\n get_re_product_likely_to_stock_out ()\n\n\n\n\nget_re_product_stock_out_title\n\n get_re_product_stock_out_title ()\n\n\n\n\nget_cus_at_risk_of_loosing_list\n\n get_cus_at_risk_of_loosing_list ()\n\n\n\n\nget_cus_at_risk_of_loosing_title\n\n get_cus_at_risk_of_loosing_title ()\n\n\n\n\nget_daily_report\n\n get_daily_report ()\n\n\n# core.send_mail(to='niloy.shown+a1@gmail.com',\n#           subject=get_email_subject(get_today()), body=daily_report_html)\n\n# core.send_mail(to='yann@fthek.be', subject=get_email_subject(get_today()),\n#           body=daily_report_html)"
  },
  {
    "objectID": "Corporate restaurants unit economics including wages.html",
    "href": "Corporate restaurants unit economics including wages.html",
    "title": "foodcosts",
    "section": "",
    "text": "import sys\nsys.path.append(\"..\")\nimport foodcosts.core as core\nimport requests\nimport json\nimport calendar\nimport pandas as pd\nfrom datetime import date\n\n\n\ncore.get_corporate_restaurants()\n\nconfig.ini file available... using that\n\n\n['R.E. ALLEN & OVERY',\n 'R.E. LHOIST CORBAIS',\n 'R.E. ZAVENTEM',\n 'R.E. CEFIC',\n 'R.E ALOST',\n 'R.E LHOIST NIVELLES',\n 'R.E LHOIST LIMELETTE',\n 'BOTANIC TOWER',\n 'R.E ENGIE',\n 'R.E THE HIVE',\n 'R.E EUROCONTROL',\n 'R.E LIGHTHOUSE',\n 'Immogra Park7',\n 'R.E. JanDeNul',\n 'ARAMIS',\n 'R.E. GLAVERBEL',\n 'R.E WPP']\n\n\n\n# fetch hours worked for a shop\n# use the API formation.fthek.be/api/hours_worked with body\n# {\n#   \"warehouse_id\": 2,\n#   \"yyyy_mm_dd\": \"2023-03-15\"\n# }\ndef get_hours_worked_for_a_shop_for_a_day(warehouse_id, yyyy_mm_dd):\n#   url = \"https://formation.fthek.be/api/hours_worked\"\n    url = \"http://localhost:3000/api/hours_worked/day\"\n    body = {\n        \"warehouse_id\": warehouse_id,\n        \"yyyy_mm_dd\": yyyy_mm_dd\n    }\n    response = requests.get(url, json=body)\n    print(response.status_code)\n    if response.status_code == 200:\n        return response.json()\n    else:\n        return None\n\ndef get_hours_worked_for_a_shop_for_a_month_per_employee(warehouse_id, yyyy_mm):\n#     url = \"https://formation.fthek.be/api/hours_worked/month\"\n    url = \"http://localhost:3000/api/hours_worked/month\"\n    body = {\n        \"warehouse_id\": warehouse_id,\n        \"yyyy_mm\": yyyy_mm\n    }\n    response = requests.get(url, json=body)\n    if response.status_code == 200:\n        return response.json()\n    else:\n        print(response.status_code)\n        print(response)\n        return None\n\n\n# call the API for a shop and a day\n# return the hours worked\nanswer = get_hours_worked_for_a_shop_for_a_day(core.get_corporate_restaurant_id('R.E ALOST'), \"2023-03-15\")\nprint(answer)\n\nconfig.ini file available... using that\n200\n[{'id': 2628124, 'name': 'Hans MANGELSCHOTS ', 'hours': 8.55}, {'id': 2849653, 'name': 'Bart PIRON ', 'hours': 8}, {'id': 3038011, 'name': 'Carla DE COCK', 'hours': 3.8333333333333335}]\n\n\n\n# sums the hours worked for a shop\n# input: [{'hours': 10.5, 'name': 'Kevin BETTE ', 'id': 2628104}, {'hours': 6.466666666666667, 'name': 'Massimo OLIVO ', 'id': 2786566}]\n\ndef sum_hours_worked_for_a_shop_and_day(warehouse_id, yyyy_mm_dd):\n    hours_worked = get_hours_worked_for_a_shop_for_a_day(warehouse_id, yyyy_mm_dd)\n    if hours_worked is None:\n        return 0\n    else:\n        return sum([h['hours'] for h in hours_worked])\n\n\n# example\nsum_hours_worked_for_a_shop_and_day(core.get_corporate_restaurant_id('R.E ALOST'), \"2023-03-15\")\n\nconfig.ini file available... using that\n200\n\n\n20.383333333333333\n\n\n\n# returns a list of days in format yyyy-mm-dd for a given month\n# input: 2023-03\ndef get_days_in_month(yyyy_mm):\n    # Split the input string into year and month\n    year, month = map(int, yyyy_mm.split('-'))\n\n    # Get the number of days in the given month and year\n    num_days = calendar.monthrange(year, month)[1]\n\n    # Generate a list of days in the given month and year\n    days = [date(year, month, day).strftime(\"%Y-%m-%d\") for day in range(1, num_days + 1)]\n\n    return days\n\n# returns the list of strings (format YYYY-MM-DD) in a period (start and end dates included)\n# start and end are in format YYYY-MM-DD\ndef get_days_in_period(start,end):\n    start = date.fromisoformat(start)\n    end = date.fromisoformat(end)\n    delta = end - start\n    dates = [start + pd.DateOffset(days=i) for i in range(delta.days + 1)]\n    return [d.strftime(\"%Y-%m-%d\") for d in dates]\n\n#example\nget_days_in_period(\"2023-03-01\", \"2023-03-04\")\n\n['2023-03-01', '2023-03-02', '2023-03-03', '2023-03-04']\n\n\n\n# Example usage:\nmonth = \"2023-02\"\ndays_in_month = get_days_in_month(month)\nprint(days_in_month)\n\n['2023-02-01', '2023-02-02', '2023-02-03', '2023-02-04', '2023-02-05', '2023-02-06', '2023-02-07', '2023-02-08', '2023-02-09', '2023-02-10', '2023-02-11', '2023-02-12', '2023-02-13', '2023-02-14', '2023-02-15', '2023-02-16', '2023-02-17', '2023-02-18', '2023-02-19', '2023-02-20', '2023-02-21', '2023-02-22', '2023-02-23', '2023-02-24', '2023-02-25', '2023-02-26', '2023-02-27', '2023-02-28']\n\n\n\n# returns the total hours worked for a shop in a given month\n# input: 2023-03\ndef get_hours_worked_for_a_shop_in_a_month(warehouse_id, yyyy_mm):\n    hours_worked = get_hours_worked_for_a_shop_for_a_month_per_employee(warehouse_id, yyyy_mm)\n    if hours_worked is None:\n        return 0\n    return sum([e['hours'] for e in hours_worked])\n\n\n# example\nhours_worked_in_alost = get_hours_worked_for_a_shop_in_a_month(core.get_corporate_restaurant_id('R.E ALOST'), \"2023-02\")\nprint(hours_worked_in_alost)\n\nconfig.ini file available... using that\n587.0666666666666\n\n\n\ndef get_hours_worked_for_a_shop_in_a_period(warehouse_id, start, end):\n    days_to_consider = get_days_in_period(start, end)\n    hours_worked = [get_hours_worked_for_a_shop_for_a_day(warehouse_id, day) for day in days_to_consider]\n    return sum([e['hours'] for e in hours_worked])\n\n\n# alost = core.get_sales_for_period_for_shop_per_day(\"2023-02-01\", \"2023-02-28\", \"R.E ALOST\")\nalost = core.get_sales_for_period_for_corporate_restaurant_per_day(\"2023-02-01\", \"2023-02-28\", \"R.E ALOST\")\n\nconfig.ini file available... using that\n\n\n\n# sum the total sales for a shop\nalost['total_sales'].sum()\n\n57214.99726\n\n\n\ncore.get_corporate_restaurants()\n\nconfig.ini file available... using that\n\n\n['R.E. ALLEN & OVERY',\n 'R.E. LHOIST CORBAIS',\n 'R.E. ZAVENTEM',\n 'R.E. CEFIC',\n 'R.E ALOST',\n 'R.E LHOIST NIVELLES',\n 'R.E LHOIST LIMELETTE',\n 'BOTANIC TOWER',\n 'R.E ENGIE',\n 'R.E THE HIVE',\n 'R.E EUROCONTROL',\n 'R.E LIGHTHOUSE',\n 'Immogra Park7',\n 'R.E. JanDeNul',\n 'ARAMIS',\n 'R.E. GLAVERBEL',\n 'R.E WPP']\n\n\n\n# foodcosts = core.get_food_costs_for_period_for_shop_per_day(\"2023-02-01\", \"2023-02-28\", \"La Hulpe\")\nfoodcosts = core.get_food_costs_for_period_for_resto_per_day(\"2023-02-01\", \"2023-02-28\", \"R.E ALOST\")\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\nfoodcosts.index = foodcosts['date']\nfoodcosts = foodcosts.drop('date', axis=1)\n\n\nfoodcosts\n\n\n\n\n\n\n\n\natelier\nsupplier\ntotal\n\n\ndate\n\n\n\n\n\n\n\n2023-02-01\n0\n181.09\n181.09\n\n\n2023-02-02\n0\n1478.15\n1478.15\n\n\n2023-02-03\n118.42\n196.51\n314.93\n\n\n2023-02-04\n0\n0\n0\n\n\n2023-02-05\n0\n0\n0\n\n\n2023-02-06\n0\n166.25\n166.25\n\n\n2023-02-07\n25.65\n1231.45\n1257.10\n\n\n2023-02-08\n0\n1727.81\n1727.81\n\n\n2023-02-09\n0\n0\n0\n\n\n2023-02-10\n326.82\n212.32\n539.14\n\n\n2023-02-11\n0\n0\n0\n\n\n2023-02-12\n0\n0\n0\n\n\n2023-02-13\n0\n1149.34\n1149.34\n\n\n2023-02-14\n420.82\n208.77\n629.59\n\n\n2023-02-15\n0\n651.83\n651.83\n\n\n2023-02-16\n0\n1316.98\n1316.98\n\n\n2023-02-17\n0\n217.57\n217.57\n\n\n2023-02-18\n0\n0\n0\n\n\n2023-02-19\n0\n0\n0\n\n\n2023-02-20\n0\n946.11\n946.11\n\n\n2023-02-21\n0\n211.60\n211.60\n\n\n2023-02-22\n0\n876.62\n876.62\n\n\n2023-02-23\n0\n925.79\n925.79\n\n\n2023-02-24\n179.93\n184.64\n364.57\n\n\n2023-02-25\n0\n0\n0\n\n\n2023-02-26\n0\n0\n0\n\n\n2023-02-27\n200.38\n178.13\n378.51\n\n\n2023-02-28\n57.21\n0\n57.21\n\n\n\n\n\n\n\n\nfoodcosts.sum()\n\natelier      1329.23\nsupplier    12060.96\ntotal       13390.19\ndtype: object\n\n\n\nFULLY_LOADED_COST_HOURS = 30 \n\n# month: 2023-02\n# returns the start and end day for a given month (format YYYY-MM-DD)\ndef get_start_and_end_day_for_month(month):\n    days_in_month = get_days_in_month(month)\n    return days_in_month[0], days_in_month[-1]\n\ndef get_gross_margin_for_month(month, shop_name):\n    start_date, end_date = get_start_and_end_day_for_month(month)\n    foodcosts = core.get_food_costs_for_period_for_resto_per_day(start_date, end_date, shop_name)\n    foodcosts.index = foodcosts['date']\n    foodcosts = foodcosts.drop('date', axis=1)\n    sales = core.get_sales_for_period_for_corporate_restaurant_per_day(start_date, end_date, shop_name)\n    total_hours = get_hours_worked_for_a_shop_in_a_month(core.get_corporate_restaurant_id(shop_name), month)\n    total_sales = sales['total_sales'].sum()\n    total_foodcosts = foodcosts['total'].sum()\n    gross_margin = float(total_sales) - float(total_foodcosts) - FULLY_LOADED_COST_HOURS * total_hours\n    return {\n        \"gross_margin\": gross_margin,\n        \"total_hours\": total_hours,\n        \"total_sales\": sales['total_sales'].sum(),\n        \"total_foodcosts\": foodcosts['total'].sum(),\n        \"total_foodcosts_atelier\": foodcosts['atelier'].sum(),\n        \"total_foodcosts_supplier\": foodcosts['supplier'].sum(),\n    }\n\n\nget_gross_margin_for_month(\"2023-02\",\"R.E ALOST\")\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n{'gross_margin': 26212.807259999994,\n 'total_hours': 587.0666666666666,\n 'total_sales': 57214.99726,\n 'total_foodcosts': Decimal('13390.19'),\n 'total_foodcosts_atelier': Decimal('1329.23'),\n 'total_foodcosts_supplier': Decimal('12060.96')}\n\n\n\n# shop_names = core.get_corporate_restaurants()\nshop_names = ['R.E. GLAVERBEL']\n# shop_stats = {}\nfor shop_name in shop_names:\n    gross_margin = get_gross_margin_for_month(\"2023-02\", shop_name)\n    print('shop ' + shop_name + ' gross margins:')\n    print(gross_margin)\n    shop_stats[shop_name] = gross_margin\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nshop R.E. GLAVERBEL gross margins:\n{'gross_margin': 11600.679549999993, 'total_hours': 574.8833333333334, 'total_sales': 51884.33955, 'total_foodcosts': Decimal('23037.16'), 'total_foodcosts_atelier': Decimal('12083.48'), 'total_foodcosts_supplier': Decimal('10953.68')}\n\n\n\ndf = pd.DataFrame.from_dict(shop_stats, orient='index').round(2)\n\n\ndisplay(df.sort_values('gross_margin'))\n\n\n\n\n\n\n\n\ngross_margin\ntotal_hours\ntotal_sales\ntotal_foodcosts\ntotal_foodcosts_atelier\ntotal_foodcosts_supplier\n\n\n\n\nR.E. CEFIC\n-15857.62\n289.80\n8953.16\n16116.78\n12477.63\n3639.15\n\n\nR.E LHOIST LIMELETTE\n-15176.90\n202.12\n3683.35\n12796.75\n11673.59\n1123.16\n\n\nR.E. LHOIST CORBAIS\n-14390.05\n244.17\n5241.16\n12306.21\n10633.40\n1672.81\n\n\nR.E. ALLEN & OVERY\n-8521.20\n303.78\n5894.24\n5301.94\n3583.22\n1718.72\n\n\nR.E LHOIST NIVELLES\n-7921.36\n133.40\n1848.87\n5768.23\n5184.39\n583.84\n\n\nImmogra Park7\n-6233.23\n142.10\n5491.49\n7461.72\n6824.70\n637.02\n\n\nARAMIS\n-2278.40\n112.08\n9658.66\n8574.56\n7591.45\n983.11\n\n\nR.E WPP\n-813.88\n143.82\n7606.11\n4105.49\n2976.95\n1128.54\n\n\nR.E LIGHTHOUSE\n1405.38\n126.18\n9685.41\n4494.53\n2779.05\n1715.48\n\n\nR.E. JanDeNul\n5011.77\n0.00\n10261.40\n5249.63\n5249.63\n0\n\n\nR.E THE HIVE\n5465.70\n317.20\n26614.97\n11633.27\n4699.20\n6934.07\n\n\nBOTANIC TOWER\n5997.42\n276.25\n24891.81\n10606.89\n2850.73\n7756.16\n\n\nR.E. GLAVERBEL\n11600.68\n574.88\n51884.34\n23037.16\n12083.48\n10953.68\n\n\nR.E ENGIE\n14152.01\n787.30\n75133.51\n37362.50\n20214.37\n17148.13\n\n\nR.E EUROCONTROL\n19779.01\n382.88\n52460.44\n21194.93\n13441.45\n7753.48\n\n\nR.E. ZAVENTEM\n21645.35\n765.75\n61359.38\n16741.53\n5426.79\n11314.74\n\n\nR.E ALOST\n26212.81\n587.07\n57215.00\n13390.19\n1329.23\n12060.96\n\n\n\n\n\n\n\n\ndf['gross_margin_pct'] = (df['gross_margin'] / df['total_sales'] * 100).round(0)\n\n\n# convert decimal to float\ndf['total_foodcosts_atelier'] = df['total_foodcosts_atelier'].astype(float)\ndf['total_foodcosts_supplier'] = df['total_foodcosts_supplier'].astype(float)\n\n\ndf_pct = df.copy()\ndf_pct['gross_margin_pct'] = (df['gross_margin'] / df['total_sales'] * 100).round(0)\n# create a dataframe with the gross margin percentage, % of foodcosts atelier and % of foodcosts supplier\ndf_pct['foodcosts_atelier_pct'] = (df_pct['total_foodcosts_atelier'] / df_pct['total_sales'] * 100).round(0)\ndf_pct['foodcosts_supplier_pct'] = (df_pct['total_foodcosts_supplier'] / df_pct['total_sales'] * 100).round(0)\ndf_pct['wage_cost_pct'] = (df_pct['total_hours'] * FULLY_LOADED_COST_HOURS / df_pct['total_sales'] * 100).round(0)\n\ndf_pct = df_pct[['gross_margin_pct', 'foodcosts_atelier_pct', 'foodcosts_supplier_pct', 'wage_cost_pct']]\n# sort by gross margin percentage\ndf_pct = df_pct.sort_values(by=['gross_margin_pct'], ascending=False)\n# show all columns except gross_margin_pct and wage_cost_pct\n\n# display(df_pct[['foodcosts_atelier_pct', 'foodcosts_supplier_pct']])\ndisplay(df_pct)\n\n\n\n\n\n\n\n\ngross_margin_pct\nfoodcosts_atelier_pct\nfoodcosts_supplier_pct\nwage_cost_pct\n\n\n\n\nR.E. JanDeNul\n49.0\n51.0\n0.0\n0.0\n\n\nR.E ALOST\n46.0\n2.0\n21.0\n31.0\n\n\nR.E EUROCONTROL\n38.0\n26.0\n15.0\n22.0\n\n\nR.E. ZAVENTEM\n35.0\n9.0\n18.0\n37.0\n\n\nBOTANIC TOWER\n24.0\n11.0\n31.0\n33.0\n\n\nR.E. GLAVERBEL\n22.0\n23.0\n21.0\n33.0\n\n\nR.E THE HIVE\n21.0\n18.0\n26.0\n36.0\n\n\nR.E ENGIE\n19.0\n27.0\n23.0\n31.0\n\n\nR.E LIGHTHOUSE\n15.0\n29.0\n18.0\n39.0\n\n\nR.E WPP\n-11.0\n39.0\n15.0\n57.0\n\n\nARAMIS\n-24.0\n79.0\n10.0\n35.0\n\n\nImmogra Park7\n-114.0\n124.0\n12.0\n78.0\n\n\nR.E. ALLEN & OVERY\n-145.0\n61.0\n29.0\n155.0\n\n\nR.E. CEFIC\n-177.0\n139.0\n41.0\n97.0\n\n\nR.E. LHOIST CORBAIS\n-275.0\n203.0\n32.0\n140.0\n\n\nR.E LHOIST LIMELETTE\n-412.0\n317.0\n30.0\n165.0\n\n\nR.E LHOIST NIVELLES\n-428.0\n280.0\n32.0\n216.0\n\n\n\n\n\n\n\n\n!pip install tabulate\n\nDEPRECATION: Configuring installation scheme with distutils config files is deprecated and will no longer work in the near future. If you are using a Homebrew or Linuxbrew Python, please see discussion at https://github.com/Homebrew/homebrew-core/issues/76621\nCollecting tabulate\n  Using cached tabulate-0.9.0-py3-none-any.whl (35 kB)\nInstalling collected packages: tabulate\n  DEPRECATION: Configuring installation scheme with distutils config files is deprecated and will no longer work in the near future. If you are using a Homebrew or Linuxbrew Python, please see discussion at https://github.com/Homebrew/homebrew-core/issues/76621\nDEPRECATION: Configuring installation scheme with distutils config files is deprecated and will no longer work in the near future. If you are using a Homebrew or Linuxbrew Python, please see discussion at https://github.com/Homebrew/homebrew-core/issues/76621\nSuccessfully installed tabulate-0.9.0\n\n[notice] A new release of pip available: 22.3.1 -&gt; 23.0.1\n[notice] To update, run: python3.9 -m pip install --upgrade pip\n\n\n\n# create markdown table\nprint(df_pct.to_markdown())\n\n|                      |   gross_margin_pct |   foodcosts_atelier_pct |   foodcosts_supplier_pct |   wage_cost_pct |\n|:---------------------|-------------------:|------------------------:|-------------------------:|----------------:|\n| R.E. JanDeNul        |                 49 |                      51 |                        0 |               0 |\n| R.E ALOST            |                 46 |                       2 |                       21 |              31 |\n| R.E EUROCONTROL      |                 38 |                      26 |                       15 |              22 |\n| R.E. ZAVENTEM        |                 35 |                       9 |                       18 |              37 |\n| BOTANIC TOWER        |                 24 |                      11 |                       31 |              33 |\n| R.E. GLAVERBEL       |                 22 |                      23 |                       21 |              33 |\n| R.E THE HIVE         |                 21 |                      18 |                       26 |              36 |\n| R.E ENGIE            |                 19 |                      27 |                       23 |              31 |\n| R.E LIGHTHOUSE       |                 15 |                      29 |                       18 |              39 |\n| R.E WPP              |                -11 |                      39 |                       15 |              57 |\n| ARAMIS               |                -24 |                      79 |                       10 |              35 |\n| Immogra Park7        |               -114 |                     124 |                       12 |              78 |\n| R.E. ALLEN & OVERY   |               -145 |                      61 |                       29 |             155 |\n| R.E. CEFIC           |               -177 |                     139 |                       41 |              97 |\n| R.E. LHOIST CORBAIS  |               -275 |                     203 |                       32 |             140 |\n| R.E LHOIST LIMELETTE |               -412 |                     317 |                       30 |             165 |\n| R.E LHOIST NIVELLES  |               -428 |                     280 |                       32 |             216 |\n\n\n\nget_gross_margin_for_month(\"2023-02-01\", \"2023-02-28\", 'PAVLOVA BAR ANVERS')\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n\n\n{'gross_margin': -3866.1100000000006,\n 'total_hours': 301.8,\n 'total_sales': 8256.74,\n 'total_foodcosts': 3068.85}\n\n\n\npavlova = {'gross_margin': -2357.1100000000006,\n 'total_hours': 301.8,\n 'total_sales': 8256.74,\n 'total_foodcosts': 3068.85}"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "foodcosts",
    "section": "",
    "text": "This file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "foodcosts",
    "section": "Install",
    "text": "Install\npip install foodcosts"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "foodcosts",
    "section": "How to use",
    "text": "How to use\nFill me in please! Don’t forget code examples:\n\n1+1\n\n2"
  },
  {
    "objectID": "shop_unit_economics.html",
    "href": "shop_unit_economics.html",
    "title": "foodcosts",
    "section": "",
    "text": "import sys\nsys.path.append('..')\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport foodcosts.core as core\nimport datetime\n\n\n\nstart_date = '2022-01-01'\nend_date = '2023-02-19'\n\n\ndef get_date_range(start_date, end_date):\n    # convert the input strings to datetime objects\n    start_dt = datetime.datetime.strptime(start_date, '%Y-%m-%d')\n    end_dt = datetime.datetime.strptime(end_date, '%Y-%m-%d')\n\n    # calculate the number of days between start and end, inclusive\n    num_days = (end_dt - start_dt).days + 1\n\n    # use a list comprehension to generate a list of date objects\n    dates = [start_dt.date() + datetime.timedelta(days=i) for i in range(num_days)]\n\n    return dates\n\n\ndef get_supplier_food_costs_period(start_date, end_date, shop = ''):\n    query = \"\"\"\n  SELECT\n    to_char(v_purchase_order.order_date, 'YYYY-MM-DD'),\n    sum(total_incl_vat) from v_purchase_order\n  LEFT JOIN v_supplier on v_supplier.id = v_purchase_order.supplier_id\n  LEFT JOIN v_shop on v_shop.id = v_purchase_order.shop_id\n  WHERE \n      v_purchase_order.order_date between '{}' and '{}' \n    \"\"\".format(start_date, end_date)\n    \n    if shop != '':\n        query += \"AND v_shop.name = ('{}')\".format(shop)\n    \n    query += \"GROUP BY v_shop.name, to_char(v_purchase_order.order_date, 'YYYY-MM-DD')\"                                                \n                          \n    return sorted(\n        [[datetime.datetime.strptime(row[0], '%Y-%m-%d'), row[1]] for row in core.make_sql_query(query)],\n        key=lambda x: x[0]\n    )\n\ndef get_atelier_food_costs_period(start_date, end_date, shop = ''):\n    query = \"\"\"\nselect \n    shop.id as shop_id,\n    shop.name as shop_name,\n    stats.day as date,\n    sum(stats.discounted_atelier_value_sent_htva) as discounted_atelier_value_sent_htva\nfrom v_shop_sales_statistics as stats \nleft join v_shop as shop on shop.id = stats.shop_id\nleft join pos_order_stat_day on pos_order_stat_day.day = stats.day and (pos_order_stat_day.interval &lt;&gt; 'month')\nwhere stats.day between '{}' and '{}' and discounted_atelier_value_sent_htva &lt; 10000\n    \"\"\".format(start_date, end_date)\n    \n    \n    if shop != '':\n        query += f\"\"\"AND shop.name = '{shop}'\"\"\"\n    \n    query += \"group by shop.id,shop.name,stats.day\"                                                \n                              \n    return sorted(\n        [[row[2], row[3]] for row in core.make_sql_query(query)],\n        key=lambda x: x[0]\n    )\n\n\ndef get_food_costs_period(start_date, end_date, shop = ''):\n    atelier = get_atelier_food_costs_period(start_date,end_date, shop=shop)\n    atelier_dict = { date: amount for date,amount in atelier }\n    supplier = get_supplier_food_costs_period(start_date, end_date,shop=shop)\n    supplier_dict = { date.date(): amount for date,amount in supplier }\n    date_range = get_date_range(start_date,end_date)\n    res = []\n    atelier_totals = []\n    supplier_totals = []\n    for date in date_range:\n        \n        atelier_for_date = atelier_dict[date] if date in atelier_dict else 0\n        supplier_for_date = supplier_dict[date] if date in supplier_dict else 0\n        \n        atelier_totals.append([date, atelier_for_date])\n        supplier_totals.append([date, supplier_for_date])        \n        \n        res.append([date, \n                    (atelier_for_date if atelier_for_date != None else 0) + \n                    (supplier_for_date if not supplier_for_date != None else 0)\n                   ])\n        \n    print('wtf',supplier_totals)    \n    return res\n\n\ndef run():\n    start_date = '2022-01-01'\n    end_date = '2022-12-31'\n    return get_food_costs_period(start_date, end_date, 'LATEM')        \nrun()\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nwtf [[datetime.date(2022, 1, 1), 0], [datetime.date(2022, 1, 2), Decimal('84.89')], [datetime.date(2022, 1, 3), Decimal('308.16')], [datetime.date(2022, 1, 4), Decimal('731.66')], [datetime.date(2022, 1, 5), Decimal('23.74')], [datetime.date(2022, 1, 6), Decimal('122.79')], [datetime.date(2022, 1, 7), Decimal('163.14')], [datetime.date(2022, 1, 8), 0], [datetime.date(2022, 1, 9), Decimal('94.26')], [datetime.date(2022, 1, 10), Decimal('939.22')], [datetime.date(2022, 1, 11), Decimal('318.57')], [datetime.date(2022, 1, 12), Decimal('474.65')], [datetime.date(2022, 1, 13), 0], [datetime.date(2022, 1, 14), Decimal('592.43')], [datetime.date(2022, 1, 15), 0], [datetime.date(2022, 1, 16), Decimal('115.48')], [datetime.date(2022, 1, 17), Decimal('480.34')], [datetime.date(2022, 1, 18), 0], [datetime.date(2022, 1, 19), Decimal('536.78')], [datetime.date(2022, 1, 20), 0], [datetime.date(2022, 1, 21), Decimal('520.63')], [datetime.date(2022, 1, 22), 0], [datetime.date(2022, 1, 23), Decimal('154.49')], [datetime.date(2022, 1, 24), Decimal('663.84')], [datetime.date(2022, 1, 25), Decimal('169.65')], [datetime.date(2022, 1, 26), 0], [datetime.date(2022, 1, 27), Decimal('184.60')], [datetime.date(2022, 1, 28), Decimal('695.11')], [datetime.date(2022, 1, 29), 0], [datetime.date(2022, 1, 30), Decimal('253.65')], [datetime.date(2022, 1, 31), Decimal('216.42')], [datetime.date(2022, 2, 1), Decimal('154.49')], [datetime.date(2022, 2, 2), 0], [datetime.date(2022, 2, 3), Decimal('810.39')], [datetime.date(2022, 2, 4), Decimal('143.07')], [datetime.date(2022, 2, 5), 0], [datetime.date(2022, 2, 6), 0], [datetime.date(2022, 2, 7), Decimal('564.96')], [datetime.date(2022, 2, 8), 0], [datetime.date(2022, 2, 9), Decimal('377.42')], [datetime.date(2022, 2, 10), 0], [datetime.date(2022, 2, 11), Decimal('521.42')], [datetime.date(2022, 2, 12), 0], [datetime.date(2022, 2, 13), 0], [datetime.date(2022, 2, 14), Decimal('116.79')], [datetime.date(2022, 2, 15), Decimal('736.86')], [datetime.date(2022, 2, 16), Decimal('218.53')], [datetime.date(2022, 2, 17), Decimal('387.65')], [datetime.date(2022, 2, 18), 0], [datetime.date(2022, 2, 19), Decimal('71.61')], [datetime.date(2022, 2, 20), Decimal('533.24')], [datetime.date(2022, 2, 21), Decimal('396.95')], [datetime.date(2022, 2, 22), Decimal('173.48')], [datetime.date(2022, 2, 23), Decimal('290.53')], [datetime.date(2022, 2, 24), Decimal('333.56')], [datetime.date(2022, 2, 25), Decimal('601.03')], [datetime.date(2022, 2, 26), 0], [datetime.date(2022, 2, 27), Decimal('93.64')], [datetime.date(2022, 2, 28), Decimal('495.93')], [datetime.date(2022, 3, 1), Decimal('123.57')], [datetime.date(2022, 3, 2), Decimal('444.39')], [datetime.date(2022, 3, 3), Decimal('171.50')], [datetime.date(2022, 3, 4), Decimal('378.02')], [datetime.date(2022, 3, 5), 0], [datetime.date(2022, 3, 6), Decimal('309.64')], [datetime.date(2022, 3, 7), Decimal('544.21')], [datetime.date(2022, 3, 8), 0], [datetime.date(2022, 3, 9), Decimal('266.05')], [datetime.date(2022, 3, 10), Decimal('322.05')], [datetime.date(2022, 3, 11), Decimal('680.35')], [datetime.date(2022, 3, 12), 0], [datetime.date(2022, 3, 13), Decimal('100.84')], [datetime.date(2022, 3, 14), Decimal('498.53')], [datetime.date(2022, 3, 15), Decimal('128.99')], [datetime.date(2022, 3, 16), Decimal('433.40')], [datetime.date(2022, 3, 17), Decimal('417.86')], [datetime.date(2022, 3, 18), Decimal('681.91')], [datetime.date(2022, 3, 19), 0], [datetime.date(2022, 3, 20), 0], [datetime.date(2022, 3, 21), Decimal('560.55')], [datetime.date(2022, 3, 22), Decimal('187.34')], [datetime.date(2022, 3, 23), Decimal('225.85')], [datetime.date(2022, 3, 24), Decimal('311.82')], [datetime.date(2022, 3, 25), Decimal('276.73')], [datetime.date(2022, 3, 26), 0], [datetime.date(2022, 3, 27), 0], [datetime.date(2022, 3, 28), Decimal('807.55')], [datetime.date(2022, 3, 29), Decimal('74.64')], [datetime.date(2022, 3, 30), Decimal('91.08')], [datetime.date(2022, 3, 31), Decimal('503.28')], [datetime.date(2022, 4, 1), Decimal('529.66')], [datetime.date(2022, 4, 2), 0], [datetime.date(2022, 4, 3), 0], [datetime.date(2022, 4, 4), Decimal('405.27')], [datetime.date(2022, 4, 5), Decimal('500.21')], [datetime.date(2022, 4, 6), 0], [datetime.date(2022, 4, 7), Decimal('255.95')], [datetime.date(2022, 4, 8), Decimal('450.20')], [datetime.date(2022, 4, 9), 0], [datetime.date(2022, 4, 10), 0], [datetime.date(2022, 4, 11), Decimal('660.51')], [datetime.date(2022, 4, 12), Decimal('311.33')], [datetime.date(2022, 4, 13), Decimal('350.77')], [datetime.date(2022, 4, 14), Decimal('142.57')], [datetime.date(2022, 4, 15), Decimal('797.56')], [datetime.date(2022, 4, 16), 0], [datetime.date(2022, 4, 17), 0], [datetime.date(2022, 4, 18), Decimal('989.15')], [datetime.date(2022, 4, 19), Decimal('26.39')], [datetime.date(2022, 4, 20), 0], [datetime.date(2022, 4, 21), Decimal('612.41')], [datetime.date(2022, 4, 22), Decimal('407.85')], [datetime.date(2022, 4, 23), 0], [datetime.date(2022, 4, 24), Decimal('730.05')], [datetime.date(2022, 4, 25), 0], [datetime.date(2022, 4, 26), 0], [datetime.date(2022, 4, 27), 0], [datetime.date(2022, 4, 28), Decimal('125.20')], [datetime.date(2022, 4, 29), Decimal('734.00')], [datetime.date(2022, 4, 30), 0], [datetime.date(2022, 5, 1), 0], [datetime.date(2022, 5, 2), Decimal('390.84')], [datetime.date(2022, 5, 3), Decimal('470.41')], [datetime.date(2022, 5, 4), 0], [datetime.date(2022, 5, 5), Decimal('871.64')], [datetime.date(2022, 5, 6), Decimal('575.57')], [datetime.date(2022, 5, 7), 0], [datetime.date(2022, 5, 8), 0], [datetime.date(2022, 5, 9), Decimal('1119.81')], [datetime.date(2022, 5, 10), 0], [datetime.date(2022, 5, 11), Decimal('269.61')], [datetime.date(2022, 5, 12), Decimal('625.14')], [datetime.date(2022, 5, 13), Decimal('590.43')], [datetime.date(2022, 5, 14), 0], [datetime.date(2022, 5, 15), 0], [datetime.date(2022, 5, 16), Decimal('1173.93')], [datetime.date(2022, 5, 17), 0], [datetime.date(2022, 5, 18), Decimal('540.29')], [datetime.date(2022, 5, 19), Decimal('774.82')], [datetime.date(2022, 5, 20), Decimal('284.63')], [datetime.date(2022, 5, 21), 0], [datetime.date(2022, 5, 22), 0], [datetime.date(2022, 5, 23), Decimal('1094.58')], [datetime.date(2022, 5, 24), Decimal('187.83')], [datetime.date(2022, 5, 25), 0], [datetime.date(2022, 5, 26), 0], [datetime.date(2022, 5, 27), Decimal('1713.58')], [datetime.date(2022, 5, 28), 0], [datetime.date(2022, 5, 29), Decimal('127.78')], [datetime.date(2022, 5, 30), Decimal('361.20')], [datetime.date(2022, 5, 31), 0], [datetime.date(2022, 6, 1), Decimal('198.51')], [datetime.date(2022, 6, 2), Decimal('651.05')], [datetime.date(2022, 6, 3), Decimal('574.72')], [datetime.date(2022, 6, 4), 0], [datetime.date(2022, 6, 5), 0], [datetime.date(2022, 6, 6), Decimal('292.99')], [datetime.date(2022, 6, 7), Decimal('602.68')], [datetime.date(2022, 6, 8), Decimal('678.07')], [datetime.date(2022, 6, 9), Decimal('210.29')], [datetime.date(2022, 6, 10), Decimal('646.23')], [datetime.date(2022, 6, 11), 0], [datetime.date(2022, 6, 12), 0], [datetime.date(2022, 6, 13), Decimal('239.45')], [datetime.date(2022, 6, 14), Decimal('542.87')], [datetime.date(2022, 6, 15), Decimal('672.70')], [datetime.date(2022, 6, 16), Decimal('684.51')], [datetime.date(2022, 6, 17), Decimal('734.79')], [datetime.date(2022, 6, 18), 0], [datetime.date(2022, 6, 19), 0], [datetime.date(2022, 6, 20), Decimal('714.84')], [datetime.date(2022, 6, 21), Decimal('97.75')], [datetime.date(2022, 6, 22), Decimal('658.24')], [datetime.date(2022, 6, 23), Decimal('699.92')], [datetime.date(2022, 6, 24), Decimal('449.17')], [datetime.date(2022, 6, 25), 0], [datetime.date(2022, 6, 26), 0], [datetime.date(2022, 6, 27), Decimal('867.70')], [datetime.date(2022, 6, 28), Decimal('180.12')], [datetime.date(2022, 6, 29), Decimal('607.09')], [datetime.date(2022, 6, 30), Decimal('680.33')], [datetime.date(2022, 7, 1), Decimal('367.42')], [datetime.date(2022, 7, 2), 0], [datetime.date(2022, 7, 3), Decimal('915.22')], [datetime.date(2022, 7, 4), Decimal('167.65')], [datetime.date(2022, 7, 5), Decimal('139.77')], [datetime.date(2022, 7, 6), Decimal('475.97')], [datetime.date(2022, 7, 7), Decimal('304.17')], [datetime.date(2022, 7, 8), Decimal('973.15')], [datetime.date(2022, 7, 9), 0], [datetime.date(2022, 7, 10), 0], [datetime.date(2022, 7, 11), Decimal('561.70')], [datetime.date(2022, 7, 12), Decimal('357.60')], [datetime.date(2022, 7, 13), Decimal('741.73')], [datetime.date(2022, 7, 14), Decimal('223.07')], [datetime.date(2022, 7, 15), Decimal('1015.35')], [datetime.date(2022, 7, 16), 0], [datetime.date(2022, 7, 17), 0], [datetime.date(2022, 7, 18), Decimal('452.30')], [datetime.date(2022, 7, 19), Decimal('1116.77')], [datetime.date(2022, 7, 20), 0], [datetime.date(2022, 7, 21), Decimal('672.16')], [datetime.date(2022, 7, 22), Decimal('1162.94')], [datetime.date(2022, 7, 23), 0], [datetime.date(2022, 7, 24), Decimal('26.92')], [datetime.date(2022, 7, 25), Decimal('1003.58')], [datetime.date(2022, 7, 26), Decimal('116.39')], [datetime.date(2022, 7, 27), Decimal('610.16')], [datetime.date(2022, 7, 28), 0], [datetime.date(2022, 7, 29), Decimal('700.95')], [datetime.date(2022, 7, 30), 0], [datetime.date(2022, 7, 31), 0], [datetime.date(2022, 8, 1), Decimal('1108.71')], [datetime.date(2022, 8, 2), Decimal('210.31')], [datetime.date(2022, 8, 3), Decimal('509.79')], [datetime.date(2022, 8, 4), Decimal('139.77')], [datetime.date(2022, 8, 5), Decimal('959.28')], [datetime.date(2022, 8, 6), 0], [datetime.date(2022, 8, 7), 0], [datetime.date(2022, 8, 8), Decimal('1012.23')], [datetime.date(2022, 8, 9), Decimal('114.10')], [datetime.date(2022, 8, 10), Decimal('67.98')], [datetime.date(2022, 8, 11), Decimal('785.43')], [datetime.date(2022, 8, 12), Decimal('430.42')], [datetime.date(2022, 8, 13), 0], [datetime.date(2022, 8, 14), 0], [datetime.date(2022, 8, 15), Decimal('370.98')], [datetime.date(2022, 8, 16), Decimal('404.21')], [datetime.date(2022, 8, 17), Decimal('761.25')], [datetime.date(2022, 8, 18), Decimal('158.02')], [datetime.date(2022, 8, 19), Decimal('719.20')], [datetime.date(2022, 8, 20), 0], [datetime.date(2022, 8, 21), 0], [datetime.date(2022, 8, 22), Decimal('882.50')], [datetime.date(2022, 8, 23), 0], [datetime.date(2022, 8, 24), Decimal('551.21')], [datetime.date(2022, 8, 25), Decimal('581.24')], [datetime.date(2022, 8, 26), Decimal('973.85')], [datetime.date(2022, 8, 27), 0], [datetime.date(2022, 8, 28), 0], [datetime.date(2022, 8, 29), Decimal('464.20')], [datetime.date(2022, 8, 30), Decimal('996.79')], [datetime.date(2022, 8, 31), Decimal('118.25')], [datetime.date(2022, 9, 1), Decimal('351.24')], [datetime.date(2022, 9, 2), Decimal('643.49')], [datetime.date(2022, 9, 3), 0], [datetime.date(2022, 9, 4), 0], [datetime.date(2022, 9, 5), Decimal('711.18')], [datetime.date(2022, 9, 6), Decimal('120.14')], [datetime.date(2022, 9, 7), Decimal('566.53')], [datetime.date(2022, 9, 8), Decimal('569.49')], [datetime.date(2022, 9, 9), Decimal('591.70')], [datetime.date(2022, 9, 10), 0], [datetime.date(2022, 9, 11), 0], [datetime.date(2022, 9, 12), Decimal('378.70')], [datetime.date(2022, 9, 13), Decimal('458.78')], [datetime.date(2022, 9, 14), Decimal('430.68')], [datetime.date(2022, 9, 15), 0], [datetime.date(2022, 9, 16), Decimal('830.87')], [datetime.date(2022, 9, 17), 0], [datetime.date(2022, 9, 18), 0], [datetime.date(2022, 9, 19), Decimal('889.59')], [datetime.date(2022, 9, 20), Decimal('136.69')], [datetime.date(2022, 9, 21), Decimal('601.16')], [datetime.date(2022, 9, 22), Decimal('741.22')], [datetime.date(2022, 9, 23), Decimal('681.81')], [datetime.date(2022, 9, 24), 0], [datetime.date(2022, 9, 25), 0], [datetime.date(2022, 9, 26), Decimal('803.53')], [datetime.date(2022, 9, 27), Decimal('282.38')], [datetime.date(2022, 9, 28), Decimal('677.12')], [datetime.date(2022, 9, 29), 0], [datetime.date(2022, 9, 30), Decimal('496.10')], [datetime.date(2022, 10, 1), 0], [datetime.date(2022, 10, 2), Decimal('784.06')], [datetime.date(2022, 10, 3), Decimal('58.83')], [datetime.date(2022, 10, 4), Decimal('108.88')], [datetime.date(2022, 10, 5), Decimal('127.06')], [datetime.date(2022, 10, 6), Decimal('538.89')], [datetime.date(2022, 10, 7), Decimal('536.66')], [datetime.date(2022, 10, 8), 0], [datetime.date(2022, 10, 9), Decimal('36.06')], [datetime.date(2022, 10, 10), Decimal('111.86')], [datetime.date(2022, 10, 11), Decimal('114.41')], [datetime.date(2022, 10, 12), Decimal('348.95')], [datetime.date(2022, 10, 13), Decimal('339.85')], [datetime.date(2022, 10, 14), Decimal('768.69')], [datetime.date(2022, 10, 15), 0], [datetime.date(2022, 10, 16), Decimal('98.26')], [datetime.date(2022, 10, 17), Decimal('607.08')], [datetime.date(2022, 10, 18), Decimal('87.19')], [datetime.date(2022, 10, 19), Decimal('519.82')], [datetime.date(2022, 10, 20), Decimal('626.55')], [datetime.date(2022, 10, 21), Decimal('224.59')], [datetime.date(2022, 10, 22), 0], [datetime.date(2022, 10, 23), 0], [datetime.date(2022, 10, 24), Decimal('733.13')], [datetime.date(2022, 10, 25), Decimal('111.86')], [datetime.date(2022, 10, 26), Decimal('590.26')], [datetime.date(2022, 10, 27), Decimal('304.20')], [datetime.date(2022, 10, 28), Decimal('975.22')], [datetime.date(2022, 10, 29), 0], [datetime.date(2022, 10, 30), Decimal('298.86')], [datetime.date(2022, 10, 31), 0], [datetime.date(2022, 11, 1), Decimal('309.64')], [datetime.date(2022, 11, 2), Decimal('445.37')], [datetime.date(2022, 11, 3), Decimal('295.90')], [datetime.date(2022, 11, 4), Decimal('863.87')], [datetime.date(2022, 11, 5), 0], [datetime.date(2022, 11, 6), Decimal('113.41')], [datetime.date(2022, 11, 7), 0], [datetime.date(2022, 11, 8), Decimal('303.69')], [datetime.date(2022, 11, 9), Decimal('577.56')], [datetime.date(2022, 11, 10), Decimal('689.80')], [datetime.date(2022, 11, 11), Decimal('49.10')], [datetime.date(2022, 11, 12), Decimal('324.82')], [datetime.date(2022, 11, 13), 0], [datetime.date(2022, 11, 14), Decimal('371.60')], [datetime.date(2022, 11, 15), Decimal('84.21')], [datetime.date(2022, 11, 16), Decimal('311.12')], [datetime.date(2022, 11, 17), Decimal('109.73')], [datetime.date(2022, 11, 18), Decimal('746.67')], [datetime.date(2022, 11, 19), 0], [datetime.date(2022, 11, 20), 0], [datetime.date(2022, 11, 21), Decimal('235.49')], [datetime.date(2022, 11, 22), Decimal('105.77')], [datetime.date(2022, 11, 23), Decimal('233.68')], [datetime.date(2022, 11, 24), Decimal('115.52')], [datetime.date(2022, 11, 25), Decimal('647.80')], [datetime.date(2022, 11, 26), 0], [datetime.date(2022, 11, 27), Decimal('363.63')], [datetime.date(2022, 11, 28), Decimal('307.93')], [datetime.date(2022, 11, 29), 0], [datetime.date(2022, 11, 30), Decimal('115.24')], [datetime.date(2022, 12, 1), Decimal('67.93')], [datetime.date(2022, 12, 2), Decimal('910.95')], [datetime.date(2022, 12, 3), 0], [datetime.date(2022, 12, 4), Decimal('100.81')], [datetime.date(2022, 12, 5), Decimal('309.82')], [datetime.date(2022, 12, 6), Decimal('104.26')], [datetime.date(2022, 12, 7), 0], [datetime.date(2022, 12, 8), Decimal('1168.81')], [datetime.date(2022, 12, 9), Decimal('491.05')], [datetime.date(2022, 12, 10), 0], [datetime.date(2022, 12, 11), 0], [datetime.date(2022, 12, 12), Decimal('316.41')], [datetime.date(2022, 12, 13), Decimal('579.25')], [datetime.date(2022, 12, 14), Decimal('287.17')], [datetime.date(2022, 12, 15), Decimal('266.41')], [datetime.date(2022, 12, 16), Decimal('848.85')], [datetime.date(2022, 12, 17), 0], [datetime.date(2022, 12, 18), Decimal('283.45')], [datetime.date(2022, 12, 19), Decimal('80.98')], [datetime.date(2022, 12, 20), Decimal('440.94')], [datetime.date(2022, 12, 21), Decimal('741.95')], [datetime.date(2022, 12, 22), Decimal('1270.38')], [datetime.date(2022, 12, 23), Decimal('265.93')], [datetime.date(2022, 12, 24), 0], [datetime.date(2022, 12, 25), 0], [datetime.date(2022, 12, 26), Decimal('802.10')], [datetime.date(2022, 12, 27), 0], [datetime.date(2022, 12, 28), 0], [datetime.date(2022, 12, 29), Decimal('580.77')], [datetime.date(2022, 12, 30), Decimal('218.25')], [datetime.date(2022, 12, 31), 0]]\n\n\n[[datetime.date(2022, 1, 1), 0],\n [datetime.date(2022, 1, 2), Decimal('2393.30')],\n [datetime.date(2022, 1, 3), Decimal('1901.83')],\n [datetime.date(2022, 1, 4), Decimal('1750.97')],\n [datetime.date(2022, 1, 5), Decimal('2091.68')],\n [datetime.date(2022, 1, 6), Decimal('2351.82')],\n [datetime.date(2022, 1, 7), Decimal('1146.85')],\n [datetime.date(2022, 1, 8), Decimal('1260.79')],\n [datetime.date(2022, 1, 9), Decimal('2683.43')],\n [datetime.date(2022, 1, 10), Decimal('918.85')],\n [datetime.date(2022, 1, 11), Decimal('1498.36')],\n [datetime.date(2022, 1, 12), Decimal('1148.81')],\n [datetime.date(2022, 1, 13), Decimal('1672.73')],\n [datetime.date(2022, 1, 14), Decimal('1841.60')],\n [datetime.date(2022, 1, 15), Decimal('1375.06')],\n [datetime.date(2022, 1, 16), Decimal('2241.38')],\n [datetime.date(2022, 1, 17), Decimal('1488.07')],\n [datetime.date(2022, 1, 18), Decimal('2233.36')],\n [datetime.date(2022, 1, 19), Decimal('2060.74')],\n [datetime.date(2022, 1, 20), Decimal('1761.80')],\n [datetime.date(2022, 1, 21), Decimal('376.09')],\n [datetime.date(2022, 1, 22), Decimal('2389.62')],\n [datetime.date(2022, 1, 23), Decimal('3707.71')],\n [datetime.date(2022, 1, 24), Decimal('3314.52')],\n [datetime.date(2022, 1, 25), Decimal('2470.14')],\n [datetime.date(2022, 1, 26), Decimal('788.63')],\n [datetime.date(2022, 1, 27), Decimal('2492.08')],\n [datetime.date(2022, 1, 28), Decimal('999.82')],\n [datetime.date(2022, 1, 29), Decimal('2000.11')],\n [datetime.date(2022, 1, 30), Decimal('3669.25')],\n [datetime.date(2022, 1, 31), Decimal('653.68')],\n [datetime.date(2022, 2, 1), Decimal('2447.21')],\n [datetime.date(2022, 2, 2), Decimal('1379.69')],\n [datetime.date(2022, 2, 3), Decimal('829.77')],\n [datetime.date(2022, 2, 4), Decimal('2532.10')],\n [datetime.date(2022, 2, 5), Decimal('879.65')],\n [datetime.date(2022, 2, 6), Decimal('3585.49')],\n [datetime.date(2022, 2, 7), Decimal('1187.45')],\n [datetime.date(2022, 2, 8), Decimal('2483.67')],\n [datetime.date(2022, 2, 9), Decimal('1523.55')],\n [datetime.date(2022, 2, 10), Decimal('962.71')],\n [datetime.date(2022, 2, 11), Decimal('1503.13')],\n [datetime.date(2022, 2, 12), Decimal('854.61')],\n [datetime.date(2022, 2, 13), Decimal('3672.88')],\n [datetime.date(2022, 2, 14), Decimal('2407.25')],\n [datetime.date(2022, 2, 15), Decimal('1963.02')],\n [datetime.date(2022, 2, 16), Decimal('220.60')],\n [datetime.date(2022, 2, 17), Decimal('2004.03')],\n [datetime.date(2022, 2, 18), Decimal('2153.97')],\n [datetime.date(2022, 2, 19), Decimal('898.64')],\n [datetime.date(2022, 2, 20), Decimal('3005.43')],\n [datetime.date(2022, 2, 21), Decimal('823.43')],\n [datetime.date(2022, 2, 22), Decimal('2400.70')],\n [datetime.date(2022, 2, 23), Decimal('1269.69')],\n [datetime.date(2022, 2, 24), Decimal('1686.90')],\n [datetime.date(2022, 2, 25), Decimal('1849.70')],\n [datetime.date(2022, 2, 26), Decimal('1013.45')],\n [datetime.date(2022, 2, 27), Decimal('3513.78')],\n [datetime.date(2022, 2, 28), Decimal('1791.04')],\n [datetime.date(2022, 3, 1), Decimal('2009.84')],\n [datetime.date(2022, 3, 2), Decimal('551.84')],\n [datetime.date(2022, 3, 3), Decimal('2834.10')],\n [datetime.date(2022, 3, 4), Decimal('1280.46')],\n [datetime.date(2022, 3, 5), Decimal('833.47')],\n [datetime.date(2022, 3, 6), Decimal('2937.44')],\n [datetime.date(2022, 3, 7), Decimal('1285.73')],\n [datetime.date(2022, 3, 8), Decimal('2167.65')],\n [datetime.date(2022, 3, 9), Decimal('1107.34')],\n [datetime.date(2022, 3, 10), Decimal('1459.06')],\n [datetime.date(2022, 3, 11), Decimal('1090.77')],\n [datetime.date(2022, 3, 12), Decimal('1402.40')],\n [datetime.date(2022, 3, 13), Decimal('2874.73')],\n [datetime.date(2022, 3, 14), Decimal('1355.48')],\n [datetime.date(2022, 3, 15), Decimal('2040.40')],\n [datetime.date(2022, 3, 16), Decimal('1379.24')],\n [datetime.date(2022, 3, 17), Decimal('2930.40')],\n [datetime.date(2022, 3, 18), Decimal('1752.49')],\n [datetime.date(2022, 3, 19), Decimal('1404.83')],\n [datetime.date(2022, 3, 20), Decimal('3286.63')],\n [datetime.date(2022, 3, 21), Decimal('836.37')],\n [datetime.date(2022, 3, 22), Decimal('1303.82')],\n [datetime.date(2022, 3, 23), Decimal('1724.11')],\n [datetime.date(2022, 3, 24), Decimal('3049.06')],\n [datetime.date(2022, 3, 25), Decimal('1899.94')],\n [datetime.date(2022, 3, 26), Decimal('841.39')],\n [datetime.date(2022, 3, 27), Decimal('2358.85')],\n [datetime.date(2022, 3, 28), Decimal('1297.08')],\n [datetime.date(2022, 3, 29), Decimal('1964.62')],\n [datetime.date(2022, 3, 30), Decimal('1467.57')],\n [datetime.date(2022, 3, 31), Decimal('2090.14')],\n [datetime.date(2022, 4, 1), Decimal('2899.49')],\n [datetime.date(2022, 4, 2), Decimal('1113.25')],\n [datetime.date(2022, 4, 3), Decimal('1682.45')],\n [datetime.date(2022, 4, 4), Decimal('1669.43')],\n [datetime.date(2022, 4, 5), Decimal('1461.14')],\n [datetime.date(2022, 4, 6), Decimal('656.05')],\n [datetime.date(2022, 4, 7), Decimal('1670.33')],\n [datetime.date(2022, 4, 8), Decimal('1419.73')],\n [datetime.date(2022, 4, 9), Decimal('683.80')],\n [datetime.date(2022, 4, 10), Decimal('2579.87')],\n [datetime.date(2022, 4, 11), Decimal('1600.49')],\n [datetime.date(2022, 4, 12), Decimal('1743.37')],\n [datetime.date(2022, 4, 13), Decimal('1030.03')],\n [datetime.date(2022, 4, 14), Decimal('2345.66')],\n [datetime.date(2022, 4, 15), Decimal('1670.48')],\n [datetime.date(2022, 4, 16), Decimal('806.33')],\n [datetime.date(2022, 4, 17), Decimal('3292.77')],\n [datetime.date(2022, 4, 18), Decimal('1102.46')],\n [datetime.date(2022, 4, 19), Decimal('2652.11')],\n [datetime.date(2022, 4, 20), Decimal('1459.07')],\n [datetime.date(2022, 4, 21), Decimal('1940.30')],\n [datetime.date(2022, 4, 22), Decimal('1450.09')],\n [datetime.date(2022, 4, 23), Decimal('1238.53')],\n [datetime.date(2022, 4, 24), Decimal('3036.01')],\n [datetime.date(2022, 4, 25), Decimal('1495.63')],\n [datetime.date(2022, 4, 26), Decimal('2617.34')],\n [datetime.date(2022, 4, 27), Decimal('1116.68')],\n [datetime.date(2022, 4, 28), Decimal('1194.42')],\n [datetime.date(2022, 4, 29), Decimal('1406.54')],\n [datetime.date(2022, 4, 30), Decimal('2395.37')],\n [datetime.date(2022, 5, 1), Decimal('2219.09')],\n [datetime.date(2022, 5, 2), Decimal('887.46')],\n [datetime.date(2022, 5, 3), Decimal('1887.84')],\n [datetime.date(2022, 5, 4), Decimal('915.60')],\n [datetime.date(2022, 5, 5), Decimal('509.86')],\n [datetime.date(2022, 5, 6), Decimal('1195.11')],\n [datetime.date(2022, 5, 7), Decimal('1511.82')],\n [datetime.date(2022, 5, 8), Decimal('3511.29')],\n [datetime.date(2022, 5, 9), Decimal('1507.12')],\n [datetime.date(2022, 5, 10), Decimal('2201.98')],\n [datetime.date(2022, 5, 11), Decimal('594.47')],\n [datetime.date(2022, 5, 12), Decimal('2018.57')],\n [datetime.date(2022, 5, 13), Decimal('1905.92')],\n [datetime.date(2022, 5, 14), Decimal('1857.82')],\n [datetime.date(2022, 5, 15), Decimal('2747.01')],\n [datetime.date(2022, 5, 16), Decimal('1296.88')],\n [datetime.date(2022, 5, 17), Decimal('1959.78')],\n [datetime.date(2022, 5, 18), Decimal('540.45')],\n [datetime.date(2022, 5, 19), Decimal('2061.83')],\n [datetime.date(2022, 5, 20), Decimal('1035.45')],\n [datetime.date(2022, 5, 21), Decimal('878.84')],\n [datetime.date(2022, 5, 22), Decimal('2709.29')],\n [datetime.date(2022, 5, 23), Decimal('1777.10')],\n [datetime.date(2022, 5, 24), Decimal('1950.68')],\n [datetime.date(2022, 5, 25), Decimal('1419.31')],\n [datetime.date(2022, 5, 26), Decimal('2998.13')],\n [datetime.date(2022, 5, 27), Decimal('1044.41')],\n [datetime.date(2022, 5, 28), Decimal('828.35')],\n [datetime.date(2022, 5, 29), Decimal('3070.25')],\n [datetime.date(2022, 5, 30), Decimal('1124.29')],\n [datetime.date(2022, 5, 31), Decimal('1967.66')],\n [datetime.date(2022, 6, 1), Decimal('846.49')],\n [datetime.date(2022, 6, 2), Decimal('1734.61')],\n [datetime.date(2022, 6, 3), Decimal('904.15')],\n [datetime.date(2022, 6, 4), Decimal('861.13')],\n [datetime.date(2022, 6, 5), Decimal('2462.25')],\n [datetime.date(2022, 6, 6), Decimal('892.99')],\n [datetime.date(2022, 6, 7), Decimal('2068.90')],\n [datetime.date(2022, 6, 8), Decimal('1459.21')],\n [datetime.date(2022, 6, 9), Decimal('2090.29')],\n [datetime.date(2022, 6, 10), Decimal('2695.58')],\n [datetime.date(2022, 6, 11), Decimal('1017.58')],\n [datetime.date(2022, 6, 12), Decimal('1902.65')],\n [datetime.date(2022, 6, 13), Decimal('1150.34')],\n [datetime.date(2022, 6, 14), Decimal('2348.11')],\n [datetime.date(2022, 6, 15), Decimal('1070.16')],\n [datetime.date(2022, 6, 16), Decimal('1343.88')],\n [datetime.date(2022, 6, 17), Decimal('385.94')],\n [datetime.date(2022, 6, 18), Decimal('1140.22')],\n [datetime.date(2022, 6, 19), Decimal('2474.36')],\n [datetime.date(2022, 6, 20), Decimal('368.36')],\n [datetime.date(2022, 6, 21), Decimal('2608.04')],\n [datetime.date(2022, 6, 22), Decimal('1605.83')],\n [datetime.date(2022, 6, 23), Decimal('2750.69')],\n [datetime.date(2022, 6, 24), Decimal('692.06')],\n [datetime.date(2022, 6, 25), Decimal('1254.17')],\n [datetime.date(2022, 6, 26), Decimal('1678.68')],\n [datetime.date(2022, 6, 27), Decimal('838.45')],\n [datetime.date(2022, 6, 28), Decimal('1628.67')],\n [datetime.date(2022, 6, 29), Decimal('334.11')],\n [datetime.date(2022, 6, 30), Decimal('3596.79')],\n [datetime.date(2022, 7, 1), Decimal('1391.52')],\n [datetime.date(2022, 7, 2), Decimal('1493.77')],\n [datetime.date(2022, 7, 3), Decimal('2199.74')],\n [datetime.date(2022, 7, 4), Decimal('2492.14')],\n [datetime.date(2022, 7, 5), Decimal('2582.77')],\n [datetime.date(2022, 7, 6), Decimal('377.72')],\n [datetime.date(2022, 7, 7), Decimal('2358.92')],\n [datetime.date(2022, 7, 8), Decimal('1509.37')],\n [datetime.date(2022, 7, 9), Decimal('1688.47')],\n [datetime.date(2022, 7, 10), Decimal('3347.61')],\n [datetime.date(2022, 7, 11), Decimal('393.70')],\n [datetime.date(2022, 7, 12), Decimal('1733.02')],\n [datetime.date(2022, 7, 13), Decimal('1381.78')],\n [datetime.date(2022, 7, 14), Decimal('1608.51')],\n [datetime.date(2022, 7, 15), Decimal('1284.05')],\n [datetime.date(2022, 7, 16), Decimal('605.52')],\n [datetime.date(2022, 7, 17), Decimal('2748.23')],\n [datetime.date(2022, 7, 18), Decimal('1399.54')],\n [datetime.date(2022, 7, 19), Decimal('1557.21')],\n [datetime.date(2022, 7, 20), Decimal('1310.88')],\n [datetime.date(2022, 7, 21), Decimal('1682.92')],\n [datetime.date(2022, 7, 22), Decimal('1426.42')],\n [datetime.date(2022, 7, 23), Decimal('1133.48')],\n [datetime.date(2022, 7, 24), Decimal('1947.30')],\n [datetime.date(2022, 7, 25), Decimal('1228.72')],\n [datetime.date(2022, 7, 26), Decimal('466.62')],\n [datetime.date(2022, 7, 27), Decimal('1191.97')],\n [datetime.date(2022, 7, 28), Decimal('3903.54')],\n [datetime.date(2022, 7, 29), Decimal('1514.66')],\n [datetime.date(2022, 7, 30), Decimal('901.24')],\n [datetime.date(2022, 7, 31), Decimal('2679.59')],\n [datetime.date(2022, 8, 1), Decimal('544.95')],\n [datetime.date(2022, 8, 2), Decimal('1686.19')],\n [datetime.date(2022, 8, 3), Decimal('695.15')],\n [datetime.date(2022, 8, 4), Decimal('1668.42')],\n [datetime.date(2022, 8, 5), Decimal('1631.07')],\n [datetime.date(2022, 8, 6), Decimal('1246.17')],\n [datetime.date(2022, 8, 7), Decimal('1958.80')],\n [datetime.date(2022, 8, 8), Decimal('1632.47')],\n [datetime.date(2022, 8, 9), Decimal('1783.53')],\n [datetime.date(2022, 8, 10), Decimal('904.40')],\n [datetime.date(2022, 8, 11), Decimal('1638.25')],\n [datetime.date(2022, 8, 12), Decimal('1121.08')],\n [datetime.date(2022, 8, 13), Decimal('880.23')],\n [datetime.date(2022, 8, 14), Decimal('2075.94')],\n [datetime.date(2022, 8, 15), Decimal('346.77')],\n [datetime.date(2022, 8, 16), Decimal('1557.05')],\n [datetime.date(2022, 8, 17), Decimal('1179.70')],\n [datetime.date(2022, 8, 18), Decimal('1829.23')],\n [datetime.date(2022, 8, 19), Decimal('872.14')],\n [datetime.date(2022, 8, 20), Decimal('956.67')],\n [datetime.date(2022, 8, 21), Decimal('2096.30')],\n [datetime.date(2022, 8, 22), Decimal('1153.55')],\n [datetime.date(2022, 8, 23), Decimal('1854.00')],\n [datetime.date(2022, 8, 24), Decimal('501.07')],\n [datetime.date(2022, 8, 25), Decimal('3510.19')],\n [datetime.date(2022, 8, 26), Decimal('704.78')],\n [datetime.date(2022, 8, 27), Decimal('1163.65')],\n [datetime.date(2022, 8, 28), Decimal('1082.94')],\n [datetime.date(2022, 8, 29), Decimal('1095.61')],\n [datetime.date(2022, 8, 30), Decimal('1641.43')],\n [datetime.date(2022, 8, 31), Decimal('700.68')],\n [datetime.date(2022, 9, 1), Decimal('2214.13')],\n [datetime.date(2022, 9, 2), Decimal('1655.85')],\n [datetime.date(2022, 9, 3), Decimal('882.87')],\n [datetime.date(2022, 9, 4), Decimal('1694.69')],\n [datetime.date(2022, 9, 5), Decimal('890.31')],\n [datetime.date(2022, 9, 6), Decimal('2409.64')],\n [datetime.date(2022, 9, 7), Decimal('478.73')],\n [datetime.date(2022, 9, 8), Decimal('1955.55')],\n [datetime.date(2022, 9, 9), Decimal('550.08')],\n [datetime.date(2022, 9, 10), Decimal('725.07')],\n [datetime.date(2022, 9, 11), 0],\n [datetime.date(2022, 9, 12), Decimal('3771.72')],\n [datetime.date(2022, 9, 13), Decimal('1771.48')],\n [datetime.date(2022, 9, 14), Decimal('582.43')],\n [datetime.date(2022, 9, 15), Decimal('2304.48')],\n [datetime.date(2022, 9, 16), Decimal('772.66')],\n [datetime.date(2022, 9, 17), Decimal('1081.97')],\n [datetime.date(2022, 9, 18), Decimal('2114.53')],\n [datetime.date(2022, 9, 19), Decimal('994.53')],\n [datetime.date(2022, 9, 20), Decimal('1844.58')],\n [datetime.date(2022, 9, 21), Decimal('482.60')],\n [datetime.date(2022, 9, 22), Decimal('2664.36')],\n [datetime.date(2022, 9, 23), Decimal('1385.54')],\n [datetime.date(2022, 9, 24), Decimal('2615.97')],\n [datetime.date(2022, 9, 25), Decimal('2007.66')],\n [datetime.date(2022, 9, 26), Decimal('1246.97')],\n [datetime.date(2022, 9, 27), Decimal('1453.59')],\n [datetime.date(2022, 9, 28), Decimal('935.59')],\n [datetime.date(2022, 9, 29), Decimal('2256.53')],\n [datetime.date(2022, 9, 30), Decimal('1889.73')],\n [datetime.date(2022, 10, 1), Decimal('646.18')],\n [datetime.date(2022, 10, 2), Decimal('2694.03')],\n [datetime.date(2022, 10, 3), Decimal('1544.08')],\n [datetime.date(2022, 10, 4), Decimal('568.76')],\n [datetime.date(2022, 10, 5), Decimal('2087.10')],\n [datetime.date(2022, 10, 6), Decimal('1828.85')],\n [datetime.date(2022, 10, 7), Decimal('167.47')],\n [datetime.date(2022, 10, 8), Decimal('1307.42')],\n [datetime.date(2022, 10, 9), Decimal('2180.29')],\n [datetime.date(2022, 10, 10), Decimal('717.62')],\n [datetime.date(2022, 10, 11), 0],\n [datetime.date(2022, 10, 12), Decimal('1344.95')],\n [datetime.date(2022, 10, 13), Decimal('1558.80')],\n [datetime.date(2022, 10, 14), Decimal('1105.61')],\n [datetime.date(2022, 10, 15), Decimal('988.89')],\n [datetime.date(2022, 10, 16), Decimal('2967.95')],\n [datetime.date(2022, 10, 17), Decimal('868.09')],\n [datetime.date(2022, 10, 18), Decimal('1875.80')],\n [datetime.date(2022, 10, 19), Decimal('924.81')],\n [datetime.date(2022, 10, 20), Decimal('2060.91')],\n [datetime.date(2022, 10, 21), Decimal('1352.92')],\n [datetime.date(2022, 10, 22), Decimal('912.24')],\n [datetime.date(2022, 10, 23), Decimal('2121.30')],\n [datetime.date(2022, 10, 24), Decimal('1189.50')],\n [datetime.date(2022, 10, 25), Decimal('1324.75')],\n [datetime.date(2022, 10, 26), Decimal('535.69')],\n [datetime.date(2022, 10, 27), Decimal('2336.57')],\n [datetime.date(2022, 10, 28), Decimal('1552.70')],\n [datetime.date(2022, 10, 29), Decimal('1937.19')],\n [datetime.date(2022, 10, 30), Decimal('2969.29')],\n [datetime.date(2022, 10, 31), Decimal('2078.65')],\n [datetime.date(2022, 11, 1), Decimal('1485.78')],\n [datetime.date(2022, 11, 2), Decimal('1191.20')],\n [datetime.date(2022, 11, 3), Decimal('1441.54')],\n [datetime.date(2022, 11, 4), Decimal('3287.04')],\n [datetime.date(2022, 11, 5), Decimal('838.82')],\n [datetime.date(2022, 11, 6), Decimal('2177.58')],\n [datetime.date(2022, 11, 7), Decimal('743.57')],\n [datetime.date(2022, 11, 8), Decimal('764.43')],\n [datetime.date(2022, 11, 9), Decimal('2148.20')],\n [datetime.date(2022, 11, 10), Decimal('4101.49')],\n [datetime.date(2022, 11, 11), Decimal('545.64')],\n [datetime.date(2022, 11, 12), Decimal('2871.81')],\n [datetime.date(2022, 11, 13), Decimal('1503.37')],\n [datetime.date(2022, 11, 14), Decimal('641.02')],\n [datetime.date(2022, 11, 15), Decimal('1785.40')],\n [datetime.date(2022, 11, 16), Decimal('1704.30')],\n [datetime.date(2022, 11, 17), Decimal('3798.53')],\n [datetime.date(2022, 11, 18), Decimal('1249.60')],\n [datetime.date(2022, 11, 19), Decimal('681.00')],\n [datetime.date(2022, 11, 20), Decimal('2477.34')],\n [datetime.date(2022, 11, 21), Decimal('831.36')],\n [datetime.date(2022, 11, 22), 0],\n [datetime.date(2022, 11, 23), Decimal('1933.58')],\n [datetime.date(2022, 11, 24), Decimal('1901.91')],\n [datetime.date(2022, 11, 25), Decimal('368.80')],\n [datetime.date(2022, 11, 26), Decimal('1963.21')],\n [datetime.date(2022, 11, 27), Decimal('3489.86')],\n [datetime.date(2022, 11, 28), Decimal('1026.15')],\n [datetime.date(2022, 11, 29), Decimal('1202.97')],\n [datetime.date(2022, 11, 30), Decimal('739.67')],\n [datetime.date(2022, 12, 1), Decimal('1364.53')],\n [datetime.date(2022, 12, 2), Decimal('1588.58')],\n [datetime.date(2022, 12, 3), Decimal('618.75')],\n [datetime.date(2022, 12, 4), Decimal('1538.95')],\n [datetime.date(2022, 12, 5), Decimal('1128.09')],\n [datetime.date(2022, 12, 6), Decimal('1457.11')],\n [datetime.date(2022, 12, 7), Decimal('1157.55')],\n [datetime.date(2022, 12, 8), Decimal('2271.73')],\n [datetime.date(2022, 12, 9), Decimal('1671.79')],\n [datetime.date(2022, 12, 10), Decimal('447.67')],\n [datetime.date(2022, 12, 11), Decimal('1777.20')],\n [datetime.date(2022, 12, 12), Decimal('1309.68')],\n [datetime.date(2022, 12, 13), Decimal('1619.49')],\n [datetime.date(2022, 12, 14), Decimal('1743.19')],\n [datetime.date(2022, 12, 15), Decimal('1719.82')],\n [datetime.date(2022, 12, 16), Decimal('1259.38')],\n [datetime.date(2022, 12, 17), Decimal('958.56')],\n [datetime.date(2022, 12, 18), Decimal('2526.24')],\n [datetime.date(2022, 12, 19), Decimal('2252.11')],\n [datetime.date(2022, 12, 20), Decimal('2917.00')],\n [datetime.date(2022, 12, 21), Decimal('1742.27')],\n [datetime.date(2022, 12, 22), Decimal('2213.93')],\n [datetime.date(2022, 12, 23), Decimal('4493.62')],\n [datetime.date(2022, 12, 24), Decimal('3106.94')],\n [datetime.date(2022, 12, 25), 0],\n [datetime.date(2022, 12, 26), Decimal('1374.76')],\n [datetime.date(2022, 12, 27), Decimal('3613.45')],\n [datetime.date(2022, 12, 28), Decimal('1107.66')],\n [datetime.date(2022, 12, 29), Decimal('3845.47')],\n [datetime.date(2022, 12, 30), Decimal('2686.74')],\n [datetime.date(2022, 12, 31), Decimal('377.49')]]\n\n\n\ndef get_sales_from_so_period(start_date, end_date, shop = ''):\n    query = \"\"\"\n    SELECT\n       v_shop.name AS shop_name, \n       DATE(v_pos_order.created_at) AS day, \n       SUM(pol.price_unit * v_pos_order_line.quantity) AS total_sales\n    FROM v_pos_order_line\n    LEFT JOIN pos_order_line as pol on pol.id = v_pos_order_line.id\n    LEFT JOIN v_product ON v_product.id = v_pos_order_line.product_id\n    LEFT JOIN v_pos_order ON v_pos_order.id = v_pos_order_line.order_id\n    LEFT JOIN v_pos_session ON v_pos_session.id = v_pos_order.session_id\n    LEFT JOIN v_pos ON v_pos.id = v_pos_session.pos_id\n    LEFT JOIN v_shop ON v_shop.id = v_pos.shop_id\n    WHERE v_pos_order.created_at BETWEEN '{}' AND '{}'\n    \"\"\".format(start_date, end_date)\n    \n    if shop != '':\n        query += f\"\"\"AND v_shop.name = '{shop}'\"\"\"\n    \n    query += \"GROUP BY v_shop.id, v_shop.name, day\"\n    \n    return sorted(\n        [[row[1], row[2]] for row in core.make_sql_query(query)],\n        key=lambda x: x[0]\n    )\n\ndef get_sales_period(start_date, end_date, shop=''):\n    query = \"\"\"\n    SELECT\n        v_shop.name, \n        day,\n        total\n      FROM \n        v_shop_sales_statistics\n      LEFT JOIN \n        v_shop on v_shop.id = v_shop_sales_statistics.shop_id\n      WHERE \n        (day between '{}' and '{}')\n    \"\"\".format(start_date, end_date)\n    \n    if shop != '':\n        query += f\"\"\"AND v_shop.name = '{shop}'\"\"\"\n                \n    return core.make_sql_query(query)\n\n\nget_sales_from_so_period(core.get_yesterday(), core.get_today_date_string(), 'Woluwe')\n\nconfig.ini file available... using that\n\n\n[[datetime.date(2023, 3, 12), Decimal('5762.02014')]]\n\n\n\nget_sales_from_so_period??\n\n\ndef format_datetime(dt):\n    return dt.strftime(\"%d-%m-%Y\")\n\ndef make_graph():\n    plt.xlabel('Date')\n    plt.ylabel('Value')\n    plt.title('LATEM Value over Time (Cumulative)')\n    return plt\n    \ndef show_graph(graph):\n    graph.show()\n\n\ndef add_baseline_value_to_graph(values, graph):\n    dates_list = [row[1] for row in values]\n    values_list = [row[2] for row in values]\n    plt.plot(dates_list, values_list)    \n    return dates_list\n    \ndef add_values_to_graph(dates_list, values_list, graph):\n    plt.plot(dates_list, values_list, color = 'red') \n\ndef plot_revenue_and_foodcosts(start_date, end_date):\n    graph = make_graph()\n    this_year = get_sales_from_so_period(start_date, end_date, shop='LATEM')\n    dates_list = add_baseline_value_to_graph(this_year, graph)\n    food_costs = get_food_costs_period(start_date, end_date)\n    add_values_to_graph([row[0] for row in food_costs], [row[1] for row in food_costs], graph)\n    show_graph(graph)\n    \ndef pct_costs_on_revenues(start_date, end_date, shop = '', frequency = 'M'):    \n    food_costs_daily = get_food_costs_period(start_date, end_date, shop = shop)\n    sales_from_so_daily = get_sales_from_so_period(start_date, end_date, shop = shop)\n    num = to_series(food_costs_daily).resample(frequency).sum()\n    denum = to_series(sales_from_so_daily).resample(frequency).sum()\n    return divide(\n        num,\n        denum,       \n    )\n\ndef to_series(values):\n    return pd.Series([row[1] for row in values], index = pd.DatetimeIndex([row[0] for row in values]))\n    \ndef divide(values_a, values_b):        \n    res = values_a.divide(values_b, fill_value=1)\n    res = res.astype(float)\n    return res\n\n\ndef run():\n    food_costs_daily = get_food_costs_period(start_date, end_date, shop = 'LATEM')\n    s = to_series(food_costs_daily)\n\n\na = pct_costs_on_revenues('2023-02-01', '2023-02-19', shop = 'LATEM', frequency = 'W')\na\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n2023-02-05    0.495444\n2023-02-12    0.589943\n2023-02-19    0.499404\nFreq: W-SUN, dtype: float64\n\n\n\ndef plot_revenues():\n    start_date = '2023-01-01'\n    end_date = '2023-02-19'\n    \n    shops = ['Woluwe', 'LATEM']\n    \n    for shop in shops:\n        series = to_series(get_sales_from_so_period(start_date, end_date, shop = shop)).astype(float)\n        series.plot(label=shop)\n        \n    plt.xlabel('Date')\n    plt.ylabel('Revenue')\n    plt.legend(loc='best')\n    plt.show()\n\n\nplot_revenues()\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\n\n\n\ndef plot_foodcosts():\n    shops = ['Woluwe', 'LATEM']\n    \n    for shop in shops:\n        series = to_series(get_food_costs_period(start_date, end_date, shop = shop)).astype(float)\n        series.plot(label=shop)\n        \n    plt.xlabel('Date')\n    plt.ylabel('Revenue')\n    plt.legend(loc='best')\n    plt.show()\n\n\nplot_foodcosts()\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\n\n\n\ndef resample_to_month(s):\n    return s.resample('W').sum()\n\n\ndef resample_to_month(s):\n    return s.resample('W').sum()\n    \ndef plot_foodcost_and_revenue_for_one_shop():\n    \n    shops = ['Woluwe']\n\n    for shop in shops:\n        series = resample_to_month(to_series(get_sales_from_so_period(start_date, end_date, shop = shop))).astype(float)\n        series.plot(label='revenue')\n        \n        series_fc = resample_to_month(to_series(get_food_costs_period(start_date, end_date, shop = shop))).astype(float)\n        series_fc.plot(label='foodcost')\n        \n    plt.xlabel('Date')\n    plt.ylabel('Revenue')\n    plt.legend(loc='best')\n    plt.show()\n\n\nplot_foodcost_and_revenue_for_one_shop()\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\n\n\n\ncore.get_shop_names()\n\nconfig.ini file available... using that\n\n\n['La Hulpe',\n 'Fort Jaco',\n 'Woluwe',\n 'Tongres',\n 'Wemmel',\n 'CHATELAIN',\n 'OVERIJSE',\n 'LATEM']\n\n\n\ndef plot_pct_food_costs_on_revenues():\n    # shops = core.get_shop_names()\n    shops = [\n        'Woluwe',\n        'LATEM',\n        'Fort Jaco'\n    ]\n    \n    # define a list of colors for each bar\n    colors = ['blue', 'green', 'orange']\n    \n    # set the width of each bar\n    width = 0.25\n    \n    # calculate the offset for each bar\n    offset = [-width, 0, width]\n    \n    for i, shop in enumerate(shops):\n        series = pct_costs_on_revenues(start_date, end_date, shop=shop, frequency='M')\n        \n        # plot each bar with the corresponding color and offset\n        series.plot(label=shop, \n                    color=colors[i],\n#                     kind='bar', \n#                     width=width, \n#                     position=i, \n#                     stacked=False\n                   )\n        \n    plt.xlabel('Date')\n    plt.ylabel('%')\n#     plt.xticks(range(len(series.index)), series.index.strftime('%Y-%m'), rotation=0)\n    plt.legend(loc='best')\n    plt.show()\n\n\nplot_pct_food_costs_on_revenues()\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\n\n\n\ndef compare_pos_sales_and_stats():\n    start_date = '2023-01-10'\n    end_date = '2023-02-19'\n    \n    shops = ['Woluwe']\n    \n    for shop in shops:\n        series = to_series(get_sales_from_so_period(start_date, end_date, shop = shop)).astype(float)\n        computed_stats = core.make_sql_query(\"\"\"\n        SELECT \n            day\n            total, \n            total_htva \n        FROM v_shop_sales_statistics\n        LEFT JOIN \n            v_shop on v_shop.id = v_shop_sales_statistics.shop_id \n        WHERE v_shop.name = 'Woluwe' AND day between '{}' and '{}';\n        \"\"\".format(start_date,end_date));\n        computed_stats_series = to_series(computed_stats).astype(float)\n        computed_stats_series.plot(label=shop + ' (stats)')\n        series.plot(label=shop + ' (order lines)')\n        \n    plt.xlabel('Date')\n    plt.ylabel('Revenue')\n    plt.legend(loc='best')\n    plt.show()\n    \ncompare_pos_sales_and_stats()\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\n\n\n\ndef compare_pos_sales_and_stats_in_table():\n    start_date = '2023-01-10'\n    end_date = '2023-02-19'\n    \n    shops = ['Woluwe']\n    columns = {}\n    for shop in shops:\n        series = to_series(get_sales_from_so_period(start_date, end_date, shop = shop)).astype(float)\n        \n        computed_stats = core.make_sql_query(\"\"\"\n        SELECT \n            day,\n            total\n        FROM v_shop_sales_statistics\n        LEFT JOIN \n            v_shop on v_shop.id = v_shop_sales_statistics.shop_id \n        WHERE v_shop.name = 'Woluwe' AND day between '{}' and '{}';\n        \"\"\".format(start_date,end_date));\n                \n        computed_stats_series = to_series(computed_stats).astype(float)\n        columns['from_ground_up'] = series\n        columns['computed_stats'] = computed_stats_series\n        \n    return pd.DataFrame(columns)\n    \nres = compare_pos_sales_and_stats_in_table()\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\n# HTVA = Hors taxe value \n# VAT = value added tax\n# tax on products. 21% for services. 6% on food\n\n\nres['difference'] = res.from_ground_up - res.computed_stats\n\n\nres.plot()\n\n&lt;AxesSubplot:&gt;\n\n\n\n\n\n\n# Look at difference between stats table and ground up sum for all shops\n\n\ndef compare_pos_sales_and_stats_of_all_shop():\n    start_date = '2023-01-10'\n    end_date = '2023-02-19'\n    shops = core.get_shop_names()\n    columns = {}\n    for shop in shops:\n        series = to_series(get_sales_from_so_period(start_date, end_date, shop = shop)).astype(float)\n        \n        computed_stats = core.make_sql_query(\"\"\"\n        SELECT \n            day,\n            total\n        FROM v_shop_sales_statistics\n        LEFT JOIN \n            v_shop on v_shop.id = v_shop_sales_statistics.shop_id \n        WHERE v_shop.name = '{}' AND day between '{}' and '{}';\n        \"\"\".format(shop,start_date,end_date));\n                \n        computed_stats_series = to_series(computed_stats).astype(float)\n        columns['from_ground_up'] = series\n        columns['computed_stats'] = computed_stats_series\n        columns['difference'] = series - computed_stats_series\n        df = pd.DataFrame(columns)\n        df.plot(title=shop)\n\ncompare_pos_sales_and_stats_of_all_shop()\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n/var/folders/3s/8thx9yjd15l2g2jfkpzcxpzw0000gn/T/ipykernel_37956/2270100445.py:23: FutureWarning: reindexing with a non-unique Index is deprecated and will raise in a future version.\n  df = pd.DataFrame(columns)\n\n\nValueError: cannot reindex on an axis with duplicate labels\n\n\n\n\n\n\n\n\n\n\n\n\n# 10 apples each apple is 2EUR &gt;&gt; 10 UNIT * 2 (EUR / UNIT) = 20 EUR (subtotal)\n# 4  shampoos each shampoo 3EUR &gt;&gt; 4 UNIT * 3 (EUR / UNIT) = 12 EUR (subtotal)\n# --------------\n# 32 EUR (total) (discount = 2 EUR)"
  },
  {
    "objectID": "day dashboard.html",
    "href": "day dashboard.html",
    "title": "Shop LATEM",
    "section": "",
    "text": "import foodcosts.core as core\nimport pandas as pd\n\n\nshop = 'LATEM'\ndate = '2023-01-26'\n\n\ndef get_all_sold_items_for_given_day_and_shop(day, shop):    \n    return core.get_query_res_as_pd(\n        f\"\"\"\n        SELECT \n            vp.name,\n            sum(vpol.quantity) as qty_sold,\n            sum(vpol.quantity*vp.price) as total\n        FROM v_pos_order_line as vpol\n        left join v_pos_order as vpo on vpo.id = vpol.order_id\n        left join v_pos_session as vs on vs.id = vpo.session_id\n        left join v_pos as vpos on vpos.id = vs.pos_id\n        left join v_shop as vshop on vpos.shop_id = vshop.id\n        left join v_product as vp on vp.id = vpol.product_id\n        where vshop.name = '{shop}'\n        and created_at between '{day} 00:00' and '{day} 23:59'\n        group by vp.name\n        order by total desc;\n        \"\"\"\n    )\n\n\nall_sold_items_for_given_day_and_shop_df = get_all_sold_items_for_given_day_and_shop(date,shop)\n\n\nall_sold_items_for_given_day_and_shop_df.index = all_sold_items_for_given_day_and_shop_df.name\n\n\nall_sold_items_for_given_day_and_shop_df\n\n\n\n\n\n\n\n\nname\nqty_sold\ntotal\n\n\nname\n\n\n\n\n\n\n\nLEGUMES / SALADES 21,7 EURO/KG\nLEGUMES / SALADES 21,7 EURO/KG\n12.252\n265.8684\n\n\nDOS DE CABILLAUD EPICE\nDOS DE CABILLAUD EPICE\n2.040\n110.1600\n\n\nASPERGE VERTE ET SUGAR SNAPS\nASPERGE VERTE ET SUGAR SNAPS\n2.658\n76.5504\n\n\nRADIATORI JAMBON FROMAGE 400G\nRADIATORI JAMBON FROMAGE 400G\n5.000\n36.2000\n\n\nSAUMON MI CUIT EPICE (1 kg)\nSAUMON MI CUIT EPICE (1 kg)\n0.652\n28.6880\n\n\n...\n...\n...\n...\n\n\nSALADE POULET NATURE 150G\nSALADE POULET NATURE 150G\n1.000\n2.6500\n\n\nBRU PETILLANTE PLASTIQUE 50 CL\nBRU PETILLANTE PLASTIQUE 50 CL\n1.000\n1.5000\n\n\nVENTE COMPTOIR\nVENTE COMPTOIR\n1.000\n1.0000\n\n\nDiscount\nDiscount\n-459.000\n-9.1800\n\n\nCAUTION VASE DONAU MOYEN 28 CM\nCAUTION VASE DONAU MOYEN 28 CM\n-1.000\n-35.0000\n\n\n\n\n91 rows × 3 columns\n\n\n\n\ndef get_all_sold_items_for_given_day(day):    \n    return core.get_query_res_as_pd(\n        f\"\"\"\n        SELECT \n            vp.name,\n            sum(vpol.quantity) as qty_sold,\n            sum(vpol.quantity*vp.price) as total\n        FROM v_pos_order_line as vpol\n        left join v_pos_order as vpo on vpo.id = vpol.order_id\n        left join v_pos_session as vs on vs.id = vpo.session_id\n        left join v_pos as vpos on vpos.id = vs.pos_id\n        left join v_shop as vshop on vpos.shop_id = vshop.id\n        left join v_product as vp on vp.id = vpol.product_id\n        and created_at between '{day} 00:00' and '{day} 23:59'\n        group by vp.name\n        order by total desc;\n        \"\"\"\n    )\n\n\nall_sold_items_for_given_day_df = get_all_sold_items_for_given_day(date)\n\n\nall_sold_items_for_given_day_df.index = all_sold_items_for_given_day_df.name\nall_sold_items_for_given_day_df['all_qty_sold'] = all_sold_items_for_given_day_df.qty_sold\nall_sold_items_for_given_day_df['all_total'] = all_sold_items_for_given_day_df.total\nall_sold_items_for_given_day_df.drop('qty_sold', axis=1, inplace=True)\nall_sold_items_for_given_day_df.drop('total', axis=1, inplace=True)\n\n\nall_sold_items_for_given_day_df\n\n\n\n\n\n\n\n\nname\nall_qty_sold\nall_total\n\n\nname\n\n\n\n\n\n\n\nNone\nNone\n-1498794.134\nNaN\n\n\nSALADE BAR FTK\nSALADE BAR FTK\n325.319\n7059.4223\n\n\nHOT BAR FTK\nHOT BAR FTK\n202.617\n4396.7889\n\n\nPLAT DU JOUR 8,50€\nPLAT DU JOUR 8,50€\n148.000\n1258.0000\n\n\nSANDWICH CLASSIQUE CLUB\nSANDWICH CLASSIQUE CLUB\n280.000\n1176.0000\n\n\n...\n...\n...\n...\n\n\nCAUTION VERRINE/JATTE\nCAUTION VERRINE/JATTE\n-14.000\n-7.0000\n\n\nCAUTION VASE DONAU PETIT 18 CM\nCAUTION VASE DONAU PETIT 18 CM\n-5.000\n-100.0000\n\n\nDiscount\nDiscount\n-7829.000\n-156.5800\n\n\nCAUTION PLATEAU MELAMINE\nCAUTION PLATEAU MELAMINE\n-6.000\n-210.0000\n\n\nCAUTION VASE DONAU MOYEN 28 CM\nCAUTION VASE DONAU MOYEN 28 CM\n-8.000\n-280.0000\n\n\n\n\n603 rows × 3 columns\n\n\n\n\nall_sold_items_for_given_day_and_shop_df.loc[all_sold_items_for_given_day_and_shop_df[\"total\"] &gt; 100]\n\n\n\n\n\n\n\n\nname\nqty_sold\ntotal\n\n\n\n\n0\nLEGUMES / SALADES 21,7 EURO/KG\n12.252\n265.8684\n\n\n1\nDOS DE CABILLAUD EPICE\n2.040\n110.1600\n\n\n\n\n\n\n\n\nall_sold_items_for_given_day_and_shop_df.sum()['total']\n\n1412.1984400000001\n\n\n\nall_sold_items_for_given_day_and_shop_df.head(n=20)\n\n\n\n\n\n\n\n\nname\nqty_sold\ntotal\n\n\nname\n\n\n\n\n\n\n\nLEGUMES / SALADES 21,7 EURO/KG\nLEGUMES / SALADES 21,7 EURO/KG\n12.252\n265.8684\n\n\nDOS DE CABILLAUD EPICE\nDOS DE CABILLAUD EPICE\n2.040\n110.1600\n\n\nASPERGE VERTE ET SUGAR SNAPS\nASPERGE VERTE ET SUGAR SNAPS\n2.658\n76.5504\n\n\nRADIATORI JAMBON FROMAGE 400G\nRADIATORI JAMBON FROMAGE 400G\n5.000\n36.2000\n\n\nSAUMON MI CUIT EPICE (1 kg)\nSAUMON MI CUIT EPICE (1 kg)\n0.652\n28.6880\n\n\nSPAGHETTI BOLOGNAISE 550G\nSPAGHETTI BOLOGNAISE 550G\n3.000\n28.4400\n\n\nCANNELLONI BOLOGNAISE / TOMATES / CAROTTES / FENOUIL / OIGNONS (500 g)\nCANNELLONI BOLOGNAISE / TOMATES / CAROTTES / F...\n1.286\n28.4206\n\n\nGRATIN DAUPHINOIS\nGRATIN DAUPHINOIS\n1.820\n28.2100\n\n\nRISOTTO AUX ASPERGES VERTES ET PETITS POIS 400G\nRISOTTO AUX ASPERGES VERTES ET PETITS POIS 400G\n3.000\n26.5200\n\n\nBROCHETTE POISSON EPICEE\nBROCHETTE POISSON EPICEE\n0.710\n26.4120\n\n\nCOQUELET CUIT + SAUCE COMPTOIR\nCOQUELET CUIT + SAUCE COMPTOIR\n3.000\n26.1000\n\n\nGAMBAS GEANTES (1 kg)\nGAMBAS GEANTES (1 kg)\n0.420\n26.0400\n\n\nPLAT DU JOUR 11.9\nPLAT DU JOUR 11.9\n2.000\n23.8000\n\n\nTARTE MOELLEUX CHOCOLAT PORTION\nTARTE MOELLEUX CHOCOLAT PORTION\n5.000\n22.7500\n\n\nBELLES DE FONTENAY / GROS SEL / ROMARIN\nBELLES DE FONTENAY / GROS SEL / ROMARIN\n1.716\n22.1364\n\n\nPAVLOVA AUX FRUITS ROUGES JETABLE\nPAVLOVA AUX FRUITS ROUGES JETABLE\n3.000\n20.4000\n\n\nCIVET DE BICHE / CHAMPIGNONS DES BOIS / MOUTARDE TIERENTEYN (1 kg)\nCIVET DE BICHE / CHAMPIGNONS DES BOIS / MOUTAR...\n0.606\n20.0586\n\n\n2 - 5P SCAMPIS ALL' ARRABBIATA, COURGETTES ET PETITS POIS, RADIATORI EN PERSILLADE AU CITRON\n2 - 5P SCAMPIS ALL' ARRABBIATA, COURGETTES ET ...\n2.000\n19.7800\n\n\nAUBERGINES FARCIES A LA LIBANAISE (500 g)\nAUBERGINES FARCIES A LA LIBANAISE (500 g)\n1.006\n19.0134\n\n\nTIRAMISU SPECULOOS 110G\nTIRAMISU SPECULOOS 110G\n6.000\n18.6000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname\nall_qty_sold\nall_total\n\n\nname\n\n\n\n\n\n\n\nNone\nNone\n-1498794.134\nNaN\n\n\nSALADE BAR FTK\nSALADE BAR FTK\n325.319\n7059.4223\n\n\nHOT BAR FTK\nHOT BAR FTK\n202.617\n4396.7889\n\n\nPLAT DU JOUR 8,50€\nPLAT DU JOUR 8,50€\n148.000\n1258.0000\n\n\nSANDWICH CLASSIQUE CLUB\nSANDWICH CLASSIQUE CLUB\n280.000\n1176.0000\n\n\n...\n...\n...\n...\n\n\nCAUTION VERRINE/JATTE\nCAUTION VERRINE/JATTE\n-14.000\n-7.0000\n\n\nCAUTION VASE DONAU PETIT 18 CM\nCAUTION VASE DONAU PETIT 18 CM\n-5.000\n-100.0000\n\n\nDiscount\nDiscount\n-7829.000\n-156.5800\n\n\nCAUTION PLATEAU MELAMINE\nCAUTION PLATEAU MELAMINE\n-6.000\n-210.0000\n\n\nCAUTION VASE DONAU MOYEN 28 CM\nCAUTION VASE DONAU MOYEN 28 CM\n-8.000\n-280.0000\n\n\n\n\n603 rows × 3 columns"
  },
  {
    "objectID": "Shop unit economics including wages.html",
    "href": "Shop unit economics including wages.html",
    "title": "foodcosts",
    "section": "",
    "text": "import sys\nsys.path.append(\"..\")\nimport foodcosts.core as core\nimport requests\nimport json\nimport calendar\nimport pandas as pd\nfrom datetime import date\n\n\n\n# fetch hours worked for a shop\n# use the API formation.fthek.be/api/hours_worked with body\n# {\n#   \"warehouse_id\": 2,\n#   \"yyyy_mm_dd\": \"2023-03-15\"\n# }\ndef get_hours_worked_for_a_shop_for_a_day(warehouse_id, yyyy_mm_dd):\n    url = \"https://formation.fthek.be/api/hours_worked\"\n    body = {\n        \"warehouse_id\": warehouse_id,\n        \"yyyy_mm_dd\": yyyy_mm_dd\n    }\n    response = requests.get(url, json=body)\n    print(response.status_code)\n    if response.status_code == 200:\n        return response.json()\n    else:\n        return None\n\ndef get_hours_worked_for_a_shop_for_a_month_per_employee(warehouse_id, yyyy_mm):\n    url = \"https://formation.fthek.be/api/hours_worked/month\"\n    body = {\n        \"warehouse_id\": warehouse_id,\n        \"yyyy_mm\": yyyy_mm\n    }\n    response = requests.get(url, json=body)\n    print(response.status_code)\n    if response.status_code == 200:\n        return response.json()\n    else:\n        return None\n\n\n# call the API for a shop and a day\n# return the hours worked\nanswer = get_hours_worked_for_a_shop_for_a_day(core.get_shop_id('La Hulpe'), \"2023-03-15\")\nprint(answer)\n\nconfig.ini file available... using that\n200\n[{'id': 2628104, 'name': 'Kevin BETTE ', 'hours': 10.5}, {'id': 2786566, 'name': 'Massimo OLIVO ', 'hours': 6.466666666666667}]\n\n\n\n# sums the hours worked for a shop\n# input: [{'hours': 10.5, 'name': 'Kevin BETTE ', 'id': 2628104}, {'hours': 6.466666666666667, 'name': 'Massimo OLIVO ', 'id': 2786566}]\n\ndef sum_hours_worked_for_a_shop_and_day(warehouse_id, yyyy_mm_dd):\n    hours_worked = get_hours_worked_for_a_shop_for_a_day(warehouse_id, yyyy_mm_dd)\n    if hours_worked is None:\n        return 0\n    else:\n        return sum([h['hours'] for h in hours_worked])\n\n\n# example\nsum_hours_worked_for_a_shop_and_day(core.get_shop_id('Wemmel'), \"2023-03-15\")\n\nconfig.ini file available... using that\n200\n\n\n14.55\n\n\n\n# returns a list of days in format yyyy-mm-dd for a given month\n# input: 2023-03\ndef get_days_in_month(yyyy_mm):\n    # Split the input string into year and month\n    year, month = map(int, yyyy_mm.split('-'))\n\n    # Get the number of days in the given month and year\n    num_days = calendar.monthrange(year, month)[1]\n\n    # Generate a list of days in the given month and year\n    days = [date(year, month, day).strftime(\"%Y-%m-%d\") for day in range(1, num_days + 1)]\n\n    return days\n\n# returns the list of strings (format YYYY-MM-DD) in a period (start and end dates included)\n# start and end are in format YYYY-MM-DD\ndef get_days_in_period(start,end):\n    start = date.fromisoformat(start)\n    end = date.fromisoformat(end)\n    delta = end - start\n    dates = [start + pd.DateOffset(days=i) for i in range(delta.days + 1)]\n    return [d.strftime(\"%Y-%m-%d\") for d in dates]\n\n#example\nget_days_in_period(\"2023-03-01\", \"2023-03-15\")\n\n['2023-03-01',\n '2023-03-02',\n '2023-03-03',\n '2023-03-04',\n '2023-03-05',\n '2023-03-06',\n '2023-03-07',\n '2023-03-08',\n '2023-03-09',\n '2023-03-10',\n '2023-03-11',\n '2023-03-12',\n '2023-03-13',\n '2023-03-14',\n '2023-03-15']\n\n\n\n# Example usage:\nmonth = \"2023-02\"\ndays_in_month = get_days_in_month(month)\nprint(days_in_month)\n\n['2023-02-01', '2023-02-02', '2023-02-03', '2023-02-04', '2023-02-05', '2023-02-06', '2023-02-07', '2023-02-08', '2023-02-09', '2023-02-10', '2023-02-11', '2023-02-12', '2023-02-13', '2023-02-14', '2023-02-15', '2023-02-16', '2023-02-17', '2023-02-18', '2023-02-19', '2023-02-20', '2023-02-21', '2023-02-22', '2023-02-23', '2023-02-24', '2023-02-25', '2023-02-26', '2023-02-27', '2023-02-28']\n\n\n\n# returns the total hours worked for a shop in a given month\n# input: 2023-03\ndef get_hours_worked_for_a_shop_in_a_month(warehouse_id, yyyy_mm):\n    hours_worked = get_hours_worked_for_a_shop_for_a_month_per_employee(warehouse_id, yyyy_mm)\n    if hours_worked is None:\n        return 0\n    return sum([e['hours'] for e in hours_worked])\n\ndef get_hours_worked_for_a_shop_in_a_period(warehouse_id, start, end):\n    days_to_consider = get_days_in_period(start, end)\n    hours_worked = [get_hours_worked_for_a_shop_for_a_day(warehouse_id, day) for day in days_to_consider]\n    return sum([e['hours'] for e in hours_worked])\n\n\n# example\nhours_worked_in_la_hulpe = get_hours_worked_for_a_shop_in_a_month(core.get_shop_id('La Hulpe'), \"2023-02\")\nprint(hours_worked_in_la_hulpe)\n\nconfig.ini file available... using that\n200\n485.9000000000001\n\n\n\nla_hulpe = core.get_sales_for_period_for_shop_per_day(\"2023-02-01\", \"2023-02-28\", \"La Hulpe\")\n\nconfig.ini file available... using that\n\n\n\n# sum the total sales for a shop\nla_hulpe.sum()['total_sales']\n\n/var/folders/3s/8thx9yjd15l2g2jfkpzcxpzw0000gn/T/ipykernel_5780/1374674745.py:2: FutureWarning: The default value of numeric_only in DataFrame.sum is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n  la_hulpe.sum()['total_sales']\n\n\n66249.88284\n\n\n\ncore.get_shop_names()\n\nconfig.ini file available... using that\n\n\n['La Hulpe',\n 'Fort Jaco',\n 'Woluwe',\n 'Tongres',\n 'Wemmel',\n 'CHATELAIN',\n 'OVERIJSE',\n 'LATEM']\n\n\n\nfoodcosts = core.get_food_costs_for_period_for_shop_per_day(\"2023-02-01\", \"2023-02-28\", \"La Hulpe\")\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\nfoodcosts.index = foodcosts['date']\nfoodcosts = foodcosts.drop('date', axis=1)\n\n\nfoodcosts\n\n\n\n\n\n\n\n\natelier\nsupplier\ntotal\n\n\ndate\n\n\n\n\n\n\n\n2023-02-01\n521.51\n363.44\n884.95\n\n\n2023-02-02\n1019.11\n289.97\n1309.08\n\n\n2023-02-03\n1244.03\n567.64\n1811.67\n\n\n2023-02-04\n1514.06\n0\n1514.06\n\n\n2023-02-05\n1810.74\n0\n1810.74\n\n\n2023-02-06\n1034.98\n306.07\n1341.05\n\n\n2023-02-07\n1167.42\n216.49\n1383.91\n\n\n2023-02-08\n603.62\n414.54\n1018.16\n\n\n2023-02-09\n1894.81\n303.90\n2198.71\n\n\n2023-02-10\n1057.54\n334.20\n1391.74\n\n\n2023-02-11\n814.10\n0\n814.10\n\n\n2023-02-12\n2209.62\n0\n2209.62\n\n\n2023-02-13\n321.12\n975.70\n1296.82\n\n\n2023-02-14\n2011.11\n323.37\n2334.48\n\n\n2023-02-15\n630.69\n115.03\n745.72\n\n\n2023-02-16\n1332.40\n127.52\n1459.92\n\n\n2023-02-17\n1313.14\n383.03\n1696.17\n\n\n2023-02-18\n637.55\n0\n637.55\n\n\n2023-02-19\n2131.71\n100.61\n2232.32\n\n\n2023-02-20\n292.98\n291.83\n584.81\n\n\n2023-02-21\n2560.01\n411.74\n2971.75\n\n\n2023-02-22\n1048.51\n127.56\n1176.07\n\n\n2023-02-23\n1593.92\n476.99\n2070.91\n\n\n2023-02-24\n1129.05\n279.36\n1408.41\n\n\n2023-02-25\n837.11\n0\n837.11\n\n\n2023-02-26\n2181.23\n0\n2181.23\n\n\n2023-02-27\n842.36\n380.00\n1222.36\n\n\n2023-02-28\n1291.01\n0\n1291.01\n\n\n\n\n\n\n\n\nfoodcosts.sum()\n\natelier     35045.44\nsupplier     6788.99\ntotal       41834.43\ndtype: float64\n\n\n\nFULLY_LOADED_COST_HOURS = 30 \n\n# month: 2023-02\n# returns the start and end day for a given month (format YYYY-MM-DD)\ndef get_start_and_end_day_for_month(month):\n    days_in_month = get_days_in_month(month)\n    return days_in_month[0], days_in_month[-1]\n\ndef get_gross_margin_for_month(month, shop_name):\n    start_date, end_date = get_start_and_end_day_for_month(month)\n    foodcosts = core.get_food_costs_for_period_for_shop_per_day(start_date, end_date, shop_name)\n    foodcosts.index = foodcosts['date']\n    foodcosts = foodcosts.drop('date', axis=1)\n    sales = core.get_sales_for_period_for_shop_per_day(start_date, end_date, shop_name)\n    total_hours = get_hours_worked_for_a_shop_in_a_month(core.get_shop_id(shop_name), month)\n    gross_margin = sales.sum()['total_sales'] - foodcosts.sum()['total'] - FULLY_LOADED_COST_HOURS * total_hours\n    return {\n        \"gross_margin\": gross_margin,\n        \"total_hours\": total_hours,\n        \"total_sales\": sales.sum()['total_sales'],\n        \"total_foodcosts\": foodcosts.sum()['total'],\n        \"total_foodcosts_atelier\": foodcosts.sum()['atelier'],\n        \"total_foodcosts_supplier\": foodcosts.sum()['supplier'],\n    }\n\n\nget_gross_margin_for_month(\"2023-02\",\"Wemmel\")\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\n\n\n{'gross_margin': 11988.725779999999,\n 'total_hours': 492.80000000000007,\n 'total_sales': 63413.04578,\n 'total_foodcosts': 36640.32,\n 'total_foodcosts_atelier': 30272.61,\n 'total_foodcosts_supplier': 6367.71}\n\n\n\nshop_names = core.get_shop_names()\nshop_stats = {}\nfor shop_name in shop_names:\n    gross_margin = get_gross_margin_for_month(\"2023-02\", shop_name)\n    print('shop ' + shop_name + ' gross margins:')\n    print(gross_margin)\n    shop_stats[shop_name] = gross_margin\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\nshop La Hulpe gross margins:\n{'gross_margin': 9838.452840000002, 'total_hours': 485.9000000000001, 'total_sales': 66249.88284, 'total_foodcosts': 41834.43, 'total_foodcosts_atelier': 35045.44, 'total_foodcosts_supplier': 6788.99}\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\nshop Fort Jaco gross margins:\n{'gross_margin': 17723.038160000007, 'total_hours': 682.7833333333334, 'total_sales': 93298.64816000001, 'total_foodcosts': 55092.11, 'total_foodcosts_atelier': 45062.28, 'total_foodcosts_supplier': 10029.83}\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\nshop Woluwe gross margins:\n{'gross_margin': 31943.659859999992, 'total_hours': 895.1333333333333, 'total_sales': 122830.83986, 'total_foodcosts': 64033.18, 'total_foodcosts_atelier': 54410.09, 'total_foodcosts_supplier': 9623.09}\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n500\nshop Tongres gross margins:\n{'gross_margin': 238.70504000000074, 'total_hours': 0, 'total_sales': 86848.05504, 'total_foodcosts': 86609.35, 'total_foodcosts_atelier': 84294.87, 'total_foodcosts_supplier': 2314.48}\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\nshop Wemmel gross margins:\n{'gross_margin': 11988.725779999999, 'total_hours': 492.80000000000007, 'total_sales': 63413.04578, 'total_foodcosts': 36640.32, 'total_foodcosts_atelier': 30272.61, 'total_foodcosts_supplier': 6367.71}\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\nshop CHATELAIN gross margins:\n{'gross_margin': 27820.0835, 'total_hours': 724.2, 'total_sales': 104944.5935, 'total_foodcosts': 55398.51, 'total_foodcosts_atelier': 45822.49, 'total_foodcosts_supplier': 9576.02}\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\nshop OVERIJSE gross margins:\n{'gross_margin': -4840.650419999998, 'total_hours': 656.2, 'total_sales': 54266.58958, 'total_foodcosts': 39421.24, 'total_foodcosts_atelier': 32689.35, 'total_foodcosts_supplier': 6731.89}\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\nshop LATEM gross margins:\n{'gross_margin': 4909.245800000001, 'total_hours': 695.1333333333334, 'total_sales': 71673.5558, 'total_foodcosts': 45910.31, 'total_foodcosts_atelier': 37727.61, 'total_foodcosts_supplier': 8182.7}\n\n\n\ndf = pd.DataFrame.from_dict(shop_stats, orient='index').round(2)\ndisplay(df)\n\n\n\n\n\n\n\n\ngross_margin\ntotal_hours\ntotal_sales\ntotal_foodcosts\ntotal_foodcosts_atelier\ntotal_foodcosts_supplier\n\n\n\n\nLa Hulpe\n9838.45\n485.90\n66249.88\n41834.43\n35045.44\n6788.99\n\n\nFort Jaco\n17723.04\n682.78\n93298.65\n55092.11\n45062.28\n10029.83\n\n\nWoluwe\n31943.66\n895.13\n122830.84\n64033.18\n54410.09\n9623.09\n\n\nTongres\n238.71\n0.00\n86848.06\n86609.35\n84294.87\n2314.48\n\n\nWemmel\n11988.73\n492.80\n63413.05\n36640.32\n30272.61\n6367.71\n\n\nCHATELAIN\n27820.08\n724.20\n104944.59\n55398.51\n45822.49\n9576.02\n\n\nOVERIJSE\n-4840.65\n656.20\n54266.59\n39421.24\n32689.35\n6731.89\n\n\nLATEM\n4909.25\n695.13\n71673.56\n45910.31\n37727.61\n8182.70\n\n\n\n\n\n\n\n\n# recalculate gross margin based on 30 EUR per hour instead of 25 EUR just using df\ndf['gross_margin'] = df['total_sales'] - df['total_foodcosts'] - df['total_hours'] * 30\n\n\ndf['gross_margin_pct'] = (df['gross_margin'] / df['total_sales'] * 100).round(0)\n\n\ndf_pct = df.copy()\ndf_pct['gross_margin_pct'] = (df['gross_margin'] / df['total_sales'] * 100).round(0)\n# create a dataframe with the gross margin percentage, % of foodcosts atelier and % of foodcosts supplier\ndf_pct['foodcosts_atelier_pct'] = (df_pct['total_foodcosts_atelier'] / df_pct['total_sales'] * 100).round(0)\ndf_pct['foodcosts_supplier_pct'] = (df_pct['total_foodcosts_supplier'] / df_pct['total_sales'] * 100).round(0)\ndf_pct['wage_cost_pct'] = (df_pct['total_hours'] * FULLY_LOADED_COST_HOURS / df_pct['total_sales'] * 100).round(0)\n\ndf_pct = df_pct[['gross_margin_pct', 'foodcosts_atelier_pct', 'foodcosts_supplier_pct', 'wage_cost_pct']]\n# remove Tongres as it is a franchisee\ndf_pct = df_pct.drop('Tongres')\n# sort by gross margin percentage\ndf_pct = df_pct.sort_values(by=['gross_margin_pct'], ascending=False)\n# show all columns except gross_margin_pct and wage_cost_pct\n\ndisplay(df_pct[['foodcosts_atelier_pct', 'foodcosts_supplier_pct']])\n\n\n\n\n\n\n\n\nfoodcosts_atelier_pct\nfoodcosts_supplier_pct\n\n\n\n\nCHATELAIN\n44.0\n9.0\n\n\nWoluwe\n44.0\n8.0\n\n\nFort Jaco\n48.0\n11.0\n\n\nWemmel\n48.0\n10.0\n\n\nLa Hulpe\n53.0\n10.0\n\n\nLATEM\n53.0\n11.0\n\n\nOVERIJSE\n60.0\n12.0\n\n\n\n\n\n\n\n\n# create markdown table\nprint(df_pct.to_markdown())\n\n|           |   gross_margin_pct |   foodcosts_atelier_pct |   foodcosts_supplier_pct |   wage_cost_pct |\n|:----------|-------------------:|------------------------:|-------------------------:|----------------:|\n| CHATELAIN |                 27 |                      44 |                        9 |              21 |\n| Woluwe    |                 26 |                      44 |                        8 |              22 |\n| Fort Jaco |                 19 |                      48 |                       11 |              22 |\n| Wemmel    |                 19 |                      48 |                       10 |              23 |\n| La Hulpe  |                 15 |                      53 |                       10 |              22 |\n| LATEM     |                  7 |                      53 |                       11 |              29 |\n| OVERIJSE  |                 -9 |                      60 |                       12 |              36 |\n\n\n\n!pip install tabulate\n\nCollecting tabulate\n  Downloading tabulate-0.9.0-py3-none-any.whl (35 kB)\nInstalling collected packages: tabulate\nSuccessfully installed tabulate-0.9.0\n\n\n\nget_gross_margin_for_month(\"2023-02-01\", \"2023-02-28\", 'PAVLOVA BAR ANVERS')\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n200\n\n\n{'gross_margin': -3866.1100000000006,\n 'total_hours': 301.8,\n 'total_sales': 8256.74,\n 'total_foodcosts': 3068.85}\n\n\n\npavlova = {'gross_margin': -2357.1100000000006,\n 'total_hours': 301.8,\n 'total_sales': 8256.74,\n 'total_foodcosts': 3068.85}\n\n\n\n\nconfig.ini file available... using that"
  },
  {
    "objectID": "can we spot the best salesperson?.html",
    "href": "can we spot the best salesperson?.html",
    "title": "Add more features",
    "section": "",
    "text": "import sys\nsys.path.append(\"..\")\nimport foodcosts.core as core\nimport requests\nimport json\nimport calendar\nimport pandas as pd\nfrom fastbook import *\nfrom datetime import date\nfrom fastai.tabular.core import *\nfrom pandas.api.types import is_string_dtype, is_numeric_dtype, is_categorical_dtype\nfrom fastai.tabular.all import *\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom dtreeviz.trees import *\nfrom IPython.display import Image, display_svg, SVG\n\npd.options.display.max_rows = 20\npd.options.display.max_columns = 8\n\n\ndef get_hours_worked_for_a_shop_for_a_period(warehouse_id, start_yyyy_mm_dd, end_yyyy_mm_dd):\n    url = \"https://formation.fthek.be/api/v2/hours_worked/period\"\n    body = {\n        \"warehouse_id\": warehouse_id,\n        \"start_yyyy_mm_dd\": start_yyyy_mm_dd,\n        \"end_yyyy_mm_dd\": end_yyyy_mm_dd\n    }\n    response = requests.get(url, json=body)\n    print(response.status_code)\n    if response.status_code == 200:\n        return response.json()\n    else:\n        print(response)\n        return None\n\n\n# get hours worked for march 2023 for Chatelain\nres = get_hours_worked_for_a_shop_for_a_period(\n    warehouse_id=12,\n    start_yyyy_mm_dd=\"2023-03-01\",\n    end_yyyy_mm_dd=\"2023-03-02\"\n)\nprint(res)\n\n200\n[{'hoursWorked': 11.06666666666667, 'employee': 'Bram DE KEYSER', 'date': '2023-03-02T23:00:00.000Z', 'warehouseId': 12}, {'hoursWorked': 11.18333333333333, 'employee': 'Marine JANSSENS', 'date': '2023-03-01T23:00:00.000Z', 'warehouseId': 12}, {'hoursWorked': 10.95, 'employee': 'Fernando HERNANDEZ GUARDADO', 'date': '2023-03-02T23:00:00.000Z', 'warehouseId': 12}, {'hoursWorked': 11.18333333333333, 'employee': 'Paul GUERRERO', 'date': '2023-03-01T23:00:00.000Z', 'warehouseId': 12}, {'hoursWorked': 11.03333333333333, 'employee': 'Paul GUERRERO', 'date': '2023-03-02T23:00:00.000Z', 'warehouseId': 12}]\n\n\n\nshops = [( core.get_shop_id(shop_name), shop_name ) for shop_name in core.get_shop_names()]\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\nshops\n\n[(2, 'La Hulpe'),\n (3, 'Fort Jaco'),\n (4, 'Woluwe'),\n (6, 'Tongres'),\n (7, 'Wemmel'),\n (12, 'CHATELAIN'),\n (36, 'OVERIJSE'),\n (39, 'LATEM')]\n\n\n\n# imports\nfrom datetime import date\nimport calendar\n\n# returns list of date strings in yyyy_mm_dd format\ndef get_dates_in_month(month, year):\n    return [date(year, month, day).strftime(\"%Y-%m-%d\") for day in range(1, calendar.monthrange(year, month)[1] + 1)]\n\nget_dates_in_month(3,2023)\n\n['2023-03-01',\n '2023-03-02',\n '2023-03-03',\n '2023-03-04',\n '2023-03-05',\n '2023-03-06',\n '2023-03-07',\n '2023-03-08',\n '2023-03-09',\n '2023-03-10',\n '2023-03-11',\n '2023-03-12',\n '2023-03-13',\n '2023-03-14',\n '2023-03-15',\n '2023-03-16',\n '2023-03-17',\n '2023-03-18',\n '2023-03-19',\n '2023-03-20',\n '2023-03-21',\n '2023-03-22',\n '2023-03-23',\n '2023-03-24',\n '2023-03-25',\n '2023-03-26',\n '2023-03-27',\n '2023-03-28',\n '2023-03-29',\n '2023-03-30',\n '2023-03-31']\n\n\n\ncore.get_shop_names()\n\nconfig.ini file available... using that\n\n\n['La Hulpe',\n 'Fort Jaco',\n 'Woluwe',\n 'Tongres',\n 'Wemmel',\n 'CHATELAIN',\n 'OVERIJSE',\n 'LATEM']\n\n\n\n# interested_shops = [(4, 'Woluwe'),  (12, 'CHATELAIN')]\ninterested_shops = [\n    (\n    core.get_shop_id(name),\n    name \n    ) for name in core.get_shop_names()\n]\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\ncore.get_sales_for_period_for_shop_per_day(\"2023-01-01\", \"2023-03-31\", \"Woluwe\").head(4)\n\nconfig.ini file available... using that\n\n\n\n\n\n\n\n\n\nshop_name\nday\ntotal_sales\n\n\n\n\n0\nWoluwe\n2023-01-02\n2943.39616\n\n\n1\nWoluwe\n2023-01-03\n2850.73890\n\n\n2\nWoluwe\n2023-01-04\n3917.95500\n\n\n3\nWoluwe\n2023-01-05\n3937.68200\n\n\n\n\n\n\n\n\ndef get_data_table(dates, shops):\n    min_date = min(dates)\n    max_date = max(dates)\n    # data frame shop_sales\n    shop_sales = pd.DataFrame() \n    shop_hours = pd.DataFrame()\n    for id, name in shops:\n        sales = core.get_sales_for_period_for_shop_per_day(min_date, max_date, name)\n        sales[\"warehouseId\"] = id\n        shop_sales = shop_sales.append(sales, ignore_index=True) \n\n        hours = get_hours_worked_for_a_shop_for_a_period(id, min_date, max_date)\n        shop_hours = shop_hours.append(hours, ignore_index=True)\n    return shop_hours, shop_sales\n\n\n# using get_dates_in_month, return a list of all dates in the first quarter of 2023\nall_dates = [\n    date for month in range(1,4) for date in get_dates_in_month(month, 2023)\n]\nall_dates\n\n['2023-01-01',\n '2023-01-02',\n '2023-01-03',\n '2023-01-04',\n '2023-01-05',\n '2023-01-06',\n '2023-01-07',\n '2023-01-08',\n '2023-01-09',\n '2023-01-10',\n '2023-01-11',\n '2023-01-12',\n '2023-01-13',\n '2023-01-14',\n '2023-01-15',\n '2023-01-16',\n '2023-01-17',\n '2023-01-18',\n '2023-01-19',\n '2023-01-20',\n '2023-01-21',\n '2023-01-22',\n '2023-01-23',\n '2023-01-24',\n '2023-01-25',\n '2023-01-26',\n '2023-01-27',\n '2023-01-28',\n '2023-01-29',\n '2023-01-30',\n '2023-01-31',\n '2023-02-01',\n '2023-02-02',\n '2023-02-03',\n '2023-02-04',\n '2023-02-05',\n '2023-02-06',\n '2023-02-07',\n '2023-02-08',\n '2023-02-09',\n '2023-02-10',\n '2023-02-11',\n '2023-02-12',\n '2023-02-13',\n '2023-02-14',\n '2023-02-15',\n '2023-02-16',\n '2023-02-17',\n '2023-02-18',\n '2023-02-19',\n '2023-02-20',\n '2023-02-21',\n '2023-02-22',\n '2023-02-23',\n '2023-02-24',\n '2023-02-25',\n '2023-02-26',\n '2023-02-27',\n '2023-02-28',\n '2023-03-01',\n '2023-03-02',\n '2023-03-03',\n '2023-03-04',\n '2023-03-05',\n '2023-03-06',\n '2023-03-07',\n '2023-03-08',\n '2023-03-09',\n '2023-03-10',\n '2023-03-11',\n '2023-03-12',\n '2023-03-13',\n '2023-03-14',\n '2023-03-15',\n '2023-03-16',\n '2023-03-17',\n '2023-03-18',\n '2023-03-19',\n '2023-03-20',\n '2023-03-21',\n '2023-03-22',\n '2023-03-23',\n '2023-03-24',\n '2023-03-25',\n '2023-03-26',\n '2023-03-27',\n '2023-03-28',\n '2023-03-29',\n '2023-03-30',\n '2023-03-31']\n\n\n\nhours_df, sales_df = get_data_table(all_dates, interested_shops)\n\nconfig.ini file available... using that\n200\nconfig.ini file available... using that\n200\nconfig.ini file available... using that\n200\nconfig.ini file available... using that\n400\n&lt;Response [400]&gt;\nconfig.ini file available... using that\n200\nconfig.ini file available... using that\n200\nconfig.ini file available... using that\n200\nconfig.ini file available... using that\n200\n\n\n\n# convert day to string %Y-%m-%d\n# sales_df[\"day\"] = sales_df[\"day\"].apply(lambda x: x.strftime(\"%Y-%m-%d\"))\nsales_df.head().iloc[0].day\n\ndatetime.date(2023, 1, 2)\n\n\n\nhours_df\n\n\n\n\n\n\n\n\nhoursWorked\nemployee\ndate\nwarehouseId\n\n\n\n\n0\n10.466667\nMaxime VANHAMME\n2023-01-01T22:59:59.999Z\n2\n\n\n1\n10.383333\nKevin BETTE\n2023-01-01T22:59:59.999Z\n2\n\n\n2\n5.750000\nMassimo OLIVO\n2023-01-01T22:59:59.999Z\n2\n\n\n3\n7.016667\nAnnabelle GATHY\n2023-01-01T22:59:59.999Z\n2\n\n\n4\n7.016667\nLéa VAN DEN HOUTE\n2023-01-01T22:59:59.999Z\n2\n\n\n...\n...\n...\n...\n...\n\n\n1804\n7.083333\nLies VERSTRAETEN\n2023-01-06T23:00:00.000Z\n39\n\n\n1805\n4.566667\nLies VERSTRAETEN\n2023-01-07T23:00:00.000Z\n39\n\n\n1806\n5.166667\nLies VERSTRAETEN\n2023-01-13T23:00:00.000Z\n39\n\n\n1807\n5.116667\nLies VERSTRAETEN\n2023-01-20T23:00:00.000Z\n39\n\n\n1808\n5.116667\nLies VERSTRAETEN\n2023-01-27T23:00:00.000Z\n39\n\n\n\n\n1809 rows × 4 columns\n\n\n\n\nhours_df.employee.unique()\n\narray(['Maxime VANHAMME', 'Kevin BETTE', 'Massimo OLIVO',\n       'Annabelle GATHY', 'Léa VAN DEN HOUTE', 'Inès DACY',\n       'Khalil BOUMESHED', 'Savina RAJANAH', 'Vincenzo LO GATTO',\n       'Maximilien MICHIELS', 'Shahine BANDALI', 'Aurelie MARIVOET',\n       'Tito RODRIGUEZ AMAYA', 'Benjamin MOENECLAEY',\n       'Carlos AZUCINA RECINA', 'Armel KANDJEU', 'Luca BORGO',\n       'Grace EBELLE', 'Renaud LECOMTE', 'Ana DE OLIVEIRA CARREIRA',\n       'Diana ARBELAEZ CORREA', 'Nadine DEBROUX', 'Anne LIPPENS',\n       'Myriam VANDERHAEGEN', 'Armando APARICIO PEREZ', 'Ronny BERT',\n       'Thomas MOT', 'Esther ZHU', 'Charlotte SNEYERS', 'Guy MAWETE',\n       'Kris GALOPPIN', 'Aubin KANDJEU', 'Nicolas QUERTINMONT',\n       'Sanne DE LOOSE', 'Jelle ERAERTS', 'Makane',\n       'Christian BOURGUIGNON', 'Justine CORNET', 'Pauline POSOCCO',\n       'Jawhara TAMRI', 'Bram DE KEYSER', 'Marine JANSSENS',\n       'Fernando HERNANDEZ GUARDADO', 'Paul GUERRERO', 'Fatou YARA',\n       'Ricardo GUERRERO', 'Johan VAN GUCHT', 'Cécile BOLSAIE',\n       'Kathy REGELBRUGGE', 'Giorgio LAMAGNO', 'Jaya DE SCHEPPER',\n       'Hubert VAN STRIEN', 'Mathis DENIS', 'Alessandra CHIANALE',\n       'Olivier HEES', 'Jules DE WITTE', 'Alix VERSTRAETEN',\n       'Michel WOUTERS', 'Carine VERCRAYE', 'Sylvie DE MEYER',\n       'Roos VANDEKERCKHOVE', 'Britt JOORIS', 'Stefanie VERMEERSCH',\n       'Cato DE SLOOVERE', 'Anna SCHEPENS', 'Ella DE GRAEVE',\n       'Lies VERSTRAETEN', 'Anne-Laure VERWEE', 'Linde',\n       'Charlotte DE LANGE', 'Wout VERSTRAEYEN', 'Lisa DE BRUYKER CHABBA'],\n      dtype=object)\n\n\n\nhours_df.head()\n\n\n\n\n\n\n\n\nhoursWorked\nemployee\ndate\nwarehouseId\n\n\n\n\n0\n10.466667\nMaxime VANHAMME\n2023-01-01T22:59:59.999Z\n2\n\n\n1\n10.383333\nKevin BETTE\n2023-01-01T22:59:59.999Z\n2\n\n\n2\n5.750000\nMassimo OLIVO\n2023-01-01T22:59:59.999Z\n2\n\n\n3\n7.016667\nAnnabelle GATHY\n2023-01-01T22:59:59.999Z\n2\n\n\n4\n7.016667\nLéa VAN DEN HOUTE\n2023-01-01T22:59:59.999Z\n2\n\n\n\n\n\n\n\n\npivoted_hours_df = hours_df.pivot_table(\n    columns=\"employee\",\n    index=[\"warehouseId\", \"date\"],\n    values=\"hoursWorked\",\n    fill_value=0\n)\npivoted_hours_df.reset_index(inplace=True)\n\n\n# add column called date_label\n# pivoted_hours_df[\"date_label\"] = pivoted_hours_df[\"date\"].apply(lambda x: x.strftime(\"%Y-%m-%d\"))\npivoted_hours_df[\"day\"] = pd.to_datetime(pivoted_hours_df.date).apply(lambda x: x.strftime(\"%Y-%m-%d\"))\n\n\nsales_df.head()\n\n\n\n\n\n\n\n\nshop_name\nday\ntotal_sales\nwarehouseId\n\n\n\n\n0\nLa Hulpe\n2023-01-02\n1732.00586\n2\n\n\n1\nLa Hulpe\n2023-01-03\n1715.98970\n2\n\n\n2\nLa Hulpe\n2023-01-04\n2034.67742\n2\n\n\n3\nLa Hulpe\n2023-01-05\n1319.44470\n2\n\n\n4\nLa Hulpe\n2023-01-06\n1337.52960\n2\n\n\n\n\n\n\n\n\nsales_df.head().iloc[0].day\n\ndatetime.date(2023, 1, 2)\n\n\n\npivoted_hours_df.head()\n# sales_df.head()[[\"warehouseId\", \"day\"]].iloc[0].day\n\n\n\n\n\n\n\nemployee\nwarehouseId\ndate\nAlessandra CHIANALE\nAlix VERSTRAETEN\nAna DE OLIVEIRA CARREIRA\nAnna SCHEPENS\nAnnabelle GATHY\nAnne LIPPENS\nAnne-Laure VERWEE\nArmando APARICIO PEREZ\n...\nSanne DE LOOSE\nSavina RAJANAH\nShahine BANDALI\nStefanie VERMEERSCH\nSylvie DE MEYER\nThomas MOT\nTito RODRIGUEZ AMAYA\nVincenzo LO GATTO\nWout VERSTRAEYEN\nday\n\n\n\n\n0\n2\n2023-01-01T22:59:59.999Z\n0.0\n0.0\n0.0\n0.0\n7.016667\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0\n2023-01-01\n\n\n1\n2\n2023-01-01T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n0.000000\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0\n2023-01-01\n\n\n2\n2\n2023-01-02T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n0.000000\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0\n2023-01-02\n\n\n3\n2\n2023-01-03T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n0.000000\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0\n2023-01-03\n\n\n4\n2\n2023-01-04T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n0.000000\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0\n2023-01-04\n\n\n\n\n5 rows × 75 columns\n\n\n\n\nsales_df[\"date\"] = sales_df.day\nsales_df[\"day\"] = pd.to_datetime(sales_df.day).apply(lambda x: x.strftime(\"%Y-%m-%d\"))\n# sales_df.iloc[0]\n#result = pd.merge(pivoted_hours_df, sales_df, on=['warehouseId', 'day'])\n\n\nmerged_res = pd.merge(\n    sales_df, \n    pivoted_hours_df, \n    on=[\n        'warehouseId', \n         'day'\n    ]\n    )\n\n\nmerged_res.head()\n\n\n\n\n\n\n\n\nshop_name\nday\ntotal_sales\nwarehouseId\ndate_x\ndate_y\nAlessandra CHIANALE\nAlix VERSTRAETEN\nAna DE OLIVEIRA CARREIRA\nAnna SCHEPENS\n...\nRoos VANDEKERCKHOVE\nSanne DE LOOSE\nSavina RAJANAH\nShahine BANDALI\nStefanie VERMEERSCH\nSylvie DE MEYER\nThomas MOT\nTito RODRIGUEZ AMAYA\nVincenzo LO GATTO\nWout VERSTRAEYEN\n\n\n\n\n0\nLa Hulpe\n2023-01-02\n1732.00586\n2\n2023-01-02\n2023-01-02T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0\n\n\n1\nLa Hulpe\n2023-01-03\n1715.98970\n2\n2023-01-03\n2023-01-03T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0\n\n\n2\nLa Hulpe\n2023-01-04\n2034.67742\n2\n2023-01-04\n2023-01-04T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0\n\n\n3\nLa Hulpe\n2023-01-05\n1319.44470\n2\n2023-01-05\n2023-01-05T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0\n\n\n4\nLa Hulpe\n2023-01-06\n1337.52960\n2\n2023-01-06\n2023-01-06T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0\n\n\n\n\n5 rows × 78 columns\n\n\n\n\n# import add_datepart from fastai\n# drop column date\ndef add_features(df):\n    # add column day of the week (i.e. mon, tue, wed, etc.)\n    add_datepart(df,  \"day\")\n    # df[\"day_of_week\"] = pd.to_datetime(df.day).apply(lambda x: x.strftime(\"%A\"))\n\n\ndef test():\n    df = sales_df.copy()\n    add_features(df)\n    print(df)\ntest()\n\n  shop_name         day  total_sales  warehouseId        date\n0  La Hulpe  2023-01-02   1732.00586            2  2023-01-02\n1  La Hulpe  2023-01-03   1715.98970            2  2023-01-03\n    shop_name  total_sales  warehouseId        date  dayYear  dayMonth  \\\n0    La Hulpe   1732.00586            2  2023-01-02     2023         1   \n1    La Hulpe   1715.98970            2  2023-01-03     2023         1   \n2    La Hulpe   2034.67742            2  2023-01-04     2023         1   \n3    La Hulpe   1319.44470            2  2023-01-05     2023         1   \n4    La Hulpe   1337.52960            2  2023-01-06     2023         1   \n..        ...          ...          ...         ...      ...       ...   \n699     LATEM   2584.94780           39  2023-03-26     2023         3   \n700     LATEM   1516.20070           39  2023-03-27     2023         3   \n701     LATEM   1623.17946           39  2023-03-28     2023         3   \n702     LATEM   2472.40770           39  2023-03-29     2023         3   \n703     LATEM   2767.07640           39  2023-03-30     2023         3   \n\n     dayWeek  dayDay  dayDayofweek  dayDayofyear  dayIs_month_end  \\\n0          1       2             0             2            False   \n1          1       3             1             3            False   \n2          1       4             2             4            False   \n3          1       5             3             5            False   \n4          1       6             4             6            False   \n..       ...     ...           ...           ...              ...   \n699       12      26             6            85            False   \n700       13      27             0            86            False   \n701       13      28             1            87            False   \n702       13      29             2            88            False   \n703       13      30             3            89            False   \n\n     dayIs_month_start  dayIs_quarter_end  dayIs_quarter_start  \\\n0                False              False                False   \n1                False              False                False   \n2                False              False                False   \n3                False              False                False   \n4                False              False                False   \n..                 ...                ...                  ...   \n699              False              False                False   \n700              False              False                False   \n701              False              False                False   \n702              False              False                False   \n703              False              False                False   \n\n     dayIs_year_end  dayIs_year_start    dayElapsed  \n0             False             False  1.672618e+09  \n1             False             False  1.672704e+09  \n2             False             False  1.672790e+09  \n3             False             False  1.672877e+09  \n4             False             False  1.672963e+09  \n..              ...               ...           ...  \n699           False             False  1.679789e+09  \n700           False             False  1.679875e+09  \n701           False             False  1.679962e+09  \n702           False             False  1.680048e+09  \n703           False             False  1.680134e+09  \n\n[704 rows x 17 columns]\n\n\n\nadd_features(merged_res)\n\nKeyError: 'day'\n\n\n\nmerged_res.head()\n\n\n\n\n\n\n\n\nshop_name\ntotal_sales\nwarehouseId\ndate_x\ndate_y\nAlessandra CHIANALE\nAlix VERSTRAETEN\nAna DE OLIVEIRA CARREIRA\nAnna SCHEPENS\nAnnabelle GATHY\n...\ndayDay\ndayDayofweek\ndayDayofyear\ndayIs_month_end\ndayIs_month_start\ndayIs_quarter_end\ndayIs_quarter_start\ndayIs_year_end\ndayIs_year_start\ndayElapsed\n\n\n\n\n0\nLa Hulpe\n1732.00586\n2\n2023-01-02\n2023-01-02T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n2\n0\n2\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n1.672618e+09\n\n\n1\nLa Hulpe\n1715.98970\n2\n2023-01-03\n2023-01-03T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n3\n1\n3\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n1.672704e+09\n\n\n2\nLa Hulpe\n2034.67742\n2\n2023-01-04\n2023-01-04T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n4\n2\n4\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n1.672790e+09\n\n\n3\nLa Hulpe\n1319.44470\n2\n2023-01-05\n2023-01-05T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n5\n3\n5\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n1.672877e+09\n\n\n4\nLa Hulpe\n1337.52960\n2\n2023-01-06\n2023-01-06T23:00:00.000Z\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n6\n4\n6\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n1.672963e+09\n\n\n\n\n5 rows × 90 columns\n\n\n\n\n# remove warehouseId from merged_res\nmerged_res.drop(columns=[\"warehouseId\",\"day\", \"date_x\", \"date_y\"], inplace=True)\n\n\nmerged_res.head()\n\n\n\n\n\n\n\n\nshop_name\ntotal_sales\nAlessandra CHIANALE\nAlix VERSTRAETEN\nAna DE OLIVEIRA CARREIRA\nAnna SCHEPENS\nAnnabelle GATHY\nAnne LIPPENS\nAnne-Laure VERWEE\nArmando APARICIO PEREZ\n...\nSanne DE LOOSE\nSavina RAJANAH\nShahine BANDALI\nStefanie VERMEERSCH\nSylvie DE MEYER\nThomas MOT\nTito RODRIGUEZ AMAYA\nVincenzo LO GATTO\nWout VERSTRAEYEN\nday_of_week\n\n\n\n\n0\nLa Hulpe\n1732.01\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n...\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0\nMonday\n\n\n1\nLa Hulpe\n1715.99\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n...\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0\nTuesday\n\n\n2\nLa Hulpe\n2034.68\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n...\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0\nWednesday\n\n\n3\nLa Hulpe\n1319.44\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n...\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0\nThursday\n\n\n4\nLa Hulpe\n1337.53\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n...\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0\nFriday\n\n\n\n\n5 rows × 75 columns\n\n\n\n\ntraining\n\ncat_names = [\"day_of_week\", \"shop_name\"]\n\n\n# get names of columns that are not in cat_names or not equal to total_sales\ncont_names = [col for col in merged_res.columns if col not in cat_names and col != \"total_sales\"]\ncont_names\n\n['Alessandra CHIANALE',\n 'Alix VERSTRAETEN',\n 'Ana DE OLIVEIRA CARREIRA',\n 'Anna SCHEPENS',\n 'Annabelle GATHY',\n 'Anne LIPPENS',\n 'Anne-Laure VERWEE',\n 'Armando APARICIO PEREZ',\n 'Armel KANDJEU',\n 'Aubin KANDJEU',\n 'Aurelie MARIVOET',\n 'Benjamin MOENECLAEY',\n 'Bram DE KEYSER',\n 'Britt JOORIS',\n 'Carine VERCRAYE',\n 'Carlos AZUCINA RECINA',\n 'Cato DE SLOOVERE',\n 'Charlotte DE LANGE',\n 'Charlotte SNEYERS',\n 'Christian BOURGUIGNON',\n 'Cécile BOLSAIE',\n 'Diana ARBELAEZ CORREA',\n 'Ella DE GRAEVE',\n 'Esther ZHU',\n 'Fatou YARA',\n 'Fernando HERNANDEZ GUARDADO',\n 'Giorgio LAMAGNO',\n 'Grace EBELLE',\n 'Guy MAWETE',\n 'Hubert VAN STRIEN',\n 'Inès DACY',\n 'Jawhara TAMRI',\n 'Jaya DE SCHEPPER',\n 'Jelle ERAERTS',\n 'Johan VAN GUCHT',\n 'Jules DE WITTE',\n 'Justine CORNET',\n 'Kathy REGELBRUGGE',\n 'Kevin BETTE',\n 'Khalil BOUMESHED',\n 'Kris GALOPPIN',\n 'Lies VERSTRAETEN',\n 'Linde',\n 'Lisa DE BRUYKER CHABBA',\n 'Luca BORGO',\n 'Léa VAN DEN HOUTE',\n 'Makane',\n 'Marine JANSSENS',\n 'Massimo OLIVO',\n 'Mathis DENIS',\n 'Maxime VANHAMME',\n 'Maximilien MICHIELS',\n 'Michel WOUTERS',\n 'Myriam VANDERHAEGEN',\n 'Nadine DEBROUX',\n 'Nicolas QUERTINMONT',\n 'Olivier HEES',\n 'Paul GUERRERO',\n 'Pauline POSOCCO',\n 'Renaud LECOMTE',\n 'Ricardo GUERRERO',\n 'Ronny BERT',\n 'Roos VANDEKERCKHOVE',\n 'Sanne DE LOOSE',\n 'Savina RAJANAH',\n 'Shahine BANDALI',\n 'Stefanie VERMEERSCH',\n 'Sylvie DE MEYER',\n 'Thomas MOT',\n 'Tito RODRIGUEZ AMAYA',\n 'Vincenzo LO GATTO',\n 'Wout VERSTRAEYEN']\n\n\n\ndf = pd.get_dummies(merged_res, columns=cat_names)\n\n\ndf.head()\n\n\n\n\n\n\n\n\ntotal_sales\nAlessandra CHIANALE\nAlix VERSTRAETEN\nAna DE OLIVEIRA CARREIRA\nAnna SCHEPENS\nAnnabelle GATHY\nAnne LIPPENS\nAnne-Laure VERWEE\nArmando APARICIO PEREZ\nArmel KANDJEU\n...\nday_of_week_Thursday\nday_of_week_Tuesday\nday_of_week_Wednesday\nshop_name_CHATELAIN\nshop_name_Fort Jaco\nshop_name_LATEM\nshop_name_La Hulpe\nshop_name_OVERIJSE\nshop_name_Wemmel\nshop_name_Woluwe\n\n\n\n\n0\n1732.01\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n...\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n\n\n1\n1715.99\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n...\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n\n\n2\n2034.68\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n...\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n\n\n3\n1319.44\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n...\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n\n\n4\n1337.53\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n...\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n\n\n\n\n5 rows × 87 columns\n\n\n\n\nfrom torch import tensor\n\nt_dep = tensor(df.total_sales.values, dtype=float)\n\n\nindep_cols = [col for col in df.columns if col not in cat_names and col != \"total_sales\"]\n\n\nt_indep = tensor(df[indep_cols].values, dtype=torch.float)\nt_indep\n\ntensor([[0., 0., 0.,  ..., 0., 0., 0.],\n        [0., 0., 0.,  ..., 0., 0., 0.],\n        [0., 0., 0.,  ..., 0., 0., 0.],\n        ...,\n        [0., 0., 0.,  ..., 0., 0., 0.],\n        [0., 0., 0.,  ..., 0., 0., 0.],\n        [0., 0., 0.,  ..., 0., 0., 0.]])\n\n\n\nt_indep.shape\n\ntorch.Size([599, 86])\n\n\n\ntorch.manual_seed(442)\n\nn_coeff = t_indep.shape[1]\ncoeffs = torch.rand(n_coeff)-0.5\ncoeffs\n\ntensor([-0.4629,  0.1386,  0.2409, -0.2262, -0.2632, -0.3147,  0.4876,  0.3136,\n         0.2799, -0.4392,  0.2103,  0.3625,  0.1722,  0.2324, -0.3575, -0.0010,\n        -0.1833, -0.2411,  0.0489,  0.0866, -0.0534,  0.3132, -0.1487, -0.2551,\n         0.3328,  0.1292,  0.2361, -0.2622,  0.4051, -0.2674, -0.2312,  0.1147,\n         0.4072,  0.2834,  0.0835, -0.0504,  0.4354, -0.3408, -0.4552,  0.1447,\n        -0.4648, -0.3039, -0.1297, -0.0850,  0.4682,  0.3973, -0.4849,  0.2098,\n        -0.3018,  0.4185,  0.1089,  0.0791, -0.1708, -0.1882,  0.4861, -0.2534,\n        -0.2502, -0.0770,  0.3336, -0.4975, -0.2561,  0.0892, -0.4670,  0.3725,\n        -0.1095,  0.3443, -0.3448,  0.1112, -0.2866,  0.0245, -0.1640, -0.0845,\n        -0.1318,  0.3686,  0.3743,  0.4772, -0.0329, -0.3076,  0.1449,  0.3728,\n         0.1066, -0.1043, -0.4297, -0.0069, -0.2685,  0.2132])\n\n\n\nt_indep*coeffs\n\ntensor([[-0., 0., 0.,  ..., -0., -0., 0.],\n        [-0., 0., 0.,  ..., -0., -0., 0.],\n        [-0., 0., 0.,  ..., -0., -0., 0.],\n        ...,\n        [-0., 0., 0.,  ..., -0., -0., 0.],\n        [-0., 0., 0.,  ..., -0., -0., 0.],\n        [-0., 0., 0.,  ..., -0., -0., 0.]])\n\n\n\nvals,indices = t_indep.max(dim=0)\nt_indep = t_indep / vals\n\n\nt_indep*coeffs\n\ntensor([[-0., 0., 0.,  ..., -0., -0., 0.],\n        [-0., 0., 0.,  ..., -0., -0., 0.],\n        [-0., 0., 0.,  ..., -0., -0., 0.],\n        ...,\n        [-0., 0., 0.,  ..., -0., -0., 0.],\n        [-0., 0., 0.,  ..., -0., -0., 0.],\n        [-0., 0., 0.,  ..., -0., -0., 0.]])\n\n\n\npreds = (t_indep*coeffs).sum(axis=1)\n\n\npreds[:10]\n\ntensor([-0.5767, -1.2906, -0.5112, -0.5628, -0.6637, -0.6638, -0.4289, -0.5990,\n        -1.3077, -0.7758])\n\n\n\nloss = torch.abs(preds-t_dep).mean()\nloss\n\ntensor(2931.7363, dtype=torch.float64)\n\n\n\ndef calc_preds(coeffs, indeps): return (indeps*coeffs).sum(axis=1)\ndef calc_loss(coeffs, indeps, deps): return torch.abs(calc_preds(coeffs, indeps)-deps).mean()\n\n\ncoeffs.requires_grad_()\n\ntensor([-0.4629,  0.1386,  0.2409, -0.2262, -0.2632, -0.3147,  0.4876,  0.3136,\n         0.2799, -0.4392,  0.2103,  0.3625,  0.1722,  0.2324, -0.3575, -0.0010,\n        -0.1833, -0.2411,  0.0489,  0.0866, -0.0534,  0.3132, -0.1487, -0.2551,\n         0.3328,  0.1292,  0.2361, -0.2622,  0.4051, -0.2674, -0.2312,  0.1147,\n         0.4072,  0.2834,  0.0835, -0.0504,  0.4354, -0.3408, -0.4552,  0.1447,\n        -0.4648, -0.3039, -0.1297, -0.0850,  0.4682,  0.3973, -0.4849,  0.2098,\n        -0.3018,  0.4185,  0.1089,  0.0791, -0.1708, -0.1882,  0.4861, -0.2534,\n        -0.2502, -0.0770,  0.3336, -0.4975, -0.2561,  0.0892, -0.4670,  0.3725,\n        -0.1095,  0.3443, -0.3448,  0.1112, -0.2866,  0.0245, -0.1640, -0.0845,\n        -0.1318,  0.3686,  0.3743,  0.4772, -0.0329, -0.3076,  0.1449,  0.3728,\n         0.1066, -0.1043, -0.4297, -0.0069, -0.2685,  0.2132],\n       requires_grad=True)\n\n\n\nfrom fastai.data.transforms import RandomSplitter\ntrn_split,val_split=RandomSplitter(seed=42)(df)\n\n\ntrn_indep,val_indep = t_indep[trn_split],t_indep[val_split]\ntrn_dep,val_dep = t_dep[trn_split],t_dep[val_split]\nlen(trn_indep),len(val_indep)\n\n(480, 119)\n\n\n\ndef update_coeffs(coeffs, lr):\n    coeffs.sub_(coeffs.grad * lr)\n    coeffs.grad.zero_()\n\n\ndef one_epoch(coeffs, lr):\n    loss = calc_loss(coeffs, trn_indep, trn_dep)\n    loss.backward()\n    with torch.no_grad(): update_coeffs(coeffs, lr)\n    print(f\"{loss:.3f}\", end=\"; \")\n\n\ndef init_coeffs(): return (torch.rand(n_coeff)-0.5).requires_grad_()\n\n\ndef train_model(epochs=30, lr=0.01):\n    torch.manual_seed(442)\n    coeffs = init_coeffs()\n    for i in range(epochs): one_epoch(coeffs, lr=lr)\n    return coeffs\n\n\ncoeffs = train_model(18, lr=0.2)\n\n2926.872; 2926.791; 2926.710; 2926.628; 2926.547; 2926.466; 2926.384; 2926.303; 2926.222; 2926.140; 2926.059; 2925.977; 2925.896; 2925.815; 2925.733; 2925.652; 2925.571; 2925.489; \n\n\n\ndef show_coeffs(): \n    res = dict(zip(indep_cols, coeffs.requires_grad_(False)))\n    # sort by value from highest to lowest\n    res = {k: v for k, v in sorted(res.items(), key=lambda item: item[1], reverse=True)}\n    for k,v in res.items(): print(f\"{k}: {v:.3f}\")\nshow_coeffs()\n\nday_of_week_Sunday: 1.017\nshop_name_CHATELAIN: 0.935\nday_of_week_Monday: 0.879\nday_of_week_Saturday: 0.832\nNadine DEBROUX: 0.755\nday_of_week_Wednesday: 0.670\nshop_name_Woluwe: 0.656\nSanne DE LOOSE: 0.637\nLuca BORGO: 0.632\nshop_name_Fort Jaco: 0.594\nJustine CORNET: 0.540\nday_of_week_Thursday: 0.537\nDiana ARBELAEZ CORREA: 0.535\nshop_name_OVERIJSE: 0.533\nMarine JANSSENS: 0.512\nBenjamin MOENECLAEY: 0.510\nArmando APARICIO PEREZ: 0.509\nAnne-Laure VERWEE: 0.506\nMathis DENIS: 0.460\nLéa VAN DEN HOUTE: 0.458\nGuy MAWETE: 0.458\nJelle ERAERTS: 0.457\nJaya DE SCHEPPER: 0.432\nBram DE KEYSER: 0.431\nshop_name_LATEM: 0.406\nFatou YARA: 0.393\nFernando HERNANDEZ GUARDADO: 0.392\nPauline POSOCCO: 0.372\nday_of_week_Friday: 0.356\nShahine BANDALI: 0.352\nArmel KANDJEU: 0.318\nMaximilien MICHIELS: 0.308\nJohan VAN GUCHT: 0.305\nKhalil BOUMESHED: 0.291\nGiorgio LAMAGNO: 0.284\nAna DE OLIVEIRA CARREIRA: 0.281\nshop_name_Wemmel: 0.272\nSylvie DE MEYER: 0.271\nBritt JOORIS: 0.265\nMaxime VANHAMME: 0.262\nAurelie MARIVOET: 0.261\nTito RODRIGUEZ AMAYA: 0.254\nCharlotte SNEYERS: 0.213\nday_of_week_Tuesday: 0.202\nPaul GUERRERO: 0.192\nAlix VERSTRAETEN: 0.187\nRonny BERT: 0.149\nJawhara TAMRI: 0.122\nChristian BOURGUIGNON: 0.104\nMichel WOUTERS: 0.095\nshop_name_La Hulpe: 0.088\nSavina RAJANAH: 0.086\nVincenzo LO GATTO: 0.078\nCarlos AZUCINA RECINA: 0.042\nOlivier HEES: -0.003\nJules DE WITTE: -0.003\nHubert VAN STRIEN: -0.003\nCécile BOLSAIE: -0.020\nMassimo OLIVO: -0.036\nNicolas QUERTINMONT: -0.057\nWout VERSTRAEYEN: -0.071\nLisa DE BRUYKER CHABBA: -0.071\nMyriam VANDERHAEGEN: -0.100\nElla DE GRAEVE: -0.118\nLinde: -0.122\nCato DE SLOOVERE: -0.156\nThomas MOT: -0.169\nAnna SCHEPENS: -0.179\nAnne LIPPENS: -0.180\nAnnabelle GATHY: -0.195\nKevin BETTE: -0.199\nCharlotte DE LANGE: -0.214\nInès DACY: -0.224\nGrace EBELLE: -0.242\nRicardo GUERRERO: -0.249\nEsther ZHU: -0.255\nLies VERSTRAETEN: -0.255\nKathy REGELBRUGGE: -0.257\nAlessandra CHIANALE: -0.261\nStefanie VERMEERSCH: -0.262\nAubin KANDJEU: -0.263\nRoos VANDEKERCKHOVE: -0.301\nCarine VERCRAYE: -0.318\nKris GALOPPIN: -0.391\nMakane: -0.477\nRenaud LECOMTE: -0.486\n\n\n\n\nusing a decision tree\n\n# merged_res.head()\ndf1 = merged_res.copy()\n# log the total_sales\ndf1[\"total_sales\"] = np.log(df1[\"total_sales\"])\n\n\ndf1.drop([\"date_x\", \"date_y\"], axis=1, inplace=True)\n\n\ndf1.columns\n\nIndex(['shop_name', 'total_sales', 'warehouseId', 'Alessandra CHIANALE',\n       'Alix VERSTRAETEN', 'Ana DE OLIVEIRA CARREIRA', 'Anna SCHEPENS',\n       'Annabelle GATHY', 'Anne LIPPENS', 'Anne-Laure VERWEE',\n       'Armando APARICIO PEREZ', 'Armel KANDJEU', 'Aubin KANDJEU',\n       'Aurelie MARIVOET', 'Benjamin MOENECLAEY', 'Bram DE KEYSER',\n       'Britt JOORIS', 'Carine VERCRAYE', 'Carlos AZUCINA RECINA',\n       'Cato DE SLOOVERE', 'Charlotte DE LANGE', 'Charlotte SNEYERS',\n       'Christian BOURGUIGNON', 'Cécile BOLSAIE', 'Diana ARBELAEZ CORREA',\n       'Ella DE GRAEVE', 'Esther ZHU', 'Fatou YARA',\n       'Fernando HERNANDEZ GUARDADO', 'Giorgio LAMAGNO', 'Grace EBELLE',\n       'Guy MAWETE', 'Hubert VAN STRIEN', 'Inès DACY', 'Jawhara TAMRI',\n       'Jaya DE SCHEPPER', 'Jelle ERAERTS', 'Johan VAN GUCHT',\n       'Jules DE WITTE', 'Justine CORNET', 'Kathy REGELBRUGGE', 'Kevin BETTE',\n       'Khalil BOUMESHED', 'Kris GALOPPIN', 'Lies VERSTRAETEN', 'Linde',\n       'Lisa DE BRUYKER CHABBA', 'Luca BORGO', 'Léa VAN DEN HOUTE', 'Makane',\n       'Marine JANSSENS', 'Massimo OLIVO', 'Mathis DENIS', 'Maxime VANHAMME',\n       'Maximilien MICHIELS', 'Michel WOUTERS', 'Myriam VANDERHAEGEN',\n       'Nadine DEBROUX', 'Nicolas QUERTINMONT', 'Olivier HEES',\n       'Paul GUERRERO', 'Pauline POSOCCO', 'Renaud LECOMTE',\n       'Ricardo GUERRERO', 'Ronny BERT', 'Roos VANDEKERCKHOVE',\n       'Sanne DE LOOSE', 'Savina RAJANAH', 'Shahine BANDALI',\n       'Stefanie VERMEERSCH', 'Sylvie DE MEYER', 'Thomas MOT',\n       'Tito RODRIGUEZ AMAYA', 'Vincenzo LO GATTO', 'Wout VERSTRAEYEN',\n       'dayYear', 'dayMonth', 'dayWeek', 'dayDay', 'dayDayofweek',\n       'dayDayofyear', 'dayIs_month_end', 'dayIs_month_start',\n       'dayIs_quarter_end', 'dayIs_quarter_start', 'dayIs_year_end',\n       'dayIs_year_start', 'dayElapsed'],\n      dtype='object')\n\n\n\ndep_var = \"total_sales\"\n\n\nprocs = [Categorify, FillMissing]\n\n\n# split df1 in training and validation sets\n# import RandomSplitter from fastai\nfrom fastai.data.transforms import RandomSplitter, range_of\nsplits = RandomSplitter(valid_pct=0.2, seed=42)(range_of(df1))\n\n\ncont_vars, cat_vars = cont_cat_split(df1, dep_var=dep_var)\n\n\ncont_vars\n\n['Alessandra CHIANALE',\n 'Alix VERSTRAETEN',\n 'Ana DE OLIVEIRA CARREIRA',\n 'Anna SCHEPENS',\n 'Annabelle GATHY',\n 'Anne LIPPENS',\n 'Anne-Laure VERWEE',\n 'Armando APARICIO PEREZ',\n 'Armel KANDJEU',\n 'Aubin KANDJEU',\n 'Aurelie MARIVOET',\n 'Benjamin MOENECLAEY',\n 'Bram DE KEYSER',\n 'Britt JOORIS',\n 'Carine VERCRAYE',\n 'Carlos AZUCINA RECINA',\n 'Cato DE SLOOVERE',\n 'Charlotte DE LANGE',\n 'Charlotte SNEYERS',\n 'Christian BOURGUIGNON',\n 'Cécile BOLSAIE',\n 'Diana ARBELAEZ CORREA',\n 'Ella DE GRAEVE',\n 'Esther ZHU',\n 'Fatou YARA',\n 'Fernando HERNANDEZ GUARDADO',\n 'Giorgio LAMAGNO',\n 'Grace EBELLE',\n 'Guy MAWETE',\n 'Hubert VAN STRIEN',\n 'Inès DACY',\n 'Jaya DE SCHEPPER',\n 'Jelle ERAERTS',\n 'Johan VAN GUCHT',\n 'Jules DE WITTE',\n 'Justine CORNET',\n 'Kathy REGELBRUGGE',\n 'Kevin BETTE',\n 'Khalil BOUMESHED',\n 'Kris GALOPPIN',\n 'Lies VERSTRAETEN',\n 'Linde',\n 'Luca BORGO',\n 'Léa VAN DEN HOUTE',\n 'Makane',\n 'Marine JANSSENS',\n 'Massimo OLIVO',\n 'Mathis DENIS',\n 'Maxime VANHAMME',\n 'Maximilien MICHIELS',\n 'Michel WOUTERS',\n 'Myriam VANDERHAEGEN',\n 'Nadine DEBROUX',\n 'Nicolas QUERTINMONT',\n 'Olivier HEES',\n 'Paul GUERRERO',\n 'Pauline POSOCCO',\n 'Renaud LECOMTE',\n 'Ricardo GUERRERO',\n 'Ronny BERT',\n 'Roos VANDEKERCKHOVE',\n 'Sanne DE LOOSE',\n 'Savina RAJANAH',\n 'Shahine BANDALI',\n 'Stefanie VERMEERSCH',\n 'Sylvie DE MEYER',\n 'Thomas MOT',\n 'Tito RODRIGUEZ AMAYA',\n 'Vincenzo LO GATTO',\n 'dayDay',\n 'dayDayofyear',\n 'dayElapsed']\n\n\n\ncat_vars\n\n['shop_name',\n 'warehouseId',\n 'Jawhara TAMRI',\n 'Lisa DE BRUYKER CHABBA',\n 'Wout VERSTRAEYEN',\n 'dayYear',\n 'dayMonth',\n 'dayWeek',\n 'dayDayofweek',\n 'dayIs_month_end',\n 'dayIs_month_start',\n 'dayIs_quarter_end',\n 'dayIs_quarter_start',\n 'dayIs_year_end',\n 'dayIs_year_start']\n\n\n\nto = TabularPandas(\n    df1, \n    procs=[\n    Categorify, \n    FillMissing, \n    Normalize\n    ],\n    cat_names=cat_vars, # list of categorical column names\n    cont_names=cont_vars, # list of continuous column names\n                   y_names=dep_var,\n                   splits=splits)\n\n\nlen(to.train),len(to.valid)\n\n(480, 119)\n\n\n\nto.show(3)\n\n\n\n\n\nshop_name\nwarehouseId\nJawhara TAMRI\nLisa DE BRUYKER CHABBA\nWout VERSTRAEYEN\ndayYear\ndayMonth\ndayWeek\ndayDayofweek\ndayIs_month_end\ndayIs_month_start\ndayIs_quarter_end\ndayIs_quarter_start\ndayIs_year_end\ndayIs_year_start\nAlessandra CHIANALE\nAlix VERSTRAETEN\nAna DE OLIVEIRA CARREIRA\nAnna SCHEPENS\nAnnabelle GATHY\nAnne LIPPENS\nAnne-Laure VERWEE\nArmando APARICIO PEREZ\nArmel KANDJEU\nAubin KANDJEU\nAurelie MARIVOET\nBenjamin MOENECLAEY\nBram DE KEYSER\nBritt JOORIS\nCarine VERCRAYE\nCarlos AZUCINA RECINA\nCato DE SLOOVERE\nCharlotte DE LANGE\nCharlotte SNEYERS\nChristian BOURGUIGNON\nCécile BOLSAIE\nDiana ARBELAEZ CORREA\nElla DE GRAEVE\nEsther ZHU\nFatou YARA\nFernando HERNANDEZ GUARDADO\nGiorgio LAMAGNO\nGrace EBELLE\nGuy MAWETE\nHubert VAN STRIEN\nInès DACY\nJaya DE SCHEPPER\nJelle ERAERTS\nJohan VAN GUCHT\nJules DE WITTE\nJustine CORNET\nKathy REGELBRUGGE\nKevin BETTE\nKhalil BOUMESHED\nKris GALOPPIN\nLies VERSTRAETEN\nLinde\nLuca BORGO\nLéa VAN DEN HOUTE\nMakane\nMarine JANSSENS\nMassimo OLIVO\nMathis DENIS\nMaxime VANHAMME\nMaximilien MICHIELS\nMichel WOUTERS\nMyriam VANDERHAEGEN\nNadine DEBROUX\nNicolas QUERTINMONT\nOlivier HEES\nPaul GUERRERO\nPauline POSOCCO\nRenaud LECOMTE\nRicardo GUERRERO\nRonny BERT\nRoos VANDEKERCKHOVE\nSanne DE LOOSE\nSavina RAJANAH\nShahine BANDALI\nStefanie VERMEERSCH\nSylvie DE MEYER\nThomas MOT\nTito RODRIGUEZ AMAYA\nVincenzo LO GATTO\ndayDay\ndayDayofyear\ndayElapsed\ntotal_sales\n\n\n\n\n587\nLATEM\n39\n0\n0\n0\n2023\n3\n11\n6\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n-1.110223e-16\n-1.387779e-17\n0.0\n0.0\n0.0\n0.0\n0.0\n-5.551115e-17\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n-2.775558e-17\n0.0\n0.0\n0.0\n0.0\n0.0\n-1.110223e-16\n0.0\n0.0\n0.0\n10.000000\n0.0\n0.0\n0.0\n0.000000\n0.0\n0.0\n0.0\n-1.734723e-18\n0.0\n0.0\n0.0\n0.0\n0.000000\n0.0\n0.0\n0.0\n0.000000\n0.0\n0.0\n0.0\n0.0\n0.0\n-1.387779e-17\n0.0\n0.0\n0.0\n1.000000e+01\n1.110223e-16\n1.110223e-16\n0.0\n1.833333\n0.0\n0.0\n0.0\n0.0\n19.0\n78.0\n1.679184e+09\n7.599734\n\n\n42\nLa Hulpe\n2\n0\n0\n0\n2023\n2\n7\n0\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n-1.110223e-16\n-1.387779e-17\n0.0\n0.0\n0.0\n0.0\n0.0\n-5.551115e-17\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n-2.775558e-17\n0.0\n0.0\n0.0\n0.0\n0.0\n-1.110223e-16\n0.0\n0.0\n0.0\n0.000000\n0.0\n0.0\n0.0\n11.183333\n0.0\n0.0\n0.0\n-1.734723e-18\n0.0\n0.0\n0.0\n0.0\n10.766666\n0.0\n0.0\n0.0\n0.000000\n0.0\n0.0\n0.0\n0.0\n0.0\n-1.387779e-17\n0.0\n0.0\n0.0\n5.551115e-17\n1.110223e-16\n1.110223e-16\n0.0\n0.000000\n0.0\n0.0\n0.0\n0.0\n13.0\n44.0\n1.676246e+09\n7.676594\n\n\n527\nLATEM\n39\n0\n0\n0\n2023\n1\n3\n2\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n-1.110223e-16\n-1.387779e-17\n0.0\n0.0\n0.0\n0.0\n0.0\n-5.551115e-17\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n-2.775558e-17\n0.0\n0.0\n0.0\n0.0\n0.0\n-1.110223e-16\n0.0\n0.0\n0.0\n7.016667\n0.0\n0.0\n0.0\n0.000000\n0.0\n0.0\n0.0\n-1.734723e-18\n0.0\n0.0\n0.0\n0.0\n0.000000\n0.0\n0.0\n0.0\n4.216667\n0.0\n0.0\n0.0\n0.0\n0.0\n-1.387779e-17\n0.0\n0.0\n0.0\n5.283333e+00\n1.110223e-16\n1.110223e-16\n0.0\n2.583333\n0.0\n0.0\n0.0\n0.0\n18.0\n18.0\n1.674000e+09\n7.540080\n\n\n\n\n\n\nxs,y = to.train.xs,to.train.y\nvalid_xs,valid_y = to.valid.xs,to.valid.y\n\n\nm = DecisionTreeRegressor(\n    max_depth=3,\n)\nm.fit(xs, y);\n\n\ndraw_tree(m, xs, size=10, leaves_parallel=True, precision=2)\n\n\n\n\n\ndef rf(xs, y, n_estimators=40, max_samples=200,\n       max_features=0.5, min_samples_leaf=5, **kwargs):\n    return RandomForestRegressor(n_jobs=-1, n_estimators=n_estimators,\n        max_samples=max_samples, max_features=max_features,\n        min_samples_leaf=min_samples_leaf, oob_score=True).fit(xs, y)\n\n\nm = rf(xs, y);\n\n\ndef r_mse(pred,y): return round(math.sqrt(((pred-y)**2).mean()), 6)\ndef m_rmse(m, xs, y): return r_mse(m.predict(xs), y)\n\n\nm_rmse(m, xs, y), m_rmse(m, valid_xs, valid_y)\n\n(0.212125, 0.231593)\n\n\n\nr_mse(m.oob_prediction_, y)\n\n0.242413\n\n\n\ndef rf_feat_importance(m, df):\n    return pd.DataFrame({'cols':df.columns, 'imp':m.feature_importances_}\n                       ).sort_values('imp', ascending=False)\n\n\nfi = rf_feat_importance(m, xs)\nprint(fi[:10])\n\n                      cols       imp\n0                shop_name  0.413651\n8             dayDayofweek  0.230015\n1              warehouseId  0.075169\n67          Nadine DEBROUX  0.032762\n85            dayDayofyear  0.022988\n86              dayElapsed  0.020891\n36   Diana ARBELAEZ CORREA  0.020645\n22  Armando APARICIO PEREZ  0.016432\n84                  dayDay  0.015929\n60         Marine JANSSENS  0.013443\n\n\n\nprint(fi[10:20])\n\n                           cols       imp\n64          Maximilien MICHIELS  0.012733\n7                       dayWeek  0.012162\n52                  Kevin BETTE  0.010867\n40  Fernando HERNANDEZ GUARDADO  0.009706\n69                 Olivier HEES  0.008153\n61                Massimo OLIVO  0.007788\n24                Aubin KANDJEU  0.006343\n6                      dayMonth  0.005674\n83            Vincenzo LO GATTO  0.005564\n33            Charlotte SNEYERS  0.005515\n\n\n\ndef plot_fi(fi):\n    return fi.plot('cols', 'imp', 'barh', figsize=(12,7), legend=False)\n\nplot_fi(fi[:30]);"
  },
  {
    "objectID": "Average foodcost per revenue for shops and RE.html",
    "href": "Average foodcost per revenue for shops and RE.html",
    "title": "foodcosts",
    "section": "",
    "text": "import sys\nsys.path.append('..')\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport foodcosts.core as core\nimport datetime\n\n\n\nstart_date = '2022-01-01'\nend_date = '2023-02-19'\n\n\ndef to_series(values):\n    return pd.Series([row[1] for row in values], index = pd.DatetimeIndex([row[0] for row in values]))\n\n\ndef get_sales_from_so_period_for_shop(start_date, end_date, shop = ''):\n    query = \"\"\"\n    SELECT\n       v_shop.name AS shop_name, \n       DATE(v_pos_order.created_at) AS day, \n       SUM(pol.price_unit * v_pos_order_line.quantity) AS total_sales\n    FROM v_pos_order_line\n    LEFT JOIN pos_order_line as pol on pol.id = v_pos_order_line.id\n    LEFT JOIN v_product ON v_product.id = v_pos_order_line.product_id\n    LEFT JOIN v_pos_order ON v_pos_order.id = v_pos_order_line.order_id\n    LEFT JOIN v_pos_session ON v_pos_session.id = v_pos_order.session_id\n    LEFT JOIN v_pos ON v_pos.id = v_pos_session.pos_id\n    LEFT JOIN v_shop ON v_shop.id = v_pos.shop_id\n    WHERE v_pos_order.created_at BETWEEN '{}' AND '{}'\n    \"\"\".format(start_date, end_date)\n    \n    if shop != '':\n        query += f\"\"\"AND v_shop.name = '{shop}'\"\"\"\n    \n    query += \"GROUP BY v_shop.id, v_shop.name, day\"\n    \n    return sorted(\n        [[row[1], row[2]] for row in core.make_sql_query(query)],\n        key=lambda x: x[0]\n    )\n\ndef get_sales_from_so_period_for_re(start_date, end_date, re_restaurant = ''):\n    query = \"\"\"\n    SELECT\n       v_resto_entreprise.name AS re_name, \n       DATE(v_pos_order.created_at) AS day, \n       SUM(pol.price_unit * v_pos_order_line.quantity) AS total_sales\n    FROM v_pos_order_line\n    LEFT JOIN pos_order_line as pol on pol.id = v_pos_order_line.id\n    LEFT JOIN v_product ON v_product.id = v_pos_order_line.product_id\n    LEFT JOIN v_pos_order ON v_pos_order.id = v_pos_order_line.order_id\n    LEFT JOIN v_pos_session ON v_pos_session.id = v_pos_order.session_id\n    LEFT JOIN v_pos ON v_pos.id = v_pos_session.pos_id\n    LEFT JOIN v_resto_entreprise ON v_resto_entreprise.id = v_pos.shop_id\n    WHERE v_pos_order.created_at BETWEEN '{}' AND '{}'\n    \"\"\".format(start_date, end_date)\n    \n    if re_restaurant != '':\n        query += f\"\"\"AND v_resto_entreprise.name = '{re_restaurant}'\"\"\"\n    \n    query += \"GROUP BY v_resto_entreprise.id, v_resto_entreprise.name, day\"\n    \n    return sorted(\n        [[row[1], row[2]] for row in core.make_sql_query(query)],\n        key=lambda x: x[0]\n    )\n\n\ndef get_supplier_food_costs_period_for_shop(start_date, end_date, shop = ''):\n    query = \"\"\"\n  SELECT\n    to_char(v_purchase_order.order_date, 'YYYY-MM-DD'),\n    sum(total_incl_vat) from v_purchase_order\n  LEFT JOIN v_supplier on v_supplier.id = v_purchase_order.supplier_id\n  LEFT JOIN v_shop on v_shop.id = v_purchase_order.shop_id\n  WHERE \n      v_purchase_order.order_date between '{}' and '{}' \n    \"\"\".format(start_date, end_date)\n    \n    if shop != '':\n        query += \"AND v_shop.name = ('{}')\".format(shop)\n    \n    query += \"GROUP BY v_shop.name, to_char(v_purchase_order.order_date, 'YYYY-MM-DD')\"                                                \n                          \n    return sorted(\n        [[datetime.datetime.strptime(row[0], '%Y-%m-%d'), row[1]] for row in core.make_sql_query(query)],\n        key=lambda x: x[0]\n    )\n\ndef get_supplier_food_costs_period_for_re(start_date, end_date, re_restaurant = ''):\n    query = \"\"\"\n  SELECT\n    to_char(v_purchase_order.order_date, 'YYYY-MM-DD'),\n    sum(total_incl_vat) from v_purchase_order\n  LEFT JOIN v_supplier on v_supplier.id = v_purchase_order.supplier_id\n  LEFT JOIN v_resto_entreprise on v_resto_entreprise.id = v_purchase_order.shop_id\n  WHERE \n      v_purchase_order.order_date between '{}' and '{}' \n    \"\"\".format(start_date, end_date)\n    \n    if re_restaurant != '':\n        query += \"AND v_resto_entreprise.name = ('{}')\".format(re_restaurant)\n    \n    query += \"GROUP BY v_resto_entreprise.name, to_char(v_purchase_order.order_date, 'YYYY-MM-DD')\"                                                \n                          \n    return sorted(\n        [[datetime.datetime.strptime(row[0], '%Y-%m-%d'), row[1]] for row in core.make_sql_query(query)],\n        key=lambda x: x[0]\n    )\n\n\ndef get_atelier_food_costs_period_for_shop(start_date, end_date, shop = ''):\n    query = \"\"\"\nselect \n    shop.id as shop_id,\n    shop.name as shop_name,\n    stats.day as date,\n    sum(stats.discounted_atelier_value_sent_htva) as discounted_atelier_value_sent_htva\nfrom v_shop_sales_statistics as stats \nleft join v_shop as shop on shop.id = stats.shop_id\nleft join pos_order_stat_day on pos_order_stat_day.day = stats.day and (pos_order_stat_day.interval &lt;&gt; 'month')\nwhere stats.day between '{}' and '{}' and discounted_atelier_value_sent_htva &lt; 10000\n    \"\"\".format(start_date, end_date)\n    \n    \n    if shop != '':\n        query += f\"\"\"AND shop.name = '{shop}'\"\"\"\n    \n    query += \"group by shop.id, shop.name, stats.day\"                                                \n                              \n    return sorted(\n        [[row[2], row[3]] for row in core.make_sql_query(query)],\n        key=lambda x: x[0]\n    )\n\ndef get_atelier_food_costs_period_for_re(start_date, end_date, re_restaurant = ''):\n    query = \"\"\"\nselect \n    re_restaurant.id as re_restaurant_id,\n    re_restaurant.name as re_restaurant_name,\n    stats.day as date,\n    sum(stats.discounted_atelier_value_sent_htva) as discounted_atelier_value_sent_htva\nfrom v_shop_sales_statistics as stats \nleft join v_resto_entreprise as re_restaurant on re_restaurant.id = stats.shop_id\nleft join pos_order_stat_day on pos_order_stat_day.day = stats.day and (pos_order_stat_day.interval &lt;&gt; 'month')\nwhere stats.day between '{}' and '{}' and discounted_atelier_value_sent_htva &lt; 10000\n    \"\"\".format(start_date, end_date)\n    \n    \n    if re_restaurant != '':\n        query += f\"\"\"AND re_restaurant.name = '{re_restaurant}'\"\"\"\n    \n    query += \"group by re_restaurant.id, re_restaurant.name, stats.day\"                                                \n                              \n    return sorted(\n        [[row[2], row[3]] for row in core.make_sql_query(query)],\n        key=lambda x: x[0]\n    )\n\n\ndef get_date_range(start_date, end_date):\n    # convert the input strings to datetime objects\n    start_dt = datetime.datetime.strptime(start_date, '%Y-%m-%d')\n    end_dt = datetime.datetime.strptime(end_date, '%Y-%m-%d')\n\n    # calculate the number of days between start and end, inclusive\n    num_days = (end_dt - start_dt).days + 1\n\n    # use a list comprehension to generate a list of date objects\n    dates = [start_dt.date() + datetime.timedelta(days=i) for i in range(num_days)]\n\n    return dates\n\n\ndef get_food_costs_period(start_date, end_date, shop = '', re_restaurant=''):\n    if shop != '':\n        atelier = get_atelier_food_costs_period_for_shop(start_date, end_date, shop=shop)\n    if re_restaurant != '':\n        atelier = get_atelier_food_costs_period_for_re(start_date,end_date, re_restaurant=re_restaurant)\n    \n    atelier_dict = { date: amount for date,amount in atelier }\n    \n    if shop != '':\n        supplier = get_supplier_food_costs_period_for_shop(start_date, end_date, shop=shop)\n    if re_restaurant != '':\n        supplier = get_supplier_food_costs_period_for_re(start_date, end_date, re_restaurant=re_restaurant)\n    \n    supplier_dict = { date.date(): amount for date,amount in supplier }\n    date_range = get_date_range(start_date,end_date)\n    res = []\n    atelier_totals = []\n    supplier_totals = []\n    for date in date_range:\n        \n        atelier_for_date = atelier_dict[date] if date in atelier_dict else 0\n        supplier_for_date = supplier_dict[date] if date in supplier_dict else 0\n        \n        atelier_totals.append([date, atelier_for_date])\n        supplier_totals.append([date, supplier_for_date])        \n        \n        res.append([date, \n                    (atelier_for_date if atelier_for_date != None else 0) + \n                    (supplier_for_date if not supplier_for_date != None else 0)\n                   ])\n    return res\n\n\ndef divide(values_a, values_b):        \n    values_b=values_b.replace(0, 1)\n    res = values_a.divide(values_b, fill_value=1)\n    res = res.astype(float)\n    return res\n\ndef pct_costs_on_revenues(start_date, end_date, shop = '', re_restaurant='', frequency = 'M'):    \n    food_costs_daily = get_food_costs_period(start_date, end_date, shop = shop, re_restaurant = re_restaurant)\n    \n    if shop != '':\n        sales_from_so_daily = get_sales_from_so_period_for_shop(start_date, end_date, shop = shop)\n    if re_restaurant != '':    \n        sales_from_so_daily = get_sales_from_so_period_for_re(start_date, end_date, re_restaurant = re_restaurant)\n        \n    num = to_series(food_costs_daily).resample(frequency).sum()\n    denum = to_series(sales_from_so_daily).resample(frequency).sum()\n    denum = denum.drop(labels=denum[denum == 0].index)\n    \n    return divide(\n        num,\n        denum,       \n    )\n\n\ndef get_dict_of_pct_food_costs_on_revenues(shops=[], re_restaurants=[]):\n    series_dict = {}\n    \n    for shop in shops:\n        series = pct_costs_on_revenues(start_date, end_date, shop=shop, frequency='M')\n        series_dict[shop] = series\n    \n    for re_restaurant in re_restaurants:\n        series = pct_costs_on_revenues(start_date, end_date, re_restaurant=re_restaurant, frequency='M')\n        series_dict[re_restaurant] = series\n    \n    return series_dict;\n\n\ndef plot_pct_food_costs_on_revenues(name, series, avg_of_series):\n    series.plot(label=name, color='blue')\n    avg_of_series.plot(label= \"Average\", color='orange')\n    \n    plt.xlabel('Date')\n    plt.ylabel('%')\n    plt.legend(loc='best')\n    plt.show()\n\n\nshops = core.get_shop_names()\nunwanted_shops = {'Tongres'}\nshops = [shop for shop in shops if shop not in unwanted_shops]\n\npct_food_costs_on_revenues_for_shops_dict = get_dict_of_pct_food_costs_on_revenues(shops=shops)\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\navg_pct_food_costs_on_revenues_of_shop = sum([pct_food_costs_on_revenues_for_shops_dict[shop] for shop in shops])/len(shops)\n\nfor shop in shops:\n    plot_pct_food_costs_on_revenues(shop, pct_food_costs_on_revenues_for_shops_dict[shop], avg_pct_food_costs_on_revenues_of_shop)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nre_restaurants = [name for (i, name) in core.make_sql_query(\"select * from v_resto_entreprise\")]\nunwanted_re_restaurants = {'BOTANIC TOWER', 'R.E EUROCONTROL', 'R.E LIGHTHOUSE'}\nre_restaurants = [re_restaurant for re_restaurant in re_restaurants if re_restaurant not in unwanted_re_restaurants]\n\npct_food_costs_on_revenues_for_re_dict = get_dict_of_pct_food_costs_on_revenues(re_restaurants=re_restaurants)\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\navg_pct_food_costs_on_revenues_of_re = sum([pct_food_costs_on_revenues_for_re_dict[re_restaurant] for re_restaurant in re_restaurants])/len(re_restaurants)\n\nfor re_restaurant in re_restaurants:\n    plot_pct_food_costs_on_revenues(re_restaurant, pct_food_costs_on_revenues_for_re_dict[re_restaurant], avg_pct_food_costs_on_revenues_of_re)"
  },
  {
    "objectID": "Ventes RE hotbars & other.html",
    "href": "Ventes RE hotbars & other.html",
    "title": "foodcosts",
    "section": "",
    "text": "import foodcosts.core as core\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport math\nimport smtplib\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\n\n\ndef make_hotbar_sales():\n    pd = core.get_query_res_as_pd(\"select * from v_resto_entreprise;\")\n    print(pd)\n    return pd\n\n\nmake_hotbar_sales()\n\nconfig.ini file available... using that\n    id                  name\n0   14    R.E. ALLEN & OVERY\n1   15   R.E. LHOIST CORBAIS\n2   21         R.E. ZAVENTEM\n3   22            R.E. CEFIC\n4   24             R.E ALOST\n5   34   R.E LHOIST NIVELLES\n6   35  R.E LHOIST LIMELETTE\n7   37         BOTANIC TOWER\n8   38             R.E ENGIE\n9   42          R.E THE HIVE\n10  43       R.E EUROCONTROL\n11  45        R.E LIGHTHOUSE\n12  65         Immogra Park7\n13  68         R.E. JanDeNul\n14  69                ARAMIS\n15  70        R.E. GLAVERBEL\n16  71               R.E WPP\n\n\n\n\n\n\n\n\n\nid\nname\n\n\n\n\n0\n14\nR.E. ALLEN & OVERY\n\n\n1\n15\nR.E. LHOIST CORBAIS\n\n\n2\n21\nR.E. ZAVENTEM\n\n\n3\n22\nR.E. CEFIC\n\n\n4\n24\nR.E ALOST\n\n\n5\n34\nR.E LHOIST NIVELLES\n\n\n6\n35\nR.E LHOIST LIMELETTE\n\n\n7\n37\nBOTANIC TOWER\n\n\n8\n38\nR.E ENGIE\n\n\n9\n42\nR.E THE HIVE\n\n\n10\n43\nR.E EUROCONTROL\n\n\n11\n45\nR.E LIGHTHOUSE\n\n\n12\n65\nImmogra Park7\n\n\n13\n68\nR.E. JanDeNul\n\n\n14\n69\nARAMIS\n\n\n15\n70\nR.E. GLAVERBEL\n\n\n16\n71\nR.E WPP\n\n\n\n\n\n\n\n\nsales_re = core.get_products_sold_for_a_re_as_pd(core.get_previous_n_day(10),core.get_today_date_string(), 'R.E. GLAVERBEL')\n\nconfig.ini file available... using that\n\n\n\nsales_re.sort_values('units_sold', ascending=False)\n\n\n\n\n\n\n\n\nshop_name\nday\nproduct_name\nunits_sold\ntotal_sales\n\n\n\n\n0\nR.E. GLAVERBEL\n2023-03-20\nPLAT DU JOUR 10.9\n84.000\n915.60000\n\n\n103\nR.E. GLAVERBEL\n2023-03-22\nSANDWICH BASE\n80.000\n286.40000\n\n\n112\nR.E. GLAVERBEL\n2023-03-22\nPOTAGE DU JOUR PETIT\n79.000\n237.00000\n\n\n156\nR.E. GLAVERBEL\n2023-03-23\nPOTAGE DU JOUR PETIT\n78.000\n234.00000\n\n\n21\nR.E. GLAVERBEL\n2023-03-20\nPOTAGE DU JOUR PETIT\n78.000\n234.00000\n\n\n...\n...\n...\n...\n...\n...\n\n\n204\nR.E. GLAVERBEL\n2023-03-24\nMENDIANTS HOMEMADE (Chocolat noir)\n0.080\n2.87600\n\n\n73\nR.E. GLAVERBEL\n2023-03-21\nMENDIANTS HOMEMADE (Chocolat blanc)\n0.078\n2.80410\n\n\n119\nR.E. GLAVERBEL\n2023-03-22\nMENDIANTS HOMEMADE (Chocolat noir)\n0.070\n2.51650\n\n\n246\nR.E. GLAVERBEL\n2023-03-27\nMENDIANTS HOMEMADE (Chocolat au lait)\n0.059\n2.12105\n\n\n247\nR.E. GLAVERBEL\n2023-03-27\nMENDIANTS HOMEMADE (Chocolat noir)\n0.044\n1.58180\n\n\n\n\n263 rows × 5 columns\n\n\n\n\ndef get_products_order_for_a_re_as_pd(start_date, end_date, shop_name):\n    # Construct the SQL query\n    query = f\"\"\"\n        SELECT v_resto_entreprise.name AS shop_name, \n               DATE(v_pos_order.created_at) AS day, \n               v_product.name AS product_name, \n                v_pos_order_line.product_id as product_id,\n                count(v_pos_order_line.product_id) as total_order,\n               SUM(v_pos_order_line.quantity) AS units_sold, \n               SUM(v_pos_order_line.quantity * v_product.price) AS total_sales\n        FROM v_pos_order_line\n        LEFT JOIN v_product ON v_product.id = v_pos_order_line.product_id\n        LEFT JOIN v_pos_order ON v_pos_order.id = v_pos_order_line.order_id\n        LEFT JOIN v_pos_session ON v_pos_session.id = v_pos_order.session_id\n        LEFT JOIN v_pos ON v_pos.id = v_pos_session.pos_id\n        LEFT JOIN v_resto_entreprise ON v_resto_entreprise.id = v_pos.shop_id\n        WHERE v_pos_order.created_at BETWEEN '{start_date}' AND '{end_date}'\n        AND v_resto_entreprise.name IN ('{shop_name}')\n        AND (v_product.name LIKE '%PLAT DU JOUR%' OR\n            v_product.name LIKE '%HOT BAR FTK%')\n        GROUP BY v_resto_entreprise.id, v_resto_entreprise.name, day, v_product.id, v_product.name, v_pos_order_line.product_id\n        ORDER BY v_resto_entreprise.name, day ASC;\n    \"\"\"\n    return core.get_query_res_as_pd(query)\n\n\nre_restaurants = core.get_query_res_as_pd(\"select * from v_resto_entreprise;\")\n\nre_restaurants_sales_details = {\n    re_restaurant_name: get_products_order_for_a_re_as_pd(\n        core.get_previous_n_day(60),\n        core.get_today_date_string(),\n        re_restaurant_name\n    )\n    for re_restaurant_name in re_restaurants['name']\n}\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\ndef get_total_order(sales_details, product_name):\n    unit_sold = sales_details[sales_details['product_name'].str.contains(product_name, regex=False)]['total_order']\n    return unit_sold.values.sum();\n\ndef get_percetage(x, y):\n    try:       \n        x_percentage = round((x*100/(x+y)),2);\n        y_percentage = round((y*100/(x+y)),2);\n        \n        return x_percentage, y_percentage;\n    except ZeroDivisionError:\n        return float('NaN'), float('NaN');\n\ndef getAxisPosition(sales):\n    index = sales.index.values[0]\n    x = index // 3;\n    y = index % 3;\n    return x, y;\n\n\norder_dict = {\n        'Name':[],\n        'PLAT DU JOUR':[],\n        'HOT BAR':[],\n       }\norder_percentage_dict = {\n        'Name':[],\n        'PLAT DU JOUR(%)':[],\n        'HOT BAR(%)':[],\n       }\n\norder_dataframe = pd.DataFrame(order_dict)\norder_percentage_dataframe = pd.DataFrame(order_percentage_dict)\n\norder_dataframe.style.set_caption(\"Hello World\")\n\norder_dataframe['PLAT DU JOUR'] = order_dataframe['PLAT DU JOUR'].astype('int')\norder_dataframe['HOT BAR'] = order_dataframe['HOT BAR'].astype('int')\n\nfor re_restaurant_name in re_restaurants['name']:\n    sales_details = re_restaurants_sales_details[re_restaurant_name];\n        \n    plat_du_jour_total_order = get_total_order(sales_details, 'PLAT DU JOUR');\n    hot_bar_total_order = get_total_order(sales_details, 'HOT BAR');\n    \n    plat_du_jour_percentage, hot_bar_percentage = get_percetage(plat_du_jour_total_order, hot_bar_total_order);\n    \n    order_dataframe.loc[len(order_dataframe.index)] = [\n        re_restaurant_name,\n        plat_du_jour_total_order,\n        hot_bar_total_order,\n    ]\n    \n    order_percentage_dataframe.loc[len(order_percentage_dataframe.index)] = [\n        re_restaurant_name,\n        plat_du_jour_percentage,\n        hot_bar_percentage,\n    ]\n\ndisplay(order_dataframe)\ndisplay(order_percentage_dataframe)\n\n\n\n\n\n\n\n\nName\nPLAT DU JOUR\nHOT BAR\n\n\n\n\n0\nR.E. ALLEN & OVERY\n740\n0\n\n\n1\nR.E. LHOIST CORBAIS\n1246\n0\n\n\n2\nR.E. ZAVENTEM\n2677\n2154\n\n\n3\nR.E. CEFIC\n937\n0\n\n\n4\nR.E ALOST\n453\n0\n\n\n5\nR.E LHOIST NIVELLES\n512\n0\n\n\n6\nR.E LHOIST LIMELETTE\n915\n0\n\n\n7\nBOTANIC TOWER\n1349\n0\n\n\n8\nR.E ENGIE\n5640\n2788\n\n\n9\nR.E THE HIVE\n1268\n1477\n\n\n10\nR.E EUROCONTROL\n76\n2802\n\n\n11\nR.E LIGHTHOUSE\n0\n955\n\n\n12\nImmogra Park7\n1\n104\n\n\n13\nR.E. JanDeNul\n0\n43\n\n\n14\nARAMIS\n0\n1430\n\n\n15\nR.E. GLAVERBEL\n2385\n2685\n\n\n16\nR.E WPP\n124\n128\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nPLAT DU JOUR(%)\nHOT BAR(%)\n\n\n\n\n0\nR.E. ALLEN & OVERY\n100.00\n0.00\n\n\n1\nR.E. LHOIST CORBAIS\n100.00\n0.00\n\n\n2\nR.E. ZAVENTEM\n55.41\n44.59\n\n\n3\nR.E. CEFIC\n100.00\n0.00\n\n\n4\nR.E ALOST\n100.00\n0.00\n\n\n5\nR.E LHOIST NIVELLES\n100.00\n0.00\n\n\n6\nR.E LHOIST LIMELETTE\n100.00\n0.00\n\n\n7\nBOTANIC TOWER\n100.00\n0.00\n\n\n8\nR.E ENGIE\n66.92\n33.08\n\n\n9\nR.E THE HIVE\n46.19\n53.81\n\n\n10\nR.E EUROCONTROL\n2.64\n97.36\n\n\n11\nR.E LIGHTHOUSE\n0.00\n100.00\n\n\n12\nImmogra Park7\n0.95\n99.05\n\n\n13\nR.E. JanDeNul\n0.00\n100.00\n\n\n14\nARAMIS\n0.00\n100.00\n\n\n15\nR.E. GLAVERBEL\n47.04\n52.96\n\n\n16\nR.E WPP\n49.21\n50.79\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(nrows=6, ncols=3, figsize=(10, 10))\nfig.tight_layout(rect=[0, 0.03, 1, 0.95])\n    \nfor re_restaurant_name in re_restaurants['name']:\n    sales = order_dataframe[order_dataframe['Name'] == re_restaurant_name];\n    \n    x, y = getAxisPosition(sales);\n    ax[x, y].bar(\n        ['PLAT DU JOUR', 'HOT BAR'],\n        [sales['PLAT DU JOUR'].item(), sales['HOT BAR'].item()], label='units'\n    )\n\n    ax[x, y].legend()\n    ax[x, y].set_title(f'{re_restaurant_name}')\n\nax.flat[-1].set_visible(False)\nfig.suptitle('Total Order')\n\nplt.show()\n\n\n\n\n\nfig, ax = plt.subplots(nrows=6, ncols=3, figsize=(16, 16))\nfig.tight_layout(rect=[0, 0.03, 1, 0.95])\n    \nfor re_restaurant_name in re_restaurants['name']:\n    sales = order_percentage_dataframe[order_percentage_dataframe['Name'] == re_restaurant_name];\n    \n    x, y = getAxisPosition(sales);\n    \n    plat_du_jour_sales_percentage = sales['PLAT DU JOUR(%)'].item()\n    hot_bar_sales_percentage = sales['HOT BAR(%)'].item()\n    \n    if(math.isnan(plat_du_jour_sales_percentage) or math.isnan(hot_bar_sales_percentage)):\n        print(f'Data is invalid to genarate pie chart for resturent: {re_restaurant_name}');\n        ax[x, y].set_title(f'{re_restaurant_name}');\n        continue;\n    \n    ax[x, y].pie(\n        [plat_du_jour_sales_percentage, hot_bar_sales_percentage],\n    )\n\n    ax[x, y].legend(labels = ['PLAT DU JOUR', 'HOT BAR'])\n    ax[x, y].set_title(f'{re_restaurant_name}')\n\nax.flat[-1].set_visible(False)\nfig.suptitle('Percentage of Unit Sold')\nplt.show()\n\n\n\n\n\n#8 Create a clearer view on eurocontrol sales\n\ndef get_products_sales_for_a_re_as_pd(start_date, end_date, shop_name):\n    query = f\"\"\"\n        SELECT  \n               v_product.name AS product_name, \n               SUM(v_pos_order_line.quantity * v_product.price) AS total_sales\n        FROM v_pos_order_line\n        LEFT JOIN v_product ON v_product.id = v_pos_order_line.product_id\n        LEFT JOIN v_pos_order ON v_pos_order.id = v_pos_order_line.order_id\n        LEFT JOIN v_pos_session ON v_pos_session.id = v_pos_order.session_id\n        LEFT JOIN v_pos ON v_pos.id = v_pos_session.pos_id\n        LEFT JOIN v_resto_entreprise ON v_resto_entreprise.id = v_pos.shop_id\n        WHERE v_pos_order.created_at BETWEEN '2023-01-24' AND '2023-03-25'\n        AND v_resto_entreprise.name IN ('R.E EUROCONTROL')\n        GROUP BY v_product.id, v_product.name\n        ORDER BY total_sales DESC;\n    \"\"\"\n    return core.get_query_res_as_pd(query)\n\nproducts_sales = get_products_sales_for_a_re_as_pd(\n        core.get_previous_n_day(60),\n        core.get_today_date_string(),\n        \"R.E EUROCONTROL\"\n    );\n\nconfig.ini file available... using that\n\n\n\ntotal_sales = products_sales['total_sales'].sum()\n\nproducts_sales['total_sales'] = round(products_sales['total_sales'], 2)\nproducts_sales['sales_percentage'] = round(products_sales['total_sales'] * 100 / total_sales, 2);\n\npd.set_option('display.max_rows', None)\ndisplay(products_sales)\n\n\n\n\n\n\n\n\nproduct_name\ntotal_sales\nsales_percentage\n\n\n\n\n0\nHOT MEAL OF THE DAY\n34293.42\n24.57\n\n\n1\nCHEF'S CHOICE\n31127.62\n22.30\n\n\n2\nSALADE BAR FTK\n27958.87\n20.03\n\n\n3\nHOT BAR FTK\n26329.98\n18.87\n\n\n4\nPOTAGE DU JOUR PETIT\n7281.00\n5.22\n\n\n5\nQUARTIER DE TARTE\n1265.85\n0.91\n\n\n6\nPLAT DU JOUR VEGE RE\n1100.00\n0.79\n\n\n7\nTRANCHE DE PAIN\n1063.00\n0.76\n\n\n8\nCOCA ZERO 50CL PET\n915.00\n0.66\n\n\n9\nSALADE DE FRUITS DE SAISON\n812.20\n0.58\n\n\n10\nPAVLOVA ON THE GO\n776.00\n0.56\n\n\n11\nBRU PETILLANTE PLASTIQUE 50 CL\n720.00\n0.52\n\n\n12\nSPA REINE BLEU PET 50CL\n634.40\n0.45\n\n\n13\nCOCA COLA REGULAR 50CL\n541.50\n0.39\n\n\n14\nMOUSSE CHOCOLAT 110G\n508.40\n0.36\n\n\n15\nCOOKIE 1PCE\n399.30\n0.29\n\n\n16\nTIRAMISU CLASSIQUE 110G\n337.90\n0.24\n\n\n17\nTIRAMISU SPECULOOS 110G\n254.20\n0.18\n\n\n18\nNATURAL LIMONADE FTK (Citron)\n195.00\n0.14\n\n\n19\nICE TEA 50 CL\n180.20\n0.13\n\n\n20\nPAIN + BEURRE\n178.50\n0.13\n\n\n21\nJUS DE FRUITS FRAIS 250 ML (Fraise Citron)\n163.20\n0.12\n\n\n22\nFRUIT 1PCE\n156.80\n0.11\n\n\n23\nRIZ AU LAIT / FRAISES / RHUBARBE\n145.70\n0.10\n\n\n24\nGRAND SUD MERLOT ROSE 25CL\n139.26\n0.10\n\n\n25\nHOMEMADE CAKE CITRON 1 PCE\n136.50\n0.10\n\n\n26\nSPRITE 50 CL\n132.00\n0.09\n\n\n27\nFANTA ORANGE 50 CL\n126.00\n0.09\n\n\n28\nRIZ AU LAIT 150G\n125.40\n0.09\n\n\n29\nJUS DE FRUITS FRAIS 250 ML (Banane Citron)\n121.60\n0.09\n\n\n30\nNATURAL LIMONADE FTK (Pêche)\n104.00\n0.07\n\n\n31\nJUS DE FRUITS FRAIS 250 ML (Orange)\n102.40\n0.07\n\n\n32\nTARTE MOELLEUX CHOCOLAT PORTION\n101.85\n0.07\n\n\n33\nRIZ AU LAIT / FRAMBOISES 110G\n93.00\n0.07\n\n\n34\nMENDIANTS HOMEMADE (Chocolat noir)\n75.28\n0.05\n\n\n35\nGRAND SUD SAUVIGNON BLANC 25CL\n71.74\n0.05\n\n\n36\nPANNA COTTA (Coulis de fruits rouges)\n71.30\n0.05\n\n\n37\nMENDIANTS HOMEMADE (Chocolat au lait)\n68.31\n0.05\n\n\n38\nNATURAL LIMONADE FTK (Hibiscus)\n68.25\n0.05\n\n\n39\nBRUSSELS BEER PROJECT 25CL (Delta)\n49.00\n0.04\n\n\n40\nBRUSSELS BEER PROJECT 25CL (Grosse Bertha)\n49.00\n0.04\n\n\n41\nPUDDING DE CHIA / MYRTILLES (Lait de coco et g...\n45.60\n0.03\n\n\n42\nCHIPS LEGUMES 100G\n43.65\n0.03\n\n\n43\nTIRAMISU MANGUE / CITRON VERT 110G\n43.40\n0.03\n\n\n44\nHOMEMADE CAKE CAROTTE 1 PCE\n42.90\n0.03\n\n\n45\nMENDIANTS HOMEMADE (Chocolat blanc)\n27.14\n0.02\n\n\n46\nMACARONS 12PCS\n27.00\n0.02\n\n\n47\nHOMEMADE CAKE (Carotte)\n25.59\n0.02\n\n\n48\nGRAND SUD MERLOT IGP RED 25CL\n21.10\n0.02\n\n\n49\nBONBON BATON ACIDULE BOUTEILLE 340G\n20.70\n0.01\n\n\n50\nBONBON SUCRE COEUR 100G\n20.10\n0.01\n\n\n51\nGUINNESS NA 44ML\n19.75\n0.01\n\n\n52\nWASABI NUTS GRAND POT\n19.50\n0.01\n\n\n53\nMONT BLANC ON THE GO\n19.40\n0.01\n\n\n54\nSACHET DE CUBERDON\n18.00\n0.01\n\n\n55\nCACAHUETE MIEL CRANBERRY 200G\n17.40\n0.01\n\n\n56\n4 LAITS - 4 NOIRS MINIS MELOCAKES ARTISANAL\n17.00\n0.01\n\n\n57\nTARTE AU RIZ PORTION\n14.55\n0.01\n\n\n58\nBONBON CITROS BOUTEILLE 340G\n13.80\n0.01\n\n\n59\nBONBON OURS ACIDULE BOUTEILLE 370G\n13.80\n0.01\n\n\n60\nCAVA MVSA 20CL (20 cl)\n10.20\n0.01\n\n\n61\n1 - 1P FILET D’AIGLEFIN, SAUCE AUX POIVRONS DO...\n9.89\n0.01\n\n\n62\n1 - 12P FILET DE DAURADE EN CROÛTE D’ÉPICES, S...\n9.89\n0.01\n\n\n63\n1 - 2P CHOU FARCI, JEUNES CAROTTES AU CÉLERI E...\n9.89\n0.01\n\n\n64\n4 BLANCS - 4 LAITS MINIS MELOCAKES ARTISANAL\n8.50\n0.01\n\n\n65\n8 NOIRS MINIS MELOCAKES ARTISANAL\n8.50\n0.01\n\n\n66\nCRUNCHY ALMONDS 60G\n8.30\n0.01\n\n\n67\nSACHET MINI CUBERDON 200G\n8.30\n0.01\n\n\n68\nBONBON SOURIS NOIRES BOUTEILLE 430G\n6.90\n0.00\n\n\n69\nBONBON ANIS 420G\n6.90\n0.00\n\n\n70\nWASABI NUTS PETIT POT\n5.70\n0.00\n\n\n71\nHOMEMADE CAKE (Citron)\n5.21\n0.00\n\n\n72\nSALADE FRUIT SAISON\n4.98\n0.00\n\n\n73\nTARTE FROMAGE SPECULOOS PORTION\n4.85\n0.00\n\n\n74\nWASABI PEAS 90G\n2.85\n0.00\n\n\n75\nHOMEMADE CAKE RE ASSIETTE EUROCONTROL (Petit b...\n2.04\n0.00\n\n\n\n\n\n\n\n\ndef get_considered_products_sale(product_names, products_sales):\n    product_name_regex = '|'.join(product_names)\n    return products_sales[products_sales['product_name'].str.contains(product_name_regex)].copy()\n\n\nconsidered_products = ['PLAT DU JOUR', 'HOT BAR']\n\nconsidered_products_sales = get_considered_products_sale(considered_products, products_sales);\ntotal_sales_of_considered_products = considered_products_sales['total_sales'].sum()\nconsidered_products_sales['sales_percentage'] = round(considered_products_sales['total_sales'] * 100 / total_sales_of_considered_products, 2);\n\ndisplay(considered_products_sales)\n\n\n\n\n\n\n\n\nproduct_name\ntotal_sales\nsales_percentage\n\n\n\n\n3\nHOT BAR FTK\n26329.98\n95.99\n\n\n6\nPLAT DU JOUR VEGE RE\n1100.00\n4.01\n\n\n\n\n\n\n\n\ndef send_mail(to = 'niloyrashid71@gmail.com', subject = '', body = ''):\n    # Set up the email message\n    msg = MIMEMultipart()\n    msg['From'] = 'aragron.aragon@gmail.com'\n    msg['To'] = to\n    \n    # Connect to the SMTP server and send the email\n    smtp_server = 'smtp.gmail.com'\n    smtp_port = 587\n    username = 'aragron.aragon@gmail.com'\n    password = 'owdcsemibedvfhjs'\n    \n    server = smtplib.SMTP(smtp_server, smtp_port)\n    server.starttls()\n    server.login(username, password)\n    \n    # Add subject and body to the email message\n    msg['Subject'] = subject\n    msg.attach(MIMEText(body, 'html'))\n\n    server.sendmail(msg['From'], msg['To'], msg.as_string())\n    server.quit()\n\n\nproducts_sales_table_html = products_sales.to_html()\nsubject = 'Products Sales'\n\nsend_mail(subject = subject, body = products_sales_table_html)\n\n\nconsidered_products_sales_table_html = considered_products_sales.to_html()\nsubject = 'Considered Products Sales'\n\nsend_mail(subject = subject, body = considered_products_sales_table_html)"
  },
  {
    "objectID": "nbr_days_unsold_products_in_latem.html",
    "href": "nbr_days_unsold_products_in_latem.html",
    "title": "foodcosts",
    "section": "",
    "text": "core.get_shop_names()\n\n['La Hulpe',\n 'Fort Jaco',\n 'Woluwe',\n 'Tongres',\n 'Wemmel',\n 'CHATELAIN',\n 'OVERIJSE',\n 'LATEM']\n\n\n\nid_chocolate_mouse_85gr = 51176\nchocolate_mousses = [\n    19772,\n    id_chocolate_mouse_85gr\n]\n\n\ndate_range = pd.date_range(\n    datetime.datetime.strptime('2022-10-12', '%Y-%m-%d').date(),\n    datetime.datetime.strptime('2022-10-13', '%Y-%m-%d').date()\n)\n\n\ndate_range\n\nDatetimeIndex(['2022-10-12', '2022-10-13'], dtype='datetime64[ns]', freq='D')\n\n\n\ndef missing_sales(start_date, end_date, df):\n    date_range = pd.date_range(\n        datetime.datetime.strptime(start_date, '%Y-%m-%d').date() if isinstance(start_date, str) else start_date,\n        datetime.datetime.strptime(end_date, '%Y-%m-%d').date() if isinstance(end_date, str) else end_date\n    )\n    df_dates = list(set(df.index))\n    missing_dates = [d for d in date_range if d.date() not in df_dates]\n    return [str(d) for d in missing_dates]\n\n\ndef nbr_days_product_not_sold_this_month(product_id, shop_name):\n    today = datetime.date.today()\n    first_day = datetime.date(today.year, today.month, 1)\n    \n    chocolate_mouse = core.get_sales_by_day(\n        first_day.strftime('%Y-%m-%d'), \n        today.strftime('%Y-%m-%d'), \n        [shop_name], \n        product_id\n    )\n\n    chocolate_mouse_df = pd.DataFrame(\n        chocolate_mouse,\n        columns=['shop','date','product','qty_sold','rev']\n    )\n    chocolate_mouse_df.fillna(value=0, inplace=True)\n    chocolate_mouse_df.set_index('date', inplace=True)\n    \n    return missing_sales(\n        first_day,\n        today,\n        chocolate_mouse_df.loc[ chocolate_mouse_df['shop'] == shop_name]\n    )\n\nLATEM = nbr_days_product_not_sold_this_month(\n    product_id=id_chocolate_mouse_85gr,\n    shop_name='LATEM'\n)    \n\nWOLUWE = nbr_days_product_not_sold_this_month(\n    product_id=id_chocolate_mouse_85gr,\n    shop_name='Woluwe'\n)\n\nprint(len(LATEM))\nprint(len(WOLUWE))\n\n8\n8\n\n\n\ndef get_list_of_products_sold_for_given_date_and_shop(date, shop):\n    pass\n\n\ndef get_products_sold_for_a_shop(start_date, end_date, shop_name):\n    # Construct the SQL query\n    query = f\"\"\"\n        SELECT \n               v_shop.name AS shop_name, \n               DATE(v_pos_order.created_at) AS day, \n               v_product.id as product_id,\n               v_product.name AS product_name, \n               SUM(v_pos_order_line.quantity) AS units_sold, \n               SUM(v_pos_order_line.quantity * v_product.price) AS total_sales\n        FROM v_pos_order_line\n        LEFT JOIN v_product ON v_product.id = v_pos_order_line.product_id\n        LEFT JOIN v_pos_order ON v_pos_order.id = v_pos_order_line.order_id\n        LEFT JOIN v_pos_session ON v_pos_session.id = v_pos_order.session_id\n        LEFT JOIN v_pos ON v_pos.id = v_pos_session.pos_id\n        LEFT JOIN v_shop ON v_shop.id = v_pos.shop_id\n        WHERE v_pos_order.created_at BETWEEN '{start_date}' AND '{end_date}'\n          AND v_shop.name IN ('{shop_name}')\n        GROUP BY v_shop.id, v_shop.name, day, v_product.id, v_product.name\n        ORDER BY v_shop.name, day ASC;\n    \"\"\"\n    return pd.DataFrame(\n        [row for row in core.make_sql_query(query)], \n        columns = ['shop_name','day','product_id','product_name','units_sold','total_sales']\n    )\n\n\nprods_sold = get_products_sold_for_a_shop(datetime.datetime.now() - datetime.timedelta(days=1), datetime.datetime.now(), 'Woluwe')\n\n\npd.set_option('display.max_rows', None)\n\n\n# chocolate_prods = prods_sold[prods_sold['product'].str.contains(r'chocolate', case=False)]\ndisplay(\n#     prods_sold.loc(prods_sold['product_name'])\n    prods_sold[prods_sold['product_name'].str.contains(r'choc', case=False)]\n)\n\n\n\n\n\n\n\n\nshop_name\nday\nproduct_id\nproduct_name\nunits_sold\ntotal_sales\n\n\n\n\n35\nWoluwe\n2023-02-16\n19723\nTARTE MOELLEUX CHOCOLAT PORTION\n1.000\n4.55000\n\n\n89\nWoluwe\n2023-02-16\n49406\nMELOCAKES ARTISANAL AU CHOCOLAT NOIR\n1.000\n7.3500000\n\n\n97\nWoluwe\n2023-02-16\n51176\nMERVEILLEUX AU CHOCOLAT 110G\n2.000\n7.60000"
  },
  {
    "objectID": "should we open the corporate restaurants on the friday after a public holiday?.html",
    "href": "should we open the corporate restaurants on the friday after a public holiday?.html",
    "title": "Should we open the corporate restaurant the Friday after a public holiday?",
    "section": "",
    "text": "import foodcosts.core as core\nimport pandas as pd\n\n\nrestos = core.get_corporate_restaurants()\n\nconfig.ini file available... using that\n\n\n\nsales_all_restos_2022 = { resto : core.get_sales_for_period_for_corporate_restaurant_per_day('2022-05-27','2022-05-28',resto) for resto in restos }\n# for resto in restos:\n#     friday_2022_after = core.get_sales_for_period_for_corporate_restaurant_per_day('2022-05-27','2022-05-28',resto)\n\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\nfor resto in restos:\n    if len(sales_all_restos_2022[resto].index) != 0:\n        print(sales_all_restos_2022[resto])\n\n            shop_name         day  total_sales\n0  R.E. ALLEN & OVERY  2022-05-27      106.858\n             shop_name         day  total_sales\n0  R.E. LHOIST CORBAIS  2022-05-27        39.05\n             shop_name         day  total_sales\n0  R.E LHOIST NIVELLES  2022-05-27        37.26\n              shop_name         day  total_sales\n0  R.E LHOIST LIMELETTE  2022-05-27         54.8"
  },
  {
    "objectID": "pavlova_bar.html",
    "href": "pavlova_bar.html",
    "title": "foodcosts",
    "section": "",
    "text": "!pwd\n\n/Users/yannbuydens/PycharmProjects/foodcosts/nbs\n\n\n\n\nimport foodcosts.core as core\n\nModuleNotFoundError: No module named 'foodcosts'\n\n\n\ncore.get_shop_names()\n\n\ncore.make_sql_query(\"select * from v_shop;\")\ncore.make_sql_query(\"SELECT * from v\")"
  },
  {
    "objectID": "food_costs_simplified_code.html",
    "href": "food_costs_simplified_code.html",
    "title": "the parameters to set",
    "section": "",
    "text": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport foodcosts.core as core\nimport datetime\ncore.get_shop_names()\n\n['La Hulpe',\n 'Fort Jaco',\n 'Woluwe',\n 'Tongres',\n 'Wemmel',\n 'CHATELAIN',\n 'OVERIJSE',\n 'LATEM']\nshops = [\n    shop for shop in core.get_shop_names() \n#     if not shop == 'Tongres'\n]\nshops\n\n['La Hulpe',\n 'Fort Jaco',\n 'Woluwe',\n 'Tongres',\n 'Wemmel',\n 'CHATELAIN',\n 'OVERIJSE',\n 'LATEM']\nstart_date = '01-01-2022'\nend_date = '02-20-2023'\nshop = 'LATEM'\ngranularity_options = {\n    'W' : 'W-MON',\n    'D' : 'D',\n    'M' : 'M'\n}\ngranularity = granularity_options['M']\ntransformation = 'TOTAL' # 'PERCENT_OF_REVENUE'\ncompare_with = 'OVERIJSE' # Or 'ALL'\nsupplier = 'ALL'\nproducts = 'ALL'"
  },
  {
    "objectID": "food_costs_simplified_code.html#get_revenues_df",
    "href": "food_costs_simplified_code.html#get_revenues_df",
    "title": "the parameters to set",
    "section": "get_revenues_df",
    "text": "get_revenues_df\n\ndef get_revenues_df(start_date, end_date):\n    query = \"\"\"\n\n  SELECT \n    v_shop.name, \n    day::timestamp,\n    total as total_sales\n  FROM \n    v_shop_sales_statistics\n  LEFT JOIN \n    v_shop on v_shop.id = v_shop_sales_statistics.shop_id\n  WHERE \n    day between '{}' and '{}';\n    \"\"\".format(start_date, end_date)\n    res = core.make_sql_query(query)\n    return pd.DataFrame(res, columns = ['shop','date_and_time','total_sales'])\n\n\nrevenues_df = get_revenues_df(start_date, end_date)\n\n\ntotals_revenues_df = revenues_df[\n    revenues_df[\"shop\"].isin(shops)\n].groupby([pd.Grouper(key='date_and_time', freq=granularity)])[\"total_sales\"].sum().reset_index()\n\n\ntotal_percent_df = pd.merge(total_foodcost_df, totals_revenues_df, on=['date_and_time'])\ntotal_percent_df['foodcost / revenue'] = (total_percent_df['total_excl_vat'] / total_percent_df['total_sales'])*100\ntotal_percent_df.index = total_percent_df[\"date_and_time\"]\n\n\ntotal_percent_df\n\n\n\n\n\n\n\n\ndate_and_time\ntotal_excl_vat\ntotal_sales\nfoodcost / revenue\n\n\ndate_and_time\n\n\n\n\n\n\n\n\n2022-01-31\n2022-01-31\n496705.6400000000000015\n1477263.19\n33.62336808784899053779983511\n\n\n2022-02-28\n2022-02-28\n444370.78\n1433786.03\n30.99282394319325318018337785\n\n\n2022-03-31\n2022-03-31\n427877.75\n1433837.49\n29.84143970178935689566883901\n\n\n2022-04-30\n2022-04-30\n430543.75\n1421784.41\n30.28192931163171215247746316\n\n\n2022-05-31\n2022-05-31\n450926.42\n1493148.54\n30.19970270338944308916512754\n\n\n2022-06-30\n2022-06-30\n408343.79\n1455113.24\n28.06268122472722466603355214\n\n\n2022-07-31\n2022-07-31\n391725.95\n1325289.94\n29.55775473554111487483259701\n\n\n2022-08-31\n2022-08-31\n387455.74\n1328233.86\n29.17074708515562161621147047\n\n\n2022-09-30\n2022-09-30\n429385.87\n1332096.02\n32.23385278187378714636501954\n\n\n2022-10-31\n2022-10-31\n452829.57\n1359055.28\n33.31943716079010413763301814\n\n\n2022-11-30\n2022-11-30\n517821.84\n701193.89\n73.84859557176118576846127396\n\n\n2022-12-31\n2022-12-31\n701369.93\n1333578.77\n52.59306355034431149500077899\n\n\n2023-01-31\n2023-01-31\n465741.47\n684548.65\n68.03628493022373208974993961\n\n\n2023-02-28\n2023-02-28\n302856.21\n500601.57\n60.49845389018656094106936181\n\n\n\n\n\n\n\n\nrevenues_df.shop.unique()\n\narray(['Woluwe', 'CHATELAIN', 'La Hulpe', 'Fort Jaco', 'Tongres',\n       'Wemmel', None, 'OVERIJSE', 'LATEM', 'PAVLOVA BAR ANVERS'],\n      dtype=object)\n\n\n\nrevenues_df.date_and_time[0]\n\nTimestamp('2023-02-08 00:00:00')"
  },
  {
    "objectID": "sales pavlova bar.html",
    "href": "sales pavlova bar.html",
    "title": "WPP products solds last n days",
    "section": "",
    "text": "import foodcosts.core as core\nimport datetime as datetime\n\n\ncore.make_sql_query(\"select * from v_shop;\")\n\n[(1, 'ATELIER'),\n (2, 'La Hulpe'),\n (3, 'Fort Jaco'),\n (4, 'Woluwe'),\n (6, 'Tongres'),\n (7, 'Wemmel'),\n (12, 'CHATELAIN'),\n (36, 'OVERIJSE'),\n (39, 'LATEM'),\n (46, 'PAVLOVA BAR ANVERS')]\n\n\n\nstart_date = core.get_previous_n_day(7)\nend_date = datetime.datetime.now().strftime('%Y-%m-%d')\n\ndef get_totals_of_products_sold_at_wpp(start_date, end_date):\n    return core.get_query_res_as_pd(f\"\"\"\n    SELECT \n        vre.name as re_name,\n        vp.name as product_name,\n        sum(vpol.quantity) as qty_sold,\n        sum(vpol.quantity*vp.price) as total\n    FROM v_pos_order_line as vpol\n        left join v_pos_order as vpo on vpo.id = vpol.order_id\n        left join v_pos_session as vs on vs.id = vpo.session_id\n        left join v_pos as vpos on vpos.id = vs.pos_id\n        left join v_shop as vre on vpos.shop_id = vre.id\n        left join v_product as vp on vp.id = vpol.product_id\n    WHERE\n        vre.name = 'PAVLOVA BAR ANVERS'\n        AND (vpo.created_at between '{start_date} 00:00' and '{end_date} 23:59')\n    GROUP BY vp.name, vre.name\n    ORDER BY total desc;\n    \"\"\")\n\n\nsales_wpp_df = get_totals_of_products_sold_at_wpp(start_date, end_date)\n\n\ncumul_sum = sales_wpp_df.total.cumsum()/sales_wpp_df.total.sum()\n\n\nsales_wpp_df['cumul_sum'] = cumul_sum\n\n\nsales_wpp_df\n\n\n\n\n\n\n\n\nre_name\nproduct_name\nqty_sold\ntotal\ncumul_sum\n\n\n\n\n0\nPAVLOVA BAR ANVERS\nPAVLOVA KAMMEN RESTO\n56.000\n448.000\n0.210012\n\n\n1\nPAVLOVA BAR ANVERS\nPAVLOVA TO GO ANTWERPEN (LARGE)\n49.000\n335.650\n0.367357\n\n\n2\nPAVLOVA BAR ANVERS\nCAUTION VASE DONAU MOYEN 28 CM\n4.000\n140.000\n0.432986\n\n\n3\nPAVLOVA BAR ANVERS\nPAVLOVA TO GO ANTWERPEN (MEDIUM)\n19.000\n111.150\n0.485090\n\n\n4\nPAVLOVA BAR ANVERS\nQUARTIER DE TARTE\n23.000\n104.650\n0.534148\n\n\n5\nPAVLOVA BAR ANVERS\nPANCAKE PAVLOVA BAR (Fruits rouges)\n10.000\n85.000\n0.573994\n\n\n6\nPAVLOVA BAR ANVERS\nPAVLOVA TO GO ANTWERPEN (SMALL)\n20.000\n85.000\n0.613840\n\n\n7\nPAVLOVA BAR ANVERS\nAMERICANO (MEDIUM)\n32.000\n70.400\n0.646841\n\n\n8\nPAVLOVA BAR ANVERS\nCAFE LATTE\n20.000\n66.000\n0.677781\n\n\n9\nPAVLOVA BAR ANVERS\nCAPPUCCINO\n28.000\n56.000\n0.704032\n\n\n10\nPAVLOVA BAR ANVERS\nBOITE 4PCS CUPCAKES\n5.000\n48.000\n0.726534\n\n\n11\nPAVLOVA BAR ANVERS\nTIRAMISU FRAMBOISE EN VERRE\n12.000\n46.800\n0.748472\n\n\n12\nPAVLOVA BAR ANVERS\nCOOKIE 1PCE\n28.000\n46.200\n0.770130\n\n\n13\nPAVLOVA BAR ANVERS\nCHAI TEA LATTE\n22.000\n41.800\n0.789725\n\n\n14\nPAVLOVA BAR ANVERS\nMATCHA LATTE\n8.000\n36.000\n0.806601\n\n\n15\nPAVLOVA BAR ANVERS\nTIRAMISU CLASSIQUE 110G\n11.000\n34.100\n0.822586\n\n\n16\nPAVLOVA BAR ANVERS\nSALADE BURRATA 400G\n2.000\n34.000\n0.838524\n\n\n17\nPAVLOVA BAR ANVERS\nHOMEMADE LEMONADE 500ML\n10.000\n29.500\n0.852353\n\n\n18\nPAVLOVA BAR ANVERS\nSMOOTHIE PAVLOVA BAR (Fruits rouges)\n5.000\n27.500\n0.865245\n\n\n19\nPAVLOVA BAR ANVERS\nINFUSION VERBENA GINGER LEMON 250ML\n8.000\n23.600\n0.876308\n\n\n20\nPAVLOVA BAR ANVERS\nPANNA COTTA (Fraise/Rhubarbe)\n6.000\n18.600\n0.885027\n\n\n21\nPAVLOVA BAR ANVERS\nTIRAMISU FRAMBOISE 110G\n6.000\n18.600\n0.893746\n\n\n22\nPAVLOVA BAR ANVERS\nVERRE SPUMANTE ROSE\n3.000\n18.000\n0.902184\n\n\n23\nPAVLOVA BAR ANVERS\nHOMEMADE CAKE CITRON 1 PCE\n9.000\n17.550\n0.910411\n\n\n24\nPAVLOVA BAR ANVERS\nAMERICANO (LARGE)\n6.000\n17.400\n0.918568\n\n\n25\nPAVLOVA BAR ANVERS\nPANCAKE PAVLOVA BAR (Caramel)\n2.000\n17.000\n0.926537\n\n\n26\nPAVLOVA BAR ANVERS\nSMOOTHIE PAVLOVA BAR (Mangue)\n3.000\n16.500\n0.934272\n\n\n27\nPAVLOVA BAR ANVERS\nJUS DE FRUITS FRAIS 250 ML (Fraise Citron)\n5.000\n16.000\n0.941772\n\n\n28\nPAVLOVA BAR ANVERS\nHOMEMADE ICETEA 500ML\n4.000\n15.800\n0.949179\n\n\n29\nPAVLOVA BAR ANVERS\nTIRAMISU SPECULOOS VERRE\n4.000\n15.600\n0.956492\n\n\n30\nPAVLOVA BAR ANVERS\nTOAST AVOCAT + SALADE\n1.000\n14.000\n0.963055\n\n\n31\nPAVLOVA BAR ANVERS\nMOUSSE CHOCOLAT EN VERRE\n4.000\n14.000\n0.969618\n\n\n32\nPAVLOVA BAR ANVERS\nBONBON SUCRE COEUR 100G\n4.000\n13.400\n0.975899\n\n\n33\nPAVLOVA BAR ANVERS\nJUS DE FRUITS FRAIS 250 ML (Orange)\n4.000\n12.800\n0.981900\n\n\n34\nPAVLOVA BAR ANVERS\nMOUSSE CHOCOLAT 110G\n4.000\n12.400\n0.987712\n\n\n35\nPAVLOVA BAR ANVERS\nBOULE DE GLACE (2PCS)\n2.000\n12.000\n0.993338\n\n\n36\nPAVLOVA BAR ANVERS\nMERINGUE (KILO VRAC)\n0.366\n11.712\n0.998828\n\n\n37\nPAVLOVA BAR ANVERS\nTIRAMISU CLASSIQUE VERRE\n3.000\n11.700\n1.004313\n\n\n38\nPAVLOVA BAR ANVERS\nTHE VERVEINE\n9.000\n10.800\n1.009376\n\n\n39\nPAVLOVA BAR ANVERS\nCARAFE EAU CITRON (35Cl)\n13.000\n9.750\n1.013946\n\n\n40\nPAVLOVA BAR ANVERS\nINFUSION HIBISCUS GINGER 250ML\n3.000\n8.850\n1.018095\n\n\n41\nPAVLOVA BAR ANVERS\nPANCAKE PAVLOVA BAR (chocolat)\n1.000\n8.500\n1.022079\n\n\n42\nPAVLOVA BAR ANVERS\nBOULE DE GLACE (3PCS)\n1.000\n8.000\n1.025830\n\n\n43\nPAVLOVA BAR ANVERS\nHEUVELLAND ENTRE DEUX MONTS (15 cl)\n1.000\n7.000\n1.029111\n\n\n44\nPAVLOVA BAR ANVERS\nEXPRESSO\n4.000\n6.800\n1.032299\n\n\n45\nPAVLOVA BAR ANVERS\nASSORTIMENT MIGNARDISES\n1.000\n6.000\n1.035111\n\n\n46\nPAVLOVA BAR ANVERS\nHOMEMADE CAKE CAROTTE 1 PCE\n3.000\n5.850\n1.037854\n\n\n47\nPAVLOVA BAR ANVERS\nHOMEMADE SPECULOOS 100G\n1.000\n4.150\n1.039799\n\n\n48\nPAVLOVA BAR ANVERS\nEXPRESSO DOUBLE\n1.000\n3.400\n1.041393\n\n\n49\nPAVLOVA BAR ANVERS\nJUS DE FRUITS FRAIS 250 ML (Banane Citron)\n1.000\n3.200\n1.042893\n\n\n50\nPAVLOVA BAR ANVERS\nTIRAMISU SPECULOOS 110G\n1.000\n3.100\n1.044346\n\n\n51\nPAVLOVA BAR ANVERS\nSUPPLEMENT PROTEINE\n1.000\n3.000\n1.045753\n\n\n52\nPAVLOVA BAR ANVERS\nTHE EARL GREY\n1.000\n2.400\n1.046878\n\n\n53\nPAVLOVA BAR ANVERS\nTable d'hôtes\n1.000\n1.000\n1.047346\n\n\n54\nPAVLOVA BAR ANVERS\nCAUTION VASE DONAU PETIT 18 CM\n0.000\n0.000\n1.047346\n\n\n55\nPAVLOVA BAR ANVERS\nPANNA COTTA (Coulis de fruits rouges)\n0.000\n0.000\n1.047346\n\n\n56\nPAVLOVA BAR ANVERS\nTRAVAIL IN\n6.000\n0.000\n1.047346\n\n\n57\nPAVLOVA BAR ANVERS\nHEUVELLAND ENTRE DEUX MONTS (75 cl)\n0.000\n0.000\n1.047346\n\n\n58\nPAVLOVA BAR ANVERS\nCAUTION VERRE 6CM\n-1.000\n-1.000\n1.046878\n\n\n59\nPAVLOVA BAR ANVERS\nCAUTION VASE DONAU GRAND 35 CM\n-2.000\n-100.000\n1.000000\n\n\n\n\n\n\n\n\ndisplay(sales_wpp_df.head(n=55))\n\n\n\n\n\n\n\n\nre_name\nproduct_name\nqty_sold\ntotal\n\n\n\n\n0\nPAVLOVA BAR ANVERS\nPAVLOVA KAMMEN RESTO\n56.000\n448.000\n\n\n1\nPAVLOVA BAR ANVERS\nPAVLOVA TO GO ANTWERPEN (LARGE)\n49.000\n335.650\n\n\n2\nPAVLOVA BAR ANVERS\nCAUTION VASE DONAU MOYEN 28 CM\n4.000\n140.000\n\n\n3\nPAVLOVA BAR ANVERS\nPAVLOVA TO GO ANTWERPEN (MEDIUM)\n19.000\n111.150\n\n\n4\nPAVLOVA BAR ANVERS\nQUARTIER DE TARTE\n23.000\n104.650\n\n\n5\nPAVLOVA BAR ANVERS\nPANCAKE PAVLOVA BAR (Fruits rouges)\n10.000\n85.000\n\n\n6\nPAVLOVA BAR ANVERS\nPAVLOVA TO GO ANTWERPEN (SMALL)\n20.000\n85.000\n\n\n7\nPAVLOVA BAR ANVERS\nAMERICANO (MEDIUM)\n32.000\n70.400\n\n\n8\nPAVLOVA BAR ANVERS\nCAFE LATTE\n20.000\n66.000\n\n\n9\nPAVLOVA BAR ANVERS\nCAPPUCCINO\n28.000\n56.000\n\n\n10\nPAVLOVA BAR ANVERS\nBOITE 4PCS CUPCAKES\n5.000\n48.000\n\n\n11\nPAVLOVA BAR ANVERS\nTIRAMISU FRAMBOISE EN VERRE\n12.000\n46.800\n\n\n12\nPAVLOVA BAR ANVERS\nCOOKIE 1PCE\n28.000\n46.200\n\n\n13\nPAVLOVA BAR ANVERS\nCHAI TEA LATTE\n22.000\n41.800\n\n\n14\nPAVLOVA BAR ANVERS\nMATCHA LATTE\n8.000\n36.000\n\n\n15\nPAVLOVA BAR ANVERS\nTIRAMISU CLASSIQUE 110G\n11.000\n34.100\n\n\n16\nPAVLOVA BAR ANVERS\nSALADE BURRATA 400G\n2.000\n34.000\n\n\n17\nPAVLOVA BAR ANVERS\nHOMEMADE LEMONADE 500ML\n10.000\n29.500\n\n\n18\nPAVLOVA BAR ANVERS\nSMOOTHIE PAVLOVA BAR (Fruits rouges)\n5.000\n27.500\n\n\n19\nPAVLOVA BAR ANVERS\nINFUSION VERBENA GINGER LEMON 250ML\n8.000\n23.600\n\n\n20\nPAVLOVA BAR ANVERS\nPANNA COTTA (Fraise/Rhubarbe)\n6.000\n18.600\n\n\n21\nPAVLOVA BAR ANVERS\nTIRAMISU FRAMBOISE 110G\n6.000\n18.600\n\n\n22\nPAVLOVA BAR ANVERS\nVERRE SPUMANTE ROSE\n3.000\n18.000\n\n\n23\nPAVLOVA BAR ANVERS\nHOMEMADE CAKE CITRON 1 PCE\n9.000\n17.550\n\n\n24\nPAVLOVA BAR ANVERS\nAMERICANO (LARGE)\n6.000\n17.400\n\n\n25\nPAVLOVA BAR ANVERS\nPANCAKE PAVLOVA BAR (Caramel)\n2.000\n17.000\n\n\n26\nPAVLOVA BAR ANVERS\nSMOOTHIE PAVLOVA BAR (Mangue)\n3.000\n16.500\n\n\n27\nPAVLOVA BAR ANVERS\nJUS DE FRUITS FRAIS 250 ML (Fraise Citron)\n5.000\n16.000\n\n\n28\nPAVLOVA BAR ANVERS\nHOMEMADE ICETEA 500ML\n4.000\n15.800\n\n\n29\nPAVLOVA BAR ANVERS\nTIRAMISU SPECULOOS VERRE\n4.000\n15.600\n\n\n30\nPAVLOVA BAR ANVERS\nTOAST AVOCAT + SALADE\n1.000\n14.000\n\n\n31\nPAVLOVA BAR ANVERS\nMOUSSE CHOCOLAT EN VERRE\n4.000\n14.000\n\n\n32\nPAVLOVA BAR ANVERS\nBONBON SUCRE COEUR 100G\n4.000\n13.400\n\n\n33\nPAVLOVA BAR ANVERS\nJUS DE FRUITS FRAIS 250 ML (Orange)\n4.000\n12.800\n\n\n34\nPAVLOVA BAR ANVERS\nMOUSSE CHOCOLAT 110G\n4.000\n12.400\n\n\n35\nPAVLOVA BAR ANVERS\nBOULE DE GLACE (2PCS)\n2.000\n12.000\n\n\n36\nPAVLOVA BAR ANVERS\nMERINGUE (KILO VRAC)\n0.366\n11.712\n\n\n37\nPAVLOVA BAR ANVERS\nTIRAMISU CLASSIQUE VERRE\n3.000\n11.700\n\n\n38\nPAVLOVA BAR ANVERS\nTHE VERVEINE\n9.000\n10.800\n\n\n39\nPAVLOVA BAR ANVERS\nCARAFE EAU CITRON (35Cl)\n13.000\n9.750\n\n\n40\nPAVLOVA BAR ANVERS\nINFUSION HIBISCUS GINGER 250ML\n3.000\n8.850\n\n\n41\nPAVLOVA BAR ANVERS\nPANCAKE PAVLOVA BAR (chocolat)\n1.000\n8.500\n\n\n42\nPAVLOVA BAR ANVERS\nBOULE DE GLACE (3PCS)\n1.000\n8.000\n\n\n43\nPAVLOVA BAR ANVERS\nHEUVELLAND ENTRE DEUX MONTS (15 cl)\n1.000\n7.000\n\n\n44\nPAVLOVA BAR ANVERS\nEXPRESSO\n4.000\n6.800\n\n\n45\nPAVLOVA BAR ANVERS\nASSORTIMENT MIGNARDISES\n1.000\n6.000\n\n\n46\nPAVLOVA BAR ANVERS\nHOMEMADE CAKE CAROTTE 1 PCE\n3.000\n5.850\n\n\n47\nPAVLOVA BAR ANVERS\nHOMEMADE SPECULOOS 100G\n1.000\n4.150\n\n\n48\nPAVLOVA BAR ANVERS\nEXPRESSO DOUBLE\n1.000\n3.400\n\n\n49\nPAVLOVA BAR ANVERS\nJUS DE FRUITS FRAIS 250 ML (Banane Citron)\n1.000\n3.200\n\n\n50\nPAVLOVA BAR ANVERS\nTIRAMISU SPECULOOS 110G\n1.000\n3.100\n\n\n51\nPAVLOVA BAR ANVERS\nSUPPLEMENT PROTEINE\n1.000\n3.000\n\n\n52\nPAVLOVA BAR ANVERS\nTHE EARL GREY\n1.000\n2.400\n\n\n53\nPAVLOVA BAR ANVERS\nTable d'hôtes\n1.000\n1.000\n\n\n54\nPAVLOVA BAR ANVERS\nCAUTION VASE DONAU PETIT 18 CM\n0.000\n0.000\n\n\n\n\n\n\n\n\nsales_wpp_df.total.sum()\n\n2133.2119999999995\n\n\n\nEvolution of sales WPP\n\n# groups by date (day )\n# date_trunc works with postgres\n# \ndef get_evolution_of_sales_wpp(start_date, end_date):\n     return core.get_query_res_as_pd(f\"\"\"\n    SELECT \n        date_trunc('day', vpo.created_at) as date,\n        sum(vpol.quantity) as qty_sold,\n        sum(vpol.quantity*vp.price) as total\n    FROM v_pos_order_line as vpol\n        left join v_pos_order as vpo on vpo.id = vpol.order_id\n        left join v_pos_session as vs on vs.id = vpo.session_id\n        left join v_pos as vpos on vpos.id = vs.pos_id\n        left join v_resto_entreprise as vre on vpos.shop_id = vre.id\n        left join v_product as vp on vp.id = vpol.product_id\n    WHERE\n        vre.name = 'R.E WPP'\n        AND (vpo.created_at between '{start_date} 00:00' and '{end_date} 23:59')\n    GROUP BY \n        date_trunc('day', vpo.created_at)\n    ORDER BY total desc;\n    \"\"\")\n\n\n# core.get_previous_n_day??\n\n\nevolution_sales_wpp_df = get_evolution_of_sales_wpp(core.get_previous_n_day(60), datetime.datetime.now().strftime('%Y-%m-%d'))\n\n\nevolution_sales_wpp_df.index = evolution_sales_wpp_df.date\n\n\nevol_plot = evolution_sales_wpp_df.total.plot()\nevol_plot.set_xlabel('Last 2 weeks')\nevol_plot.set_ylabel('EUR')\nevol_plot.set_title('Evol. sales at WPP')\n\nText(0.5, 1.0, 'Evol. sales at WPP')\n\n\n\n\n\n\nprint(\"Average daily sales is {} EUR\".format(evolution_sales_wpp_df.total.mean().round(2)))\nprint(\"Total sales is {} EUR\".format(evolution_sales_wpp_df.total.sum().round(2)))\n\nAverage daily sales is 728.44 EUR\nTotal sales is 10198.12 EUR\n\n\n\nevolution_sales_wpp_df.groupby(evolution_sales_wpp_df.index.dayofweek).mean().total.round(2)\n\n/var/folders/3s/8thx9yjd15l2g2jfkpzcxpzw0000gn/T/ipykernel_61830/1846917817.py:1: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n  evolution_sales_wpp_df.groupby(evolution_sales_wpp_df.index.dayofweek).mean().total.round(2)\n\n\ndate\n0    640.76\n1    644.79\n2    702.88\n3    897.01\nName: total, dtype: float64"
  },
  {
    "objectID": "events_made_in_shop_and_re.html",
    "href": "events_made_in_shop_and_re.html",
    "title": "foodcosts",
    "section": "",
    "text": "import sys\nsys.path.append('..')\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport foodcosts.core as core\nimport datetime\n\n\n\nevents_of_shops = core.get_query_res_as_pd(\"\"\"\n    SELECT\n        v_shop.name,\n        sale_order.state,\n        TO_CHAR(sale_order.create_date, 'YYYY-MM') AS month,\n        SUM(sale_order.amount_total)\n    FROM\n        sale_order\n    LEFT JOIN v_shop_employee ON sale_order.create_uid = v_shop_employee.id\n    LEFT JOIN v_shop ON v_shop_employee.shop_id = v_shop.id\n    where\n        (sale_order.create_date BETWEEN current_date - INTERVAL '12 months' AND current_date)\n        AND v_shop.name IS NOT null\n        AND v_shop.name NOT IN('ATELIER','PAVLOVA BAR ANVERS')\n    GROUP by\n        v_shop.name,\n        sale_order.state,\n        month\n    ORDER BY name, month;\n\"\"\")\n\nconfig.ini file available... using that\n\n\n\nevents_of_re_restaurant = core.get_query_res_as_pd(\"\"\"\n    SELECT\n        v_resto_entreprise.name,\n        sale_order.state,\n        TO_CHAR(sale_order.create_date, 'YYYY-MM') AS month,\n        SUM(sale_order.amount_total)\n    FROM\n        sale_order\n    LEFT JOIN v_shop_employee ON sale_order.create_uid = v_shop_employee.id\n    LEFT JOIN v_resto_entreprise ON v_shop_employee.shop_id = v_resto_entreprise.id\n    where\n        (sale_order.create_date BETWEEN current_date - INTERVAL '12 months' AND current_date)\n        AND v_resto_entreprise.name IS NOT null\n    GROUP by\n        v_resto_entreprise.name,\n        sale_order.state,\n        month\n    ORDER BY name, month;\n\"\"\")\n\nconfig.ini file available... using that\n\n\n\ndef get_cumulative_considered_state(considered_state):\n    state_dict = {\n        \"Sale and Sent\": ['sale', 'sent'],\n        \"Cancel\": ['cancel'],\n        \"Draft\": ['draft'],\n    }\n\n    return sum([state_dict[state] for state in considered_state if state in state_dict], [])\n\ndef display_table(considered_state, considered_month, events):\n    cumulative_considered_states = get_cumulative_considered_state(considered_state)\n    \n    considered_events = events[events['state'].isin(cumulative_considered_states)];\n    considered_events = considered_events[considered_events['month'] == considered_month];\n    \n    sum_of_event = considered_events.groupby(['name']).sum().reset_index()\n    \n    display(sum_of_event)\n\n\n#Select the conidered state\nconsidered_state = [\n    \"Sale and Sent\",\n#     \"Cancel\",\n#     \"Draft\",\n]\n\n#Select the conidered month\nconsidered_month = '2023-01'\n\n\n#5: table for events made in shops\ndisplay_table(considered_state, considered_month, events_of_shops)\n\n\n\n\n\n\n\n\nname\nsum\n\n\n\n\n0\nCHATELAIN\n12961.98\n\n\n1\nFort Jaco\n18647.74\n\n\n2\nLATEM\n5302.34\n\n\n3\nLa Hulpe\n50008.78\n\n\n4\nOVERIJSE\n7556.26\n\n\n5\nTongres\n1508.86\n\n\n6\nWemmel\n5157.28\n\n\n7\nWoluwe\n16571.95\n\n\n\n\n\n\n\n\n#6: table for events made in corporate restaurants\ndisplay_table(considered_state, considered_month, events_of_re_restaurant)\n\n\n\n\n\n\n\n\nname\nsum\n\n\n\n\n0\nImmogra Park7\n3620.02\n\n\n1\nR.E. CEFIC\n88.10\n\n\n2\nR.E. GLAVERBEL\n1921.60\n\n\n3\nR.E. LHOIST CORBAIS\n658.29\n\n\n4\nR.E. ZAVENTEM\n3305.78\n\n\n\n\n\n\n\n\n#7: show an evolution across time for a given shop\n\n\ndef show_plot(df, name):\n    ax = df[['month', 'avg', 'sum']].plot(kind='bar', x='month', title='Evolution of ' + name)\n    ax.set_xlabel('Key')\n    ax.set_ylabel('Value')\n    plt.show()\n\ndef display_graphs(considered_state, events, selected_outlets, total_outlet):\n    cumulative_considered_state = get_cumulative_considered_state(considered_state)\n    \n    filtered_events_with_considered_state = events[events['state'].isin(cumulative_considered_state)];\n\n    event_sum_by_month = filtered_events_with_considered_state.groupby(['month']).sum().reset_index()\n    event_sum_by_month['sum'] = event_sum_by_month['sum'] / total_outlet\n    avg_event_sum_by_month = event_sum_by_month.rename(columns={'sum': 'avg'})\n\n    for outlet in selected_outlets:\n        events_of_outlet = filtered_events_with_considered_state[filtered_events_with_considered_state['name'].isin([outlet])];\n        event_sum_for_outlet = events_of_outlet.groupby(['month']).sum().reset_index()\n        \n        merged_df = pd.merge(avg_event_sum_by_month, event_sum_for_outlet, on='month')\n    \n        if not merged_df.empty:\n            show_plot(merged_df, outlet)\n\n\nshop_list =  core.get_shop_names()\nre_restaurant_list = [name for (i, name) in core.make_sql_query(\"select * from v_resto_entreprise\")]\n\nconfig.ini file available... using that\nconfig.ini file available... using that\n\n\n\n#Select the conidered state for graph\nconsidered_state_for_graphs = [\n    \"Sale and Sent\",\n#     \"Cancel\",\n#     \"Draft\",\n]\n\n\n#Select the shops which evolution you like to see\nselected_shops = shop_list\n# selected_shops = ['Woluwe']\ntotal_shop = len(shop_list)\n\ndisplay_graphs(considered_state_for_graphs, events_of_shops, selected_shops, total_shop)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Select the which corporate restaurants evolution you like to see\nselected_re_restaurants = re_restaurant_list\n# selected_re_restaurants = ['R.E. GLAVERBEL']\ntotal_re_restaurant = len(re_restaurant_list)\n\ndisplay_graphs(considered_state_for_graphs, events_of_re_restaurant, selected_re_restaurants, total_re_restaurant)"
  },
  {
    "objectID": "best_selling_products.html",
    "href": "best_selling_products.html",
    "title": "foodcosts",
    "section": "",
    "text": "import json\nimport psycopg2\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport datetime\nimport pandas as pd\nimport foodcosts.core as core\n\n\n\ndef get_last_week_best_selling_products(shops=[]):\n    today = datetime.datetime.now().date()\n    start_date = (today - datetime.timedelta(days=7)).strftime(\"%Y-%m-%d\")\n    end_date = today.strftime(\"%Y-%m-%d\")    \n    return get_best_selling_products(start_date, end_date, shops)\n\n\ndef display_top_selling_products_per_column(shops, top_n=10):\n    data = {'rank': range(1, top_n+1)}\n    for shop in shops:\n        best_selling_products = get_last_week_best_selling_products(shops=[shop])\n        top_selling_products = best_selling_products[:top_n]\n        data[shop] = [product for [shop, product, amount] in top_selling_products]                \n    \n    def get_color_for_product(existing_bag, product_id):\n        def generate_color(product_name):\n            id = hash(product_name)\n            red = (id * 13) % 256\n            green = (id * 7) % 256\n            blue = (id * 19) % 256\n            return f\"#{red:02x}{green:02x}{blue:02x}99\"\n\n        if product_id not in existing_bag:\n            existing_bag[product_id] = generate_color(product_id)\n        return existing_bag[product_id]\n        \n    existing_bag = {}\n    df = pd.DataFrame(data)\n    df_style = df.style.applymap(lambda x: 'background-color: '+ get_color_for_product(existing_bag, x))\n    display(df_style)\n\n\ndef get_best_selling_products(start_date, end_date, shops=[]):\n    translation_dict = core.get_product_names()\n    query = \"\"\"\n    SELECT\n       v_shop.name AS shop_name, \n       v_product.name AS product_name, \n       SUM(v_product.price * v_pos_order_line.quantity) AS total_sales,\n       v_product.id AS product_id\n    FROM v_pos_order_line\n    LEFT JOIN v_product ON v_product.id = v_pos_order_line.product_id\n    LEFT JOIN v_pos_order ON v_pos_order.id = v_pos_order_line.order_id\n    LEFT JOIN v_pos_session ON v_pos_session.id = v_pos_order.session_id\n    LEFT JOIN v_pos ON v_pos.id = v_pos_session.pos_id\n    LEFT JOIN v_shop ON v_shop.id = v_pos.shop_id\n    WHERE v_pos_order.created_at BETWEEN '{}' AND '{}'\n    \"\"\".format(start_date, end_date)\n    \n    if len(shops) &gt; 0:\n        query += \"AND v_shop.name in ('{}')\".format(\"','\".join(shops))\n    \n    query += \"GROUP BY v_shop.id, v_shop.name, v_product.id, v_product.name ORDER BY total_sales DESC\" \n    return [[row[0], translation_dict.get(row[3],'None')+ f\"({str(row[3])})\", row[2]] for row in core.make_sql_query(query)]\n\n\nget_best_selling_products(start_date = '2022-01-01', end_date = '2022-01-31', shops = ['Woluwe'])\n\n[['Woluwe', 'PAVLOVA AUX FRUITS ROUGES JETABLE(36501)', Decimal('5555.60000')],\n ['Woluwe', 'BAR EPICE(50689)', Decimal('2605.98400')],\n ['Woluwe', 'POULET AU ROMARIN (18191)', Decimal('2463.51300')],\n ['Woluwe', 'SAUMON MI CUIT EPICE(53011)', Decimal('2291.96000')],\n ['Woluwe', 'CHAMPIGNONS DES BOIS SAUTES(51532)', Decimal('2194.29370')],\n ['Woluwe',\n  'SALADE GO GREEN SUCRINE / HARICOTS VERTS / COURGETTES / EDAMAME / AVOCATS(52986)',\n  Decimal('2154.18580')],\n ['Woluwe', 'DIVERS PIECE BALANCE(54437)', Decimal('2000.00000')],\n ['Woluwe',\n  'SCAMPIS / OIGNONS / TOMATES SECHEES(50615)',\n  Decimal('1930.3680')],\n ['Woluwe', 'THON ALBACORE EPICE CUIT(18440)', Decimal('1727.9400')],\n ['Woluwe',\n  \"FILET DE BOEUF / CROUTE D'HERBES / GRAINES DE MOUTARDE(40750)\",\n  Decimal('1713.5040000')],\n ['Woluwe', 'COQUELET CUIT + SAUCE COMPTOIR(55577)', Decimal('1592.10000')],\n ['Woluwe', 'POMMES DE TERRE AU PARMESAN(50645)', Decimal('1573.84500')],\n ['Woluwe', 'ASPERGE VERTE ET SUGAR SNAPS (40762)', Decimal('1565.45280')],\n ['Woluwe',\n  'BELLES DE FONTENAY / GROS SEL / ROMARIN(18602)',\n  Decimal('1477.25640')],\n ['Woluwe',\n  'HARICOTS VERTS / EDAMAME / OIGNONS(40728)',\n  Decimal('1411.16040')],\n ['Woluwe',\n  'CHICONS BRAISES / UNION SQUARE NUTS / OIGNONS(51524)',\n  Decimal('1373.39300')],\n ['Woluwe',\n  'JARDINIERE LEGUMES MARCHE / AIL / HERBES / CITRON(18521)',\n  Decimal('1365.93600')],\n ['Woluwe', 'GAMBAS GEANTES (50610)', Decimal('1347.0120')],\n ['Woluwe', 'CAROTTES, CELERI CORIANDRE(36719)', Decimal('1330.21200')],\n ['Woluwe', 'PUREE NATURE 400G(19281)', Decimal('1244.60000')],\n ['Woluwe', 'SAUCE COMPTOIR CHAUDE(38021)', Decimal('1223.97600')],\n ['Woluwe', 'LEGUMES PROVENCAUX(18517)', Decimal('1176.59100')],\n ['Woluwe',\n  'TARTARE DE SAUMON / SESAME NOIRE / WAKAME - 200G(43712)',\n  Decimal('1144.25000')],\n ['Woluwe', 'LOTTE EPICEE(51181)', Decimal('1122.35400')],\n ['Woluwe',\n  'TIRADITO DE SAUMON / SESAME / PIMENTS(53784)',\n  Decimal('1048.83880')],\n ['Woluwe', 'CABILLAUD EPICE(51837)', Decimal('953.21600')],\n ['Woluwe', 'MOUSSE CHOCOLAT 110G(19772)', Decimal('936.20000')],\n ['Woluwe',\n  'TERRINE MILLEFEUILLE DE TRUITE / SAUMON (Tranche)(53145)',\n  Decimal('902.70000')],\n ['Woluwe', 'WATERZOOI DE POULET(51344)', Decimal('893.02960')],\n ['Woluwe', 'BOITE 4PCS CUPCAKES(19671)', Decimal('892.80000')],\n ['Woluwe',\n  \"PUREE A L'HUILE D'OLIVE / BASILIC 400G(19285)\",\n  Decimal('861.40000')],\n ['Woluwe', 'BROCHETTE POISSON EPICEE(18323)', Decimal('836.7024')],\n ['Woluwe',\n  \"FILET DE DINDE FARCI (HACHE 100% VOLAILLE) / FRUITS D'HIVER (54441)\",\n  Decimal('826.27200')],\n ['Woluwe', 'BICHE FILET CUIT(18244)', Decimal('814.50180')],\n ['Woluwe',\n  'COURGETTES FARCIES / COULIS DE TOMATES(51394)',\n  Decimal('777.88620')],\n ['Woluwe', 'BOULETTES SAUCE TOMATE(52751)', Decimal('758.0414400')],\n ['Woluwe', 'PUREE NATURE(55798)', Decimal('719.36900')],\n ['Woluwe', 'PLAT TOO GOOD TO GO(51672)', Decimal('718.5600000')],\n ['Woluwe', 'BOX 5 PLATS (S4)(44080)', Decimal('690.00000')],\n ['Woluwe', 'OSSO BUCO DE VEAU CLASSICO(51285)', Decimal('680.19040')],\n ['Woluwe', 'PAIN DE VIANDE NATURE(51722)', Decimal('656.77500')],\n ['Woluwe', 'SAUCE BOLOGNAISE(51287)', Decimal('643.03200')],\n ['Woluwe', 'BUFFET DOLCE FARNIENTE (prix/pers)(19531)', Decimal('630.00000')],\n ['Woluwe', 'PLAT DU JOUR 9,90(19326)', Decimal('584.10000')],\n ['Woluwe', 'MAGRET DE CANARD CUIT(18218)', Decimal('583.22920')],\n ['Woluwe',\n  'PAIN DE VIANDE AUX HERBES / TOMATES SECHEES(51698)',\n  Decimal('575.08920')],\n ['Woluwe', 'SPAGHETTI BOLOGNAISE 550G(19312)', Decimal('568.80000')],\n ['Woluwe', 'COQUELET MIEL 2PCS(20181)', Decimal('556.80000')],\n ['Woluwe', 'TIRAMISU SPECULOOS 110G(19777)', Decimal('551.80000')],\n ['Woluwe', 'RADIATORI JAMBON FROMAGE 400G(53690)', Decimal('543.00000')],\n ['Woluwe', 'AUBERGINES FARCIES A LA LIBANAISE(55576)', Decimal('541.48500')],\n ['Woluwe', 'None(53502)', Decimal('533.2000000')],\n ['Woluwe',\n  'PATES ORZO / TOMATES SECHEES / FETA / AMANDES / OLIVES / CITRON / KALE(52979)',\n  Decimal('527.52700')],\n ['Woluwe', 'FAMILY FIT 40 EURO(19377)', Decimal('520.00000')],\n ['Woluwe', 'SAUCE BOLOGNAISE(51288)', Decimal('516.59400')],\n ['Woluwe', 'HACHIS PARMENTIER(17959)', Decimal('503.04240')],\n ['Woluwe',\n  'CANNELLONI BOLOGNAISE / TOMATES / CAROTTES / FENOUIL / OIGNONS(51539)',\n  Decimal('492.60900')],\n ['Woluwe', 'SAUMON FUME TRANCHE MAIN (250gr)(38138)', Decimal('473.48000')],\n ['Woluwe',\n  'CAILLE FARCIE DESOSSEE / HACHE 100% VOLAILLE / HERBES (55411)',\n  Decimal('462.80000')],\n ['Woluwe',\n  'SAUMON FUME / 12 BLINIS /  CREME CARDAMOME(53358)',\n  Decimal('462.40000')],\n ['Woluwe', 'VOL-AU-VENT(51185)', Decimal('462.08220')],\n ['Woluwe', 'PANNA COTTA(55849)', Decimal('455.70000')],\n ['Woluwe',\n  'LASAGNE / SAUCE BOLOGNAISE (HACHE 100% VOLAILLE) / EMMENTAL(51292)',\n  Decimal('452.65220')],\n ['Woluwe', 'BOL SALADE THAI AUX SCAMPIS 400G(19082)', Decimal('449.0000000')],\n ['Woluwe', 'TIRAMISU CLASSIQUE 110G(19783)', Decimal('446.40000')],\n ['Woluwe',\n  'CAILLE FARCIE DESOSSEE / HACHE 100% VOLAILLE / TRUFFEE (19161)',\n  Decimal('445.00000')],\n ['Woluwe',\n  'ESCALOPE DE DINDE / STRACCIATELLA DI BUFALA / SAUCE TOMATE AU BASILIC (51731)',\n  Decimal('440.46720')],\n ['Woluwe',\n  'TARTARE DE DAURADE / SESAME NOIR / WAKAME 200G(53552)',\n  Decimal('438.55000')],\n ['Woluwe', 'POTAGE DE POISSONS (1L)(38562)', Decimal('434.00000')],\n ['Woluwe', 'SALADE CREVETTE PDT HARICOT 400G(19017)', Decimal('428.2200000')],\n ['Woluwe', 'PLAT DU JOUR 10.9(19322)', Decimal('425.10000')],\n ['Woluwe',\n  'TABOULE LIBANAIS / TOMATES / HERBES VERTES(52962)',\n  Decimal('421.15360')],\n ['Woluwe', 'BISQUE HOMARD 1L(19565)', Decimal('420.0000000')],\n ['Woluwe',\n  'DINDE ESCALOPE PANEE SAUCE + COULIS(18249)',\n  Decimal('411.50200')],\n ['Woluwe', 'PUREE BASILIC(55790)', Decimal('410.05000')],\n ['Woluwe',\n  'TORTELLONI RICOTTA / EPINARD / CHAMPIGNONS DES BOIS(56151)',\n  Decimal('409.6898000')],\n ['Woluwe',\n  'BONBONS TRUFFES SAUCE TARTUFATA 1PERS.(53692)',\n  Decimal('408.80000')],\n ['Woluwe', 'NOUILLE SAUTEE LEGUME CROQUANT(52478)', Decimal('405.8984800')],\n ['Woluwe', 'POMMES  JONAGOLD / AIRELLES(50660)', Decimal('393.85500')],\n ['Woluwe', 'BOULETTES SAUCE TOMATE(52753)', Decimal('387.7468200')],\n ['Woluwe',\n  'GIRASOLE NOIR AUX CEPES ET TRUFFES / SAUCE TARTUFATA(55822)',\n  Decimal('379.8144000')],\n ['Woluwe', 'CHAMPAGNE(53608)', Decimal('379.6800000')],\n ['Woluwe', 'WATERZOOI POISSON(51330)', Decimal('375.36000')],\n ['Woluwe',\n  'LASAGNE / SAUCE BOLOGNAISE (HACHE 100% VOLAILLE) / EMMENTAL(51290)',\n  Decimal('372.29660')],\n ['Woluwe', '7/7 WHOLE WEEK (1PERS)(19385)', Decimal('372.00000')],\n ['Woluwe', 'SAUMON FUME TRANCHE MAIN (100gr)(38137)', Decimal('371.80000')],\n ['Woluwe', 'TARTE MOELLEUX CHOCOLAT 4PERS(19724)', Decimal('371.80000')],\n ['Woluwe', 'OSSO BUCO DE VEAU CLASSICO(51282)', Decimal('368.70620')],\n ['Woluwe',\n  'VELOUTE TOMATES ET MINI BOULETTES 1L(20201)',\n  Decimal('368.0000000')],\n ['Woluwe', 'TABOULE(52911)', Decimal('366.77340')],\n ['Woluwe',\n  'SALADE TIKKA AU POULET / CONCOMBRE / VINAIGRETTE / WASABI (52973)',\n  Decimal('364.21280')],\n ['Woluwe', 'VOL-AU-VENT(51184)', Decimal('362.52600')],\n ['Woluwe', 'COQUELET AU MIEL CUIT (1 PIECE)(19155)', Decimal('356.70000')],\n ['Woluwe', 'VELOUTE CHAMPIGNONS DES BOIS 1L(38203)', Decimal('351.0000000')],\n ['Woluwe', 'CHICON AU GRATIN(53082)', Decimal('350.48840')],\n ['Woluwe', 'DOS DE CABILLAUD EPICE(53764)', Decimal('349.92000')],\n ['Woluwe', 'NAVARIN AGNEAU ET PDT 450G(36596)', Decimal('349.30000')],\n ['Woluwe',\n  'SALADE DE LENTILLES VERTES / HERBES VERTES(18053)',\n  Decimal('346.41880')],\n ['Woluwe',\n  'POTAGE AUX CAROTTES / LAIT DE COCO (1L)(38559)',\n  Decimal('344.0000000')],\n ['Woluwe', 'PUREE TRUFFEE 400G(19286)', Decimal('339.70000')],\n ['Woluwe',\n  \"BURGER D'AUBERGINES / COULIS DE TOMATES(51386)\",\n  Decimal('336.04200')],\n ['Woluwe', 'POTAGE MINESTRONE ROUGE (1L)(38588)', Decimal('336.0000000')],\n ['Woluwe', 'COQUELET LAQUE (1PCE)(40466)', Decimal('330.60000')],\n ['Woluwe', 'TERRINE HOMARD LEGUME(18824)', Decimal('329.99280')],\n ['Woluwe',\n  'TAJINE AGNEAU / LEGUMES DE SAISON / ABRICOTS(51378)',\n  Decimal('327.91680')],\n ['Woluwe',\n  'LEMONGRASS / RAISINS / CORIANDRE / CITRONNELLE(52757)',\n  Decimal('326.10060')],\n ['Woluwe',\n  'TABOULE LIBANAIS / TOMATES / HERBES VERTES(52961)',\n  Decimal('325.45660')],\n ['Woluwe', 'GRATIN DAUPHINOIS (2 PERS.)(19288)', Decimal('322.40000')],\n ['Woluwe',\n  'ESCALOPE DE DINDE ESTRAGON JEUNE CAROTTE ET OIGNON(51202)',\n  Decimal('321.86880')],\n ['Woluwe', 'CHOUCROUTE GARNIE (34616)', Decimal('318.33840')],\n ['Woluwe', 'MINI CHICKPEA BALLS ET HOUMOUS(39120)', Decimal('315.0000000')],\n ['Woluwe',\n  'LEMONGRASS / RAISINS / CORIANDRE / CITRONNELLE(52756)',\n  Decimal('313.05960')],\n ['Woluwe', 'MOUSSE CHOCOLAT 85G(19769)', Decimal('309.60000')],\n ['Woluwe', 'LINGUINI ROQUETTE TOMATE SECHEE(38619)', Decimal('308.9962600')],\n ['Woluwe', 'VELOUTE POTIRON CREME 1L(19561)', Decimal('304.0000000')],\n ['Woluwe', 'CHICON GRATIN ET PUREE(19273)', Decimal('303.36000')],\n ['Woluwe', 'MOUSSAKA(51395)', Decimal('302.36220')],\n ['Woluwe', 'MAGRET DE CANARD EN SAUCE(40752)', Decimal('296.54800')],\n ['Woluwe',\n  'CHICKEN FINGERS / SAUCE TIKKA MASALA(51528)',\n  Decimal('293.67060')],\n ['Woluwe', 'CANNELE DE BORDEAUX - 4PCS(32525)', Decimal('289.9400000')],\n ['Woluwe', 'POTAGE COURGETTE ET CRESSON 1L(19568)', Decimal('288.0000000')],\n ['Woluwe',\n  'POTIRONS CARAMELISES AU MIEL / SOJA / OIGNONS / CAROTTES / AIRELLES(50678)',\n  Decimal('287.23500')],\n ['Woluwe', 'LINGUINI CHAMPIGNONS DES BOIS 450G(50022)', Decimal('285.12000')],\n ['Woluwe', 'WATERZOOI DE POULET ET PDT 450G(36601)', Decimal('284.40000')],\n ['Woluwe', 'CHICON AU GRATIN(53083)', Decimal('280.07940')],\n ['Woluwe', 'POTAGE THAI POULET 1L(38589)', Decimal('280.0000000')],\n ['Woluwe',\n  'MINI BOULETTES THAI CURRY CORIANDRE(51353)',\n  Decimal('279.0346000')],\n ['Woluwe', 'SALADE POULET AUX HERBES 400G(19104)', Decimal('278.3800000')],\n ['Woluwe',\n  'SALADE DE QUINOA / POIS CHICHES / HARICOTS ROUGES / AZUKI / TOMATES SECHEES  / KALE(56143)',\n  Decimal('277.41280')],\n ['Woluwe', 'SAUCE BOLOGNAISE(51289)', Decimal('276.82200')],\n ['Woluwe', 'GUILLAUME CHARDONNAY 75CL(51369)', Decimal('275.65000')],\n ['Woluwe',\n  '4 - 12P FILET DE SOLE LIMANDE, SAUCE VERTE, CHAMPIGNONS ET ÉPINARDS, STOEMP AUX POIREAUX. (GF)(44000)',\n  Decimal('274.92000')],\n ['Woluwe',\n  'POTAGE AUX POIREAUX ET NOIX DE MUSCADE 1L(50725)',\n  Decimal('272.0000000')],\n ['Woluwe',\n  'PETIT SABLE PUR BEURRE PARMESAN ET ROMARIN(34182)',\n  Decimal('272.0000')],\n ['Woluwe', 'PLAT DU JOUR 12.90(19320)', Decimal('270.90000')],\n ['Woluwe',\n  'VELOUTE DE PATATES DOUCES AU LAIT DE COCO 1L(54395)',\n  Decimal('270.00000')],\n ['Woluwe', '5/7 FIVE A WEEK (1PERS)(38227)', Decimal('269.60000')],\n ['Woluwe', 'AUBERGINES À LA PARMIGIANA(51560)', Decimal('268.9128')],\n ['Woluwe', 'TARTE FROMAGE SPECULOOS PORTION(19705)', Decimal('268.45000')],\n ['Woluwe',\n  'PATATES DOUCES / HUILE ITALIENNE / POIS CHICHES / EPICES CHAI / PERSIL(50727)',\n  Decimal('266.79900')],\n ['Woluwe', 'JAMBON A L OS LAQUE(55641)', Decimal('265.47840')],\n ['Woluwe', 'GRATIN DAUPHINOIS(18599)', Decimal('265.01900')],\n ['Woluwe', 'POTAGE COURGETTE EPINARD 1L(56117)', Decimal('264.00000')],\n ['Woluwe',\n  'PAPPARDELLE CHAMPIGNONS DES BOIS / TARTUFATA ET PARMESAN(56149)',\n  Decimal('262.99380')],\n ['Woluwe', 'POIRES ROTIES AUX EPICES(54418)', Decimal('259.53200')],\n ['Woluwe',\n  'CHICKEN FINGERS / SAUCE TIKKA MASALA(51529)',\n  Decimal('259.40820')],\n ['Woluwe',\n  'FILET DE PINTADEAU / SAUCE CREME AUX CHAMPIGNONS DES BOIS / MARJOLAINE(52236)',\n  Decimal('259.35700')],\n ['Woluwe',\n  'TARTARE DE SAUMON / SESAME NOIRE / WAKAME 400G (Gluten Free)(55885)',\n  Decimal('258.70000')],\n ['Woluwe', 'VELOUTE DE TOMATES / BASILIC 1L(38766)', Decimal('256.0000000')],\n ['Woluwe', 'POTAGE LEGUMES DU MARCHE 1L(19545)', Decimal('256.0000000')],\n ['Woluwe',\n  'QUICKLUNCHL SPAGHETTI BOLOGNAISE 410g(19308)',\n  Decimal('253.45000')],\n ['Woluwe', 'ACC 1 : GRATIN 600G(55422)', Decimal('251.10000')],\n ['Woluwe', 'LASAGNE VEGE(51421)', Decimal('250.5642000')],\n ['Woluwe',\n  'RIZ SAUVAGE / AMANDES / FRUITS SECS / CUMIN / JEUNES CAROTTES GRILLEES(55631)',\n  Decimal('243.04000')],\n ['Woluwe', 'PUREE DE CELERI-RAVE (400g)(19282)', Decimal('241.80000')],\n ['Woluwe', 'MOUSSE CHOCOLAT 400G(19773)', Decimal('241.5000')],\n ['Woluwe',\n  'SALADE DE LENTILLES VERTES / HERBES VERTES(54331)',\n  Decimal('241.47760')],\n ['Woluwe', 'VELOUTE DE CHICONS(51780)', Decimal('240.00000')],\n ['Woluwe', 'PLAT DU JOUR 9.9 COMPTOIR(34712)', Decimal('237.6000')],\n ['Woluwe', 'TARTE MOELLEUX CHOCOLAT PORTION(19723)', Decimal('236.60000')],\n ['Woluwe',\n  'FILET DE PINTADEAU / SAUCE CREME AUX CHAMPIGNONS DES BOIS / MARJOLAINE(52237)',\n  Decimal('236.05200')],\n ['Woluwe',\n  'CHICKEN FINGERS / SAUCE TIKKA MASALA(55499)',\n  Decimal('231.07200')],\n ['Woluwe', 'SUSHI GRAND(19458)', Decimal('231.0000000')],\n ['Woluwe', 'CHOUCROUTE ET PUREE(19792)', Decimal('227.52000')],\n ['Woluwe', 'VOL AU VENT PUREE(19301)', Decimal('227.52000')],\n ['Woluwe',\n  'ESCALOPE DE POULET / MISO / CHAMPIGNONS(54417)',\n  Decimal('225.54420')],\n ['Woluwe', 'LINGUINI ZUCHINE AL LIMONE 500G(49998)', Decimal('221.00000')],\n ['Woluwe', 'TARTE GALETTE DES ROIS 4PERS(34088)', Decimal('219.70000')],\n ['Woluwe',\n  'CHICKEN FINGERS / SAUCE TIKKA MASALA(51527)',\n  Decimal('218.47260')],\n ['Woluwe',\n  'CANNELLONI RICOTTA ET EPINARDS / SAUCE TOMATES / BASILIC(51538)',\n  Decimal('218.43640')],\n ['Woluwe',\n  '3 - 14P HACHIS PARMENTIER (100% HACHÉ DE VOLAILLE, ÉPINARDS, TOMATES,..)(44009)',\n  Decimal('218.04000')],\n ['Woluwe',\n  '1 - 11P MAFALDE, SAUCE TARTUFATA, CHAMPIGNONS DES BOIS, OIGNONS ET PARMESAN(43949)',\n  Decimal('217.58000')],\n ['Woluwe',\n  '1 - 12P FILET DE DAURADE EN CROÛTE D’ÉPICES, SAUCE VERTE, BUTTERNUT GRILLÉ ET NOIX DE CAJOU, STOEMP AUX POIREAUX(43953)',\n  Decimal('217.58000')],\n ['Woluwe', 'POUILLY FUME 75CL(50788)', Decimal('216.90000')],\n ['Woluwe',\n  'ACC 1 : GRATIN / CELERI RAVE POTIRON / POMME AIRELLES / CHICON CONFIT(18850)',\n  Decimal('213.60000')],\n ['Woluwe',\n  'PATES ORZO / TOMATES SECHEES / FETA / AMANDES / OLIVES / CITRON / KALE(52980)',\n  Decimal('213.09400')],\n ['Woluwe',\n  'PUREE AUX CAROTTES / EPICES RAS EL HANOUT 400G(19284)',\n  Decimal('212.40000')],\n ['Woluwe',\n  'VELOUTÉ DE POIVRONS DOUX / MASCARPONE (50736)',\n  Decimal('208.00000')],\n ['Woluwe', 'JAMBONNEAU MIEL / MOUATDE (18228)', Decimal('207.37080')],\n ['Woluwe',\n  'SUPREME DE POULET / STRACCIATELLA DI BUFALA / CHAMPIGNONS / ESTRAGON(55643)',\n  Decimal('206.89920')],\n ['Woluwe',\n  'LES 3 COQUILLES SAINT JACQUES GRILLEES / SAUCE VERTE AUX COURGETTES / GROS CRESSON(19595)',\n  Decimal('206.40000')],\n ['Woluwe', 'MINI-SATE DE POULET + SAUCE(20018)', Decimal('205.8000')],\n ['Woluwe', 'PETIT JAMBONNEAU LAQUE SESAMISO(55640)', Decimal('203.75760')],\n ['Woluwe', 'GUILLAUME MERLOT 75CL(51368)', Decimal('201.15000')],\n ['Woluwe', 'CAROTTE POTIRON AIRELLE(18490)', Decimal('200.81100')],\n ['Woluwe',\n  'TARTE ABRICOTS ROTIS / CREME DE NOISETTES  (PORTION)(55484)',\n  Decimal('200.20000')],\n ['Woluwe', 'POTAGE BROCOLI ET THYM 1L(19553)', Decimal('200.00000')],\n ['Woluwe',\n  'POTAGE AUX CHAMPIGNONS DE PARIS (1L)(38566)',\n  Decimal('200.00000')],\n ['Woluwe',\n  'SALADE COLESLAW : CHOU BLANC / CAROTTES / JEUNES OIGNONS / VINAIGRETTE YAOURT(52967)',\n  Decimal('199.29280')],\n ['Woluwe',\n  '2 - 13P JAMBONNEAU EN HOCHEPOT DE LÉGUMES D’HIVER ET POMMES DE TERRE. (GF)(43992)',\n  Decimal('199.08000')],\n ['Woluwe',\n  '2 - 1P FILET DE SAUMON LAQUÉ , NOUILLES SAUTÉES, POIREAUX GRILLÉS À L’HUILE ET LAURIER ET CORIANDRE.(43970)',\n  Decimal('199.08000')],\n ['Woluwe', 'SASHIMI 16 PCS(19464)', Decimal('198.0000000')],\n ['Woluwe', 'BISQUE HOMARD 1/2L(19564)', Decimal('196.00000')],\n ['Woluwe', 'RIZ BASMATI NATURE 400G(19272)', Decimal('193.8000000')],\n ['Woluwe',\n  'RAVIOLE OUVERTE DE GAMBAS / LAIT DE COCO / DUXELLES DE PETITS LÉGUMES(53160)',\n  Decimal('193.70000')],\n ['Woluwe', 'MINI KEFTA(51349)', Decimal('192.9330000')],\n ['Woluwe', 'REPAS A TABLE(19391)', Decimal('192.00000')],\n ['Woluwe',\n  'LASAGNE / SAUCE BOLOGNAISE (HACHE 100% VOLAILLE) / EMMENTAL(51291)',\n  Decimal('191.87220')],\n ['Woluwe',\n  '1 - 12P FILET DE SOLE LIMANDE, SAUCE À LA MOUTARDE DOUCE (CRÈME 5%) CHAMPIGNONS SAUTÉS ET ÉPINARDS AUX OIGNONS, STOEMP AUX POIREAUX. (GF)(43854)',\n  Decimal('189.60000')],\n ['Woluwe',\n  'CHICKEN FINGERS TIKKA + ACCOMPAGNEMENT (19381)',\n  Decimal('189.60000')],\n ['Woluwe',\n  '1 - 1P FILET D’AIGLEFIN, SAUCE AUX POIVRONS DOUX, BLETTES AUX OIGNONS, PUREE DE CELERI-RAVE(43927)',\n  Decimal('187.91000')],\n ['Woluwe',\n  'COMPOTE DE POMMES / AIRELLES / FIGUES / RAISINS / ABRICOTS (400g)(19694)',\n  Decimal('186.30000')],\n ['Woluwe', 'SALADE FREEKEH POTIRON AIRELLE(56141)', Decimal('183.88580')],\n ['Woluwe', 'CHAMPAGNE(53609)', Decimal('182.2500000')],\n ['Woluwe', 'RATATOUILLE LEGUME(51441)', Decimal('181.85700')],\n ['Woluwe',\n  'FENOUIL GRILLE / OIGNONS / LAURIER / CORIANDRE / GRAINES DE MOUTARDE(36796)',\n  Decimal('180.68700')],\n ['Woluwe',\n  'CELERI-RAVE GRILLE / OIGNONS / POTIRON(49421)',\n  Decimal('180.57000')],\n ['Woluwe', 'SALADE THAI(52963)', Decimal('180.28360')],\n ['Woluwe', \"NAVARIN D'AGNEAU(51381)\", Decimal('178.73280')],\n ['Woluwe',\n  'ZAKOUSKIS RONDS : (CREVETTES / FROMAGE / CHAMPIGNONS)(19967)',\n  Decimal('178.08000')],\n ['Woluwe', 'MOUSSE CHOCOLAT DUO(51237)', Decimal('176.9000000')],\n ['Woluwe',\n  'PAELLA VEGAN AUX LEGUMES DE SAISON 500G(54552)',\n  Decimal('176.80000')],\n ['Woluwe',\n  'CAILLE FARCIE AU FOIE GRAS (DESOSSÉE / 100% HACHÉ DE VOLAILLE) / JUS BRUN AU THYM(40535)',\n  Decimal('176.40000')],\n ['Woluwe',\n  \"FILET DE DINDE DE FERME / FARCE AUX FRUITS D'HIVER CUIT / SAUSE LÉGÈREMENT CRÉMÉE(50392)\",\n  Decimal('175.50000')],\n ['Woluwe', 'MISE EN PLACE/SUPPORT FORFAIT(51140)', Decimal('175.45000')],\n ['Woluwe', 'PLAT DU JOUR 15,90(19323)', Decimal('174.90000')],\n ['Woluwe',\n  'SARRASIN / HARICOTS ROUGES / POTIRON / SESAME ET PERSIL(56137)',\n  Decimal('173.73020')],\n ['Woluwe', 'PANNA COTTA(55850)', Decimal('173.60000')],\n ['Woluwe',\n  'FEUILLETE AU FROMAGE DE CHEVRE (PESTO ET FIGUES) / GARNITURE DE SAISON(19493)',\n  Decimal('172.80000')],\n ['Woluwe', 'POTAGE MINESTRONE ROUGE (1/2 L)(19588)', Decimal('172.0000000')],\n ['Woluwe', 'SPUMANTE PINOT ROSE 75CL(55951)', Decimal('170.55000')],\n ['Woluwe', 'TARTE FRUIT ROUGE MERINGUE 4PERS(19687)', Decimal('169.00000')],\n ['Woluwe',\n  '2 - 6P CHICONS AU GRATIN,  PURÉE DE POMMES DE TERRE(43993)',\n  Decimal('168.13000')],\n ['Woluwe', 'POTAGE CHOU FLEUR CURRY DOUX 1L(51712)', Decimal('168.0000000')],\n ['Woluwe', 'PUREE POIREAUX 400G(19283)', Decimal('167.40000')],\n ['Woluwe',\n  'FILET DE PINTADEAU SAUCE MOUTARDE COCO MASSALA(38233)',\n  Decimal('166.23360')],\n ['Woluwe',\n  'BATONNET POULET GINGEMBRE/SESAME CUIT(18157)',\n  Decimal('165.68760')],\n ['Woluwe', 'COMPOTE POMME 400G(19292)', Decimal('164.1500000')],\n ['Woluwe', 'GNOCCHI / CREME PARMESAN / BASILIC(53566)', Decimal('163.36320')],\n ['Woluwe', \"NAVARIN D'AGNEAU(51382)\", Decimal('163.12320')],\n ['Woluwe', 'TIRAMISU CLASSIQUE 400G(19785)', Decimal('162.50000')],\n ['Woluwe',\n  '1 - 10P BOULETTE DE VOLAILLE, JUS BRUN À LA MOUTARDE TIERENTYN, POTIRON CARAMÉLISÉ AU MIEL ET AU SOJA, OIGNONS ET AIRELLES, PURÉE DE CÉLERI-RAVE(43852)',\n  Decimal('161.16000')],\n ['Woluwe',\n  '1 - 3P SUPRÊME DE POULET AUX CHICONS ET STRACCIATELLA, CHICONS ET OIGNONS AU FOUR, PURÉE DE POMMES DE TERRE. (GF)(43845)',\n  Decimal('161.16000')],\n ['Woluwe',\n  '2 - 7P PAËLLA VÉGAN AUX LÉGUMES DE SAISON. (GF)(V)(43980)',\n  Decimal('161.16000')],\n ['Woluwe',\n  '1 - 14P HACHIS PARMENTIER (100% HACHÉ DE VOLAILLE, ÉPINARDS, TOMATES,..)(43856)',\n  Decimal('161.16000')],\n ['Woluwe',\n  '2 - 8P SCAMPIS SAUCE PUTTANESCA, CAROTTES ET POIVRONS CONFITS, LINGUINES AUX ÉPICES.(43982)',\n  Decimal('161.16000')],\n ['Woluwe', 'VELOUTE CELERI RAVE 1L(19539)', Decimal('160.0000000')],\n ['Woluwe', 'MENU WINTERWONDERLAND(19434)', Decimal('159.45000')],\n ['Woluwe', 'None(53706)', Decimal('158.70000')],\n ['Woluwe',\n  'PUREE AUX CAROTTES / EPICES RAZ EL HANOUT(55792)',\n  Decimal('158.68050')],\n ['Woluwe', '(56140)', Decimal('157.28160')],\n ['Woluwe',\n  'RISOTTO AUX FEUILLES DE CITRONNIER 400G(19274)',\n  Decimal('155.1000000')],\n ['Woluwe', 'SUSHI PETIT(19459)', Decimal('154.5000000')],\n ['Woluwe',\n  'ZAKOUSKIS CARRES : (CROQUES / MINI PIZZAS / QUICHES)(19966)',\n  Decimal('152.64000')],\n ['Woluwe',\n  '2 - 12P FILET DE COLIN, COULIS DE BETTERAVE ROUGE, COURGETTES RÔTIES, RIZ SAUVAGE, AMANDES ET POIS CHICHES. (GF)(43990)',\n  Decimal('151.68000')],\n ['Woluwe', 'BOULETTE NATURE + ACC (prix/pers)(36742)', Decimal('151.68000')],\n ['Woluwe',\n  '4 - 14P VOL AU VENT CHIKKA, LÉGUMES PROVENÇAUX, RIZ BASMATI ET PERSILLADE. (V)(44006)',\n  Decimal('151.68000')],\n ['Woluwe',\n  'DINDE DE FERME FARCIE CRUE (PRIX/PERS.)(50238)',\n  Decimal('148.50000')],\n ['Woluwe',\n  '1 - 5P SCAMPIS, RISOTTO DE SARRASIN AUX CHAMPIGNONS DES BOIS, POTIRONS, OIGNONS ET HERBES VERTES(43934)',\n  Decimal('148.35000')],\n ['Woluwe',\n  '1 - 7P FILET DE SAUMON LAQUE, POIREAUX ET PETITS POIS À L’ÉCHALOTE, RIZ BASMATI AUX POIS CHICHES ET RAISINS(43941)',\n  Decimal('148.35000')],\n ['Woluwe',\n  'VERRINE APERO MIX (BTE - 4PCES) - HORS CAUTION(20011)',\n  Decimal('147.20000')],\n ['Woluwe', \"ROGAN JOSH D'AGNEAU(54385)\", Decimal('146.70720')],\n ['Woluwe', 'MERVEILLEUX AU CHOCOLAT 110G(51176)', Decimal('144.40000')],\n ['Woluwe',\n  'POTAGE CHOU FLEUR AU PERSIL PLAT 1 L(52789)',\n  Decimal('144.0000000')],\n ['Woluwe', 'TERRINE DE CANARD / FOIE GRAS(55584)', Decimal('143.75920')],\n ['Woluwe',\n  'DELUXE ULTIMATE PARTY (prix/ pers.)(52273)',\n  Decimal('143.00000')],\n ['Woluwe', 'RIZ CONDE AUX ABRICOTS 150G(19695)', Decimal('142.60000')],\n ['Woluwe',\n  '2 - 11P BOULETTE DE HACHÉ DE VOLAILLE, JUS DE CUISSON, SALSIFIS ET OIGNONS GRILLÉS, PURÉE DE CAROTTES RAS EL HANOUT(43989)',\n  Decimal('142.20000')],\n ['Woluwe',\n  'LES 3 COQUILLES ST JACQUES / SAUCE CRESSON / GROS CRESSON(44063)',\n  Decimal('141.90000')],\n ['Woluwe',\n  'FILET DE PINTADEAU / STRACCIATELLA / SAUCE CREME AUX CHAMPIGNONS DES BOIS / MARJOLAINE(56292)',\n  Decimal('141.70000')],\n ['Woluwe', 'CAUTION PLATEAU MELAMINE(19947)', Decimal('140.00000')],\n ['Woluwe', 'COQUELET ESTRAGON 2PCS(20180)', Decimal('139.20000')],\n ['Woluwe',\n  'ZAKOUSKIS VEGETARIENS : (FROMAGE BLEU / NOIX - MISO / CHICONS - CHEVRE / SESAME)(53147)',\n  Decimal('135.68000')],\n ['Woluwe', 'POMMES  JONAGOLD / AIRELLES(51871)', Decimal('135.23440')],\n ['Woluwe', 'TARTE NOIX DE PECAN 4PERS(20190)', Decimal('135.20000')],\n ['Woluwe', 'PLAT DU JOUR 8.90(19324)', Decimal('133.50000')],\n ['Woluwe',\n  '4 - 11P HAMBURGER DE POIS CHICHES ET DE QUINOA, CURRY DE LÉGUMES AUX ÉPINARDS, ORZO. (V)(43999)',\n  Decimal('132.72000')],\n ['Woluwe', 'COQUELET ESTRAGON 1PCE(20200)', Decimal('130.50000')],\n ['Woluwe', '5/7 FIVE A WEEK (2PERS)(38408)', Decimal('130.00000')],\n ['Woluwe', 'SALADE POULET SURIMI 150G(53500)', Decimal('129.85000')],\n ['Woluwe',\n  '2 - 2P FILET DE COQ AU VIN, FENOUIL ET POMMES GRILLES, POMMES DE TERRE AU ROMARIN(43984)',\n  Decimal('128.57000')],\n ['Woluwe', 'POTAGE TOM KHA KAI LEGUMES 1L(38591)', Decimal('128.0000000')],\n ['Woluwe',\n  'SUPREME DE POULET CUIT MISO/CACAHUETE/CITRON(54469)',\n  Decimal('127.12320')],\n ['Woluwe', 'TRE DI TRE 75CL(55946)', Decimal('126.50000')],\n ['Woluwe', 'PUREE LARDON ET PERSIL PLAT 400G(40556)', Decimal('126.40000')],\n ['Woluwe',\n  'TARTARE DE DAURADE / SESAME NOIR / WAKAME 400G(55884)',\n  Decimal('125.30000')],\n ['Woluwe', 'MERVEILLEUX SPECULOOS(54433)', Decimal('124.00000')],\n ['Woluwe',\n  '2 - 9P  BŒUF MASSAMAN, CAROTTES ET OIGNONS AU FOUR, RIZ BASMATI AUX HERBES. (GF)(43985)',\n  Decimal('123.24000')],\n ['Woluwe', 'SPAGHETTI VEGETARIEN 550G(19311)', Decimal('123.24000')],\n ['Woluwe',\n  '4 - 13P AUBERGINE AU CHEDDAR (PLANT BASED), FAÇON PARMIGIANA, POIS CHICHES GRILLÉS AUX ÉPICES, SEMOULE AUX HERBES. (V)(44001)',\n  Decimal('123.24000')],\n ['Woluwe', 'PLAT DU JOUR 14,90(19318)', Decimal('119.20000')],\n ['Woluwe', 'VENTE COMPTOIR(34212)', Decimal('119.0000')],\n ['Woluwe',\n  \"2 - 5P SCAMPIS ALL' ARRABBIATA, COURGETTES ET PETITS POIS, RADIATORI EN PERSILLADE AU CITRON(43991)\",\n  Decimal('118.68000')],\n ['Woluwe',\n  'GNOCCHI / CHAMPIGNONS DES BOIS / TARTUFATA ET CREME DE PARMESAN(56098)',\n  Decimal('118.67700')],\n ['Woluwe', 'PAVLOVA AUX FRUITS ROUGES EN VASE(19842)', Decimal('115.60000')],\n ['Woluwe', 'CAILLE FARCIE TOMATE OIGNON(38831)', Decimal('115.2000000')],\n ['Woluwe', 'FROMAGE BATONNET 150G(19743)', Decimal('115.2000')],\n ['Woluwe',\n  'TURDUCKEN (TURKEY, DUCK, CHICKEN) / FARCE TRUFFÉE / SAUCE LÉGÈREMENT CRÉMÉE(18898)',\n  Decimal('113.85000')],\n ['Woluwe',\n  '2 - 6P SUPRÊME DE POULET, SAUCE AU MISO ET CACAHUÈTES, CHICONS RÔTIS AU FOUR, POMMES DE TERRE AU GROS SEL ET ROMARIN(43978)',\n  Decimal('113.76000')],\n ['Woluwe',\n  '1 - 9P SCAMPIS, RISOTTO DE SARRASIN AUX CHAMPIGNONS, COURGETTES, OIGNONS ET HERBES VERTES. (GF)(43851)',\n  Decimal('113.76000')],\n ['Woluwe',\n  '4 - 8P FILET DE DAURADE, SAUCE AU VIN BLANC, CAROTTES ET PETITS POIS, PURÉE AUX PERSIL ET LARDONS. (GF)(43996)',\n  Decimal('113.76000')],\n ['Woluwe', 'SALADE POULET NATURE 150G(53501)', Decimal('111.30000')],\n ['Woluwe',\n  'ESCALOPE DE POULET  / STRACCIATELLA / ESTRAGON(54416)',\n  Decimal('110.65560')],\n ['Woluwe', 'CHILI SIN CARNE AUX LENTILLES(34078)', Decimal('110.2290000')],\n ['Woluwe',\n  'BLANQUETTE DE VEAU AUX OIGNONS GRELOTS(51450)',\n  Decimal('109.42920')],\n ['Woluwe',\n  \"2 - 1P FILET DE SAUMON, SAUCE MOUTARDE A L'ANCIENNE, CHICONS AUX NOIX ET OIGNONS, PURÉE DE CAROTTES RAZ EL HANOUT. (43983)\",\n  Decimal('108.79000')],\n ['Woluwe',\n  '1 - 13P BEIRUT CHICKPEA BALLS, SAUCE TOMATE AU FENOUIL, BLETTES AU CÉLERI, SARRASIN AUX HERBES(43956)',\n  Decimal('108.79000')],\n ['Woluwe', '(52841)', Decimal('106.95580')],\n ['Woluwe', 'CHIPS LEGUMES 100G(18889)', Decimal('106.70000')],\n ['Woluwe',\n  'NOUILLES SAUTEES/ LEGUMES CROQUANTS / SOJA /SCAMPIS(52793)',\n  Decimal('106.68800')],\n ['Woluwe', 'PAVLOVA FRUITS ROUGES (40975)', Decimal('105.0000000')],\n ['Woluwe', 'BUTTER CHICKEN(55574)', Decimal('104.53020')],\n ['Woluwe',\n  '2 - 5P FILET DE DAURADE AUX GRAINES DE MOUTARDE, SAUCE À L’ESTRAGON, ÉPINARDS ET CHAMPIGNONS DE PARIS SAUTÉS À L’ÉCHALOTE, PURÉE AUX POIREAUX. (GF)(43976)',\n  Decimal('104.28000')],\n ['Woluwe',\n  '1 - 1P FILET DE DAURADE EN CROÛTE D’HERBES, SAUCE AUX ÉPINARDS, CÉLERI-RAVE, PETITS POIS ET OIGNONS GRILLÉS, POMMES DE TERRE GRENAILLE AU GROS SEL ET ROMARIN.(43843)',\n  Decimal('104.28000')],\n ['Woluwe',\n  '1 - 4P PAIN DE VIANDE (100%HACHÉ DE VOLAILLE), SAUCE BRUNE À LA MOUTARDE, BLETTES GRILLÉES À L’AIL, QUARTIERS DE POMMES DE TERRE AU PERSIL PLAT(43846)',\n  Decimal('104.28000')],\n ['Woluwe',\n  'SPAGHETTI A LA SAUCE BOLOGNAISE VEGAN 550G(56447)',\n  Decimal('104.28000')],\n ['Woluwe',\n  '2 - 4P TAJINE DE POULARDE AU CITRON, COURGETTES, CORIANDRE ET RAISINS, SEMOULE AUX HERBES VERTES(43975)',\n  Decimal('104.28000')],\n ['Woluwe',\n  '2 - 10P  STEAK DE CÉLERI-RAVE ET POIS CHICHES GRILLÉS, OIGNONS, SIROP D’ÉRABLE, THYM, RICOTTA ET NOIX. (GF)(V)(43987)',\n  Decimal('104.28000')],\n ['Woluwe', 'BROCOLI AUX NOIX(49420)', Decimal('104.01300')],\n ['Woluwe',\n  'VELOUTE DE CHOU-FLEUR DU BARRY (1L)(38567)',\n  Decimal('104.0000000')],\n ['Woluwe', 'POTAGE THAI CITRONNELLE 1L(37731)', Decimal('104.0000000')],\n ['Woluwe', 'BOEUF STROGANOFF(56179)', Decimal('102.47940')],\n ['Woluwe', 'COCKTAIL 4 PCS FINGERFOOD(53067)', Decimal('102.00000')],\n ['Woluwe', 'LEGUMES FARCIS(40761)', Decimal('101.7020000')],\n ['Woluwe',\n  'PAIN BUFFET CAMPAGNE (POCHON) 1,1KG(51407)',\n  Decimal('101.20000')],\n ['Woluwe', 'TIRAMISU MARRONS 110G(40742)', Decimal('99.20000')],\n ['Woluwe', 'DIPS GUACAMOLE 250G(53649)', Decimal('97.56000')],\n ['Woluwe', 'TAJINE AGNEAU + ACC(36595)', Decimal('94.80000')],\n ['Woluwe', 'CROQUETTE CREVETTE (2 PIECES)(19968)', Decimal('94.8000000')],\n ['Woluwe',\n  '1 - 8P FILET DE SAUMON, MOUSSELINE AUX C PRES, ÉPINARDS, PETITS POIS ET OIGNONS AU GINGEMBRE, POMMES DE TERRE EN PERSILLADE. (GF)(43850)',\n  Decimal('94.80000')],\n ['Woluwe',\n  'SCAMPIS SAUCE VIN BLANC JARDINIERE ET PUREE(19331)',\n  Decimal('94.80000')],\n ['Woluwe',\n  'DEMI FAISAN SAUVAGE / SAUCE LÉGÈREMENT CRÉMÉE AUX CHICONS (Gluten Free)(34790)',\n  Decimal('94.50000')],\n ['Woluwe', \"NAVARIN D'AGNEAU(51380)\", Decimal('93.42720')],\n ['Woluwe', 'HOMEMADE PATE 350G(56228)', Decimal('93.10000')],\n ['Woluwe',\n  'POIS CHICHES GRILLES AU RIZ NOIR / MISO / GRAINE DE SESAME(56139)',\n  Decimal('92.96280')],\n ['Woluwe', 'RIZ AU LAIT SPECULOOS 150G(40741)', Decimal('92.80000')],\n ['Woluwe', 'RIZ CONDE ABRICOT 400G(19696)', Decimal('90.00000')],\n ['Woluwe', 'RIZ AU LAIT NATURE 450G(19796)', Decimal('89.70000')],\n ['Woluwe', 'SANDWICH CESAR GD (POULET)(20055)', Decimal('89.10000')],\n ['Woluwe',\n  'RISOTTO DE SARRASIN CHAMPIGNONS DE SAISON 400G(54409)',\n  Decimal('88.40000')],\n ['Woluwe',\n  \"FILET DE SAUMON EN CROUTE D'HERBES, SAUCE MOUSSELINE, PUREE AUX POIREAUX, CHICONS CONFITS 2PERS(56349)\",\n  Decimal('88.40000')],\n ['Woluwe', 'CHATEAU LA MARZELLE 75CL(55947)', Decimal('88.40000')],\n ['Woluwe',\n  'TACCHINO / SALSA TONNATA / ANCHOIS / CAPRES(51977)',\n  Decimal('88.20000')],\n ['Woluwe', 'POTAGE AU FENOUIL ET TOMATES 1L(38298)', Decimal('88.0000000')],\n ['Woluwe',\n  'FILET DE BICHE / SAUCE GRAND VENEUR LÉGÈREMENT CRÉMÉE / AIRELLES(53164)',\n  Decimal('87.60000')],\n ['Woluwe', 'BOULETTES SAUCE TOMATE(51551)', Decimal('87.5689800')],\n ['Woluwe', 'CROQUETTE FROMAGE (2 PIECES)(19970)', Decimal('85.8800000')],\n ['Woluwe',\n  '4 - 7P LASAGNA VERDE, RICOTTA ÉPINARDS, COURGETTES ET OIGNONS AU FOUR. (V)(43995)',\n  Decimal('85.32000')],\n ['Woluwe',\n  '2 - 2P FILET DE DINDE« SLOW COOKED », JUS BRUN, POTIRON, AIRELLES ET OIGNONS CARAMÉLISÉS, SARRASIN AU CITRON ET PERSIL PLAT.(43972)',\n  Decimal('85.32000')],\n ['Woluwe',\n  '2 - 14P MOUSSAKA (100% HACHÉ DE VOLAILLE, AUBERGINES, TOMATES,..)(43994)',\n  Decimal('85.32000')],\n ['Woluwe',\n  '4 LAITS - 4 NOIRS MINIS MELOCAKES ARTISANAL(56017)',\n  Decimal('85.00000')],\n ['Woluwe',\n  '4 BLANCS - 4 LAITS  MINIS MELOCAKES ARTISANAL(56016)',\n  Decimal('85.00000')],\n ['Woluwe', 'DINDE FILET CUIT FARCI(18246)', Decimal('84.5928600')],\n ['Woluwe', 'SABLE POIRE CREME AMANDE 4PERS(19718)', Decimal('84.50000')],\n ['Woluwe',\n  'TARTE ABRICOTS ROTIS A LA CREME DE NOISETTE 4PERS(55483)',\n  Decimal('84.50000')],\n ['Woluwe', 'SOUFFLE AU POIVRE NOIR 100G(20256)', Decimal('83.75000')],\n ['Woluwe',\n  'BLANQUETTE DE VEAU AUX OIGNONS GRELOTS(51448)',\n  Decimal('83.06720')],\n ['Woluwe',\n  'PAELLA VEGAN AUX LEGUMES DE SAISON(18767)',\n  Decimal('82.6098000')],\n ['Woluwe', 'ASPERGES VERTES CUITES(51360)', Decimal('81.9072000')],\n ['Woluwe', 'MACARONS 12PCS(19910)', Decimal('81.0000')],\n ['Woluwe', 'POMMES  JONAGOLD / AIRELLES(51870)', Decimal('80.24660')],\n ['Woluwe',\n  'ACC 2 : PUREE  DE POMMES DE TERRE HUILE DE TRUFFE ET CHAMPIGNONS DES BOIS(18849)',\n  Decimal('80.10000')],\n ['Woluwe',\n  'VELOUTE TOMATES ET MINI BOULETTES 1/2L(40509)',\n  Decimal('80.0000000')],\n ['Woluwe', 'POTAGE THAI POULET 1/2L(19580)', Decimal('80.0000')],\n ['Woluwe', 'MERVEILLEUX AU LEMON CURD(51177)', Decimal('79.80000')],\n ['Woluwe', 'PUREE BASILIC(55789)', Decimal('79.76800')],\n ['Woluwe', 'CARRE VITELLO TONATO(54368)', Decimal('79.20000')],\n ['Woluwe',\n  '1 - 4P MIJOTÉ DE POULARDE AUX CHAMPIGNONS, CAROTTES ET CÉLERI-RAVE GRILLÉS, PURÉE AUX OIGNONS(43933)',\n  Decimal('79.12000')],\n ['Woluwe',\n  '1 - 3P SPAGHETTI DELLO SPORT (100% HACHÉ DE VOLAILLE, CAROTTES, CÉLERI, OIGNONS,..)(43931)',\n  Decimal('79.12000')],\n ['Woluwe', 'VINAIGRETTE CIBOULETTE 250ML(34737)', Decimal('79.00000')],\n ['Woluwe', 'FOIE GRAS OIE MI CUIT(18711)', Decimal('78.96000')],\n ['Woluwe',\n  'FILET DINDE FARCI (HACHE 100% VOLAILLE) / CHAMPIGNONS DES BOIS(51806)',\n  Decimal('77.35680')],\n ['Woluwe', 'CAVA M&M MILLESIME 75CL(55950)', Decimal('76.80000')],\n ['Woluwe',\n  'TERRINE CAILLEBOTTE CHEVRE / PISTOU (Tranche)(54505)',\n  Decimal('76.50000')],\n ['Woluwe', 'COCA ZERO 50CL PET(52487)', Decimal('76.50000')],\n ['Woluwe', 'TARAMA DE TRUITE 90g(52926)', Decimal('76.45000')],\n ['Woluwe',\n  'DEMI FAISAN + SAUCE (1 PERS.) COMPTOIR(55587)',\n  Decimal('75.60000')],\n ['Woluwe', 'NOEL : 1 SAPIN CHOCOLAT(38345)', Decimal('75.40000')],\n ['Woluwe',\n  'TAJINE AGNEAU / LEGUMES DE SAISON / ABRICOTS(51377)',\n  Decimal('74.53440')],\n ['Woluwe', 'CAP GRIS GRENACHE 75CL(50785)', Decimal('73.75000')],\n ['Woluwe',\n  'MELOCAKES ARTISANAL AU CHOCOLAT NOIR (49406)',\n  Decimal('73.5000000')],\n ['Woluwe', 'NEW YORK CHEESE LIGHT 145G(19851)', Decimal('72.5000000')],\n ['Woluwe', 'POPCAKE SACHET 2PCS(20284)', Decimal('72.20000')],\n ['Woluwe', 'BLINIS 16PCS 135g(37530)', Decimal('72.00000')],\n ['Woluwe', 'RAVIOLI GORGONZOLA NOIX(40780)', Decimal('70.41060')],\n ['Woluwe', 'POULET PILONS CUITS(18195)', Decimal('70.37826')],\n ['Woluwe', 'SOUFFLE AU GROS SEL 100G(20257)', Decimal('70.35000')],\n ['Woluwe', 'CHICON AU GRATIN(53081)', Decimal('70.33660')],\n ['Woluwe', 'COQUELET LAQUE (2PCS)(40467)', Decimal('69.60000')],\n ['Woluwe', 'TARAMA A LA TRUFFE 90G(52924)', Decimal('69.50000')],\n ['Woluwe', 'NOEL : LES 3 BOULES CHOCOLAT(38219)', Decimal('69.30000')],\n ['Woluwe',\n  '1 - 2P CHOU FARCI, JEUNES CAROTTES AU CÉLERI ET ÉCHALOTES, SEMOULE DE BLE AUX HERBES(43929)',\n  Decimal('69.23000')],\n ['Woluwe',\n  'SEMOULE DE BLE AMANDES ET FRUITS SECS 400G(40764)',\n  Decimal('69.20000')],\n ['Woluwe', 'BUITENVERWACHTING 75CL(50779)', Decimal('68.95000')],\n ['Woluwe', 'POULET FILET KATSU(55567)', Decimal('68.87340')],\n ['Woluwe', 'NOUILLE SAUTEE LEGUME CROQUANT(52446)', Decimal('68.4880200')],\n ['Woluwe', 'MICHEL LYNCH BLANC 75CL(50782)', Decimal('67.75000')],\n ['Woluwe',\n  'SALADE FREGOLA PANAIS CAROTTE AIRELLE(56142)',\n  Decimal('67.61720')],\n ['Woluwe',\n  'SABLE MANGUE ET FRUIT DE LA PASSION 4PERS(56154)',\n  Decimal('67.60000')],\n ['Woluwe', 'TARTE FROMAGE SPECULOOS 4PERS(19706)', Decimal('67.60000')],\n ['Woluwe', 'None(53051)', Decimal('67.60000')],\n ['Woluwe',\n  '4 - 9P ESCALOPE DE DINDE, EMMENTAL, LARD ET PARMESAN, CHAMPIGNONS DE PARIS SAUTÉS, BELLES DE FONTENAY AU GROS SEL ET ROMARIN. (GF)(43997)',\n  Decimal('66.36000')],\n ['Woluwe', 'CAVA MVSA 20CL(53606)', Decimal('66.30000')],\n ['Woluwe',\n  'MELOCAKES ARTISANAL AU CHOCOLAT LAIT(49405)',\n  Decimal('66.1500000')],\n ['Woluwe',\n  'CHAPON DESOSSE FARCI CRU (PRIX/PERS.)(53172)',\n  Decimal('65.40000')],\n ['Woluwe',\n  'BLANQUETTE DE VEAU AUX OIGNONS GRELOTS(51451)',\n  Decimal('65.15180')],\n ['Woluwe',\n  'TAJINE DE POULARDE / CITRON / CORIANDRE / RAISINS(51436)',\n  Decimal('64.34160')],\n ['Woluwe', 'POTAGE TOM KHA KAI POULET 1/2L(40850)', Decimal('64.0000000')],\n ['Woluwe',\n  'BOULETTE VOLAILLE SAUCE TOMATE, LEGUMES PROVENCAUX ET PUREE NATURE (40816)',\n  Decimal('64.0000000')],\n ['Woluwe', 'COULIS FRUITS ROUGES 250ML(19801)', Decimal('63.7000')],\n ['Woluwe', 'PAIN MUESLI TRADITION 280G(51411)', Decimal('63.65000')],\n ['Woluwe', 'VOL-AU-VENT(55485)', Decimal('63.60180')],\n ['Woluwe', 'CAILLE DESOSSEE CUITE FOIE GRAS(34621)', Decimal('63.50000')],\n ['Woluwe', 'FINANCIER 250G(55755)', Decimal('63.20000')],\n ['Woluwe',\n  'DEMI HOMARD \"BELLEVUE\" / SAUCE TARTARE AUX HERBES / SALADE VERTE(50614)',\n  Decimal('63.20000')],\n ['Woluwe', 'FINANCIER 250G(55545)', Decimal('63.20000')],\n ['Woluwe', 'POTAGE TOM KHA KOONG SCAMPIS 1/2L(39082)', Decimal('63.0000000')],\n ['Woluwe', 'HOMEMADE PATE 350G(56226)', Decimal('62.79000')],\n ['Woluwe', 'RIZ AU LAIT 150G(19795)', Decimal('62.7000000')],\n ['Woluwe', 'TIRAMISU SPECULOOS 400G(19781)', Decimal('62.50000')],\n ['Woluwe', 'PAVLOVA POIRES ET SPECULOOS JETABLE(51861)', Decimal('61.20000')],\n ['Woluwe',\n  \"CHIA / LAIT DE COCO / COMPOTE DE FRUITD D'AUTOMNE(51809)\",\n  Decimal('60.80000')],\n ['Woluwe',\n  'CIVET DE MARCASSIN CUIT / SAUCE POIVRE VERT DE MADAGASCAR 300G -  (1 PERS.)(50099)',\n  Decimal('60.69000')],\n ['Woluwe', 'CUPCAKE A LA PIECE(20468)', Decimal('60.00000')],\n ['Woluwe', 'MOUSSE CHOCOLAT EN VASE(53166)', Decimal('60.0000000')],\n ['Woluwe',\n  'DUO DE RAVIOLE OUVERTE DE GAMBAS / LAIT DE COCO / DUXELLES DE PETITS LEGUMES(34985)',\n  Decimal('59.60000')],\n ['Woluwe', '8 NOIRS MINIS MELOCAKES ARTISANAL(55939)', Decimal('59.50000')],\n ['Woluwe',\n  '4 BLANCS - 4 NOIRS MINIS MELOCAKES ARTISANAL(56015)',\n  Decimal('59.50000')],\n ['Woluwe', 'PLAT DU JOUR 11.9(19321)', Decimal('59.50000')],\n ['Woluwe',\n  '2 - 3P CHOUCROUTE GARNIE (KÄSSLER, FRANKFURTER, KIELBASSA), POMMES DE TERRE.(43986)',\n  Decimal('59.34000')],\n ['Woluwe',\n  'CAILLE FARCIE AU FOIE GRAS + SAUCE (2PCS)(55446)',\n  Decimal('58.80000')],\n ['Woluwe',\n  '1 - 6P HAUT DE CUISSE DE POULET DÉSOSSÉE, SAUCE BRUNE AU MISO, CÉLERI-RAVE ET POTIRON GRILLÉ AUX OIGNONS, PURÉE AUX CAROTTES RAS EL HANOUT.(43848)',\n  Decimal('56.88000')],\n ['Woluwe',\n  '1 - 2P KORMA DE LÉGUMES DE SAISON AUX NOIX DE CAJOU, COUSCOUS AUX HERBES VERTES (V)(43844)',\n  Decimal('56.88000')],\n ['Woluwe',\n  '1 - 7P CHICONS AU GRATIN, POMMES DE TERRE NATURE. (GF)(43849)',\n  Decimal('56.88000')],\n ['Woluwe', 'NOEL : 1 SAPIN + 1 BOULE CHOCOLAT(38355)', Decimal('56.50000')],\n ['Woluwe', 'None(51409)', Decimal('56.26000')],\n ['Woluwe',\n  '1 - 4E POTAGE DE COURGETTES ET DE CRESSON. (GF)(V)(43832)',\n  Decimal('56.00000')],\n ['Woluwe',\n  '1 - 12E POTAGE DE POIREAUX À LA NOIX DE MUSCADE. (GF)(V)(43840)',\n  Decimal('56.00000')],\n ['Woluwe', 'CARRE TACCHINO TONATO AUX HERBES(54366)', Decimal('55.30000')],\n ['Woluwe', 'BONBON OURS ACIDULE BOUTEILLE 370G(36762)', Decimal('55.20000')],\n ['Woluwe', 'VINAIGRETTE CIBOULETTE 500ML(35032)', Decimal('54.6000')],\n ['Woluwe',\n  'CREVETTES GEANTES / ECHALOTES / AIL(50608)',\n  Decimal('53.9440000')],\n ['Woluwe',\n  'CIVET DE MARCASSIN / SAUCE AU POIVRE VERT DE MADAGASCAR (50619)',\n  Decimal('53.00260')],\n ['Woluwe', 'POULET FERME CUIT(18146)', Decimal('52.73520')],\n ['Woluwe',\n  'PAVLOVA AUX FRUITS ROUGES EN VERRE  (+ caution)(20519)',\n  Decimal('52.50000')],\n ['Woluwe',\n  'CIVET DE MARCASSIN CUIT / SAUCE POIVRE VERT DE MADAGASCAR 600G -  (2 PERS.)(50098)',\n  Decimal('52.02000')],\n ['Woluwe', 'None(52881)', Decimal('52.0000000')],\n ['Woluwe',\n  '1 - 1E SALADE DE CÉLERI-RAVE, CHOU BLANC, CAROTTES, SÉSAME NOIR ET PIMENTS. (GF)(V)(43829)',\n  Decimal('51.80000')],\n ['Woluwe', 'BIMI GOMAE(56130)', Decimal('51.57360')],\n ['Woluwe', '8 LAITS MINIS MELOCAKES ARTISANAL(55940)', Decimal('51.00000')],\n ['Woluwe',\n  '2 GAMBAS GRILLÉES / BOULGOUR AUX HERBES / SAUCE AU LAIT DE COCO ET AU CITRON / CHIMICHURRI(34769)',\n  Decimal('51.00000')],\n ['Woluwe',\n  'TARTE CROUTE VANILLE ET CARAMEL 4PERS(38449)',\n  Decimal('50.70000')],\n ['Woluwe', 'TARTE MISERABLE CITRON 4PERS(49896)', Decimal('50.70000')],\n ['Woluwe', 'FEUILLETE POUR BOUCHEE A LA REINE(55743)', Decimal('50.70000')],\n ['Woluwe', 'ABELARD HELOISE 75CL(50800)', Decimal('50.00000')],\n ['Woluwe', 'LINGUINE SCAMPIS HERBES VERTES(51613)', Decimal('49.84560')],\n ['Woluwe', 'BATONNET POULET CAJUN CUIT(51559)', Decimal('49.55080')],\n ['Woluwe',\n  '1 - 6P GIGUE DE COCHON DE LAIT, JUS BRUN, CHOUX DE BRUXELLES AUX LARDONS, POMMES DE TERRE AU THYM(43936)',\n  Decimal('49.45000')],\n ['Woluwe',\n  'SALADE THAI AUX SCAMPIS / CAROTTES / SOJA / POIVRONS(52977)',\n  Decimal('49.28000')],\n ['Woluwe',\n  'BONBON SOURIS S/SUCRE BOUTEILLE 500G(36764)',\n  Decimal('48.30000')],\n ['Woluwe',\n  '4 - 4E VELOUTÉ DE CAROTTES AU LAIT DE COCO. (GF)(V)(43965)',\n  Decimal('48.00000')],\n ['Woluwe',\n  '2 - 6E  POTAGE TOMATE, FENOUIL ET LAIT DE COCO. (GF)(V)(43954)',\n  Decimal('48.00000')],\n ['Woluwe', 'BOUILLON THAI TOMATE 1L(51191)', Decimal('48.00000')],\n ['Woluwe',\n  'NAVARIN AGNEAU HARICOTS VERTS ET PDT(40815)',\n  Decimal('48.0000000')],\n ['Woluwe', 'CHICKEN SOUP FOR THE SOUL 1L(38659)', Decimal('48.0000000')],\n ['Woluwe',\n  'SUPREME DE POULET CUIT PERSILLADE CITRON(54471)',\n  Decimal('47.98080')],\n ['Woluwe', 'LASAGNE VEGE(50588)', Decimal('47.4708000')],\n ['Woluwe', 'MENU CHRISTMAS AT SEA(50050)', Decimal('47.40000')],\n ['Woluwe', 'BOULETTE KEFTA RATA SEMOULE(19299)', Decimal('47.40000')],\n ['Woluwe', 'ACC 2 : 600G PUREE(55453)', Decimal('47.40000')],\n ['Woluwe', 'ACC 1 : 3 POMMES AIRELLES(55421)', Decimal('46.80000')],\n ['Woluwe',\n  \"DUO DE FOIE GRAS D'OIE / POIVRE CONCASSE / FRUITS DE SAISON (FIGUES - ABRICOTS - RAISINS)(53163)\",\n  Decimal('45.80000')],\n ['Woluwe', 'WATERZOOI DE POULET(51341)', Decimal('45.02400')],\n ['Woluwe',\n  'CROQUETTES POMME DE TERRE FRAICHES 10 PCS(36705)',\n  Decimal('45.0000000')],\n ['Woluwe', 'JUS DE FRUITS FRAIS 250 ML(55928)', Decimal('44.80000')],\n ['Woluwe', 'JUS DE FRUITS FRAIS 250 ML(55927)', Decimal('44.80000')],\n ['Woluwe', 'TERRINE DE LAPIN AUX NOIX(56223)', Decimal('44.5648000')],\n ['Woluwe',\n  'MELOCAKES ARTISANAL AU CHOCOLAT BLANC(56019)',\n  Decimal('44.10000')],\n ['Woluwe', 'MARCASSIN FILET CUIT(18242)', Decimal('43.8480')],\n ['Woluwe', 'DIPS HOUMOUS (200g)(36779)', Decimal('43.40000')],\n ['Woluwe', 'PAIN RUSTIQUE 450G(51410)', Decimal('43.40000')],\n ['Woluwe', 'None(53720)', Decimal('42.0000000')],\n ['Woluwe',\n  'PAVLOVA AUX POIRES ET SPECULOOS EN VERRE (+ caution)(53142)',\n  Decimal('42.00000')],\n ['Woluwe', 'MINI KEFTA(51348)', Decimal('41.8132000')],\n ['Woluwe', 'MENU JINGLE BELLS(34822)', Decimal('41.50000')],\n ['Woluwe',\n  '3 - 9E SALADE DE QUINOA AUX POIS CHICHES, HARICOTS ROUGES ET ADZUKI, PERSIL PLAT.(43945)',\n  Decimal('40.70000')],\n ['Woluwe', 'CREME BRULEE NATURE 130G(19861)', Decimal('40.60000')],\n ['Woluwe',\n  'VELOUTE DE PATATES DOUCES AU LAIT DE COCO 1/2L(54513)',\n  Decimal('40.50000')],\n ['Woluwe',\n  'CIVET DE BICHE / CHAMPIGNONS DES BOIS / MOUTARDE TIERENTEYN(50617)',\n  Decimal('40.38200')],\n ['Woluwe',\n  '3 - 14E VELOUTÉ DE CHAMPIGNONS. (GF)(V)(44008)',\n  Decimal('40.00000')],\n ['Woluwe', 'WATERZOOI DE POULET(51343)', Decimal('39.98560')],\n ['Woluwe', 'HOMEMADE PATE 350G(56227)', Decimal('39.90000')],\n ['Woluwe', '(51058)', Decimal('39.5000000')],\n ['Woluwe',\n  'OSSO BUCO, LINGUINI AUX TOMATES ET ROQUETTE (40819)',\n  Decimal('39.5000000')],\n ['Woluwe', 'SAUCE BOLOGNAISE(55514)', Decimal('38.68800')],\n ['Woluwe',\n  '1/2 POULET, COMPOTE DE POMMES ET PUREE NATURE(40820)',\n  Decimal('38.4000000')],\n ['Woluwe', 'DIPS : TARTARE AUX CAPRES (250g)(53778)', Decimal('37.94000')],\n ['Woluwe',\n  '4 - 10P POULET MADRAS (MEDIUM HOT), COURGETTES ET PETITS POIS À L’ÉCHALOTE AU FOUR, RIZ BASMATI. (GF)(43998)',\n  Decimal('37.92000')],\n ['Woluwe', 'COURGETTE + RATATOUILLE + SEM(19246)', Decimal('37.92000')],\n ['Woluwe',\n  '2 - 3P CHOUCROUTE GARNIE (KÄSSLER, FRANKFURTER,KIELBASSA), POMMES DE TERRE(43974)',\n  Decimal('37.92000')],\n ['Woluwe', 'PLAT DU JOUR 18,90(54459)', Decimal('37.80000')],\n ['Woluwe', 'FILET PINTADEAU SLOW COOKED(53829)', Decimal('37.09440')],\n ['Woluwe',\n  'SAUMON MI CUIT, SAUCE VIN BLANC, JARDINIERE DE LEGUMES ET PUREE BASILIC (40818)',\n  Decimal('37.0000000')],\n ['Woluwe',\n  '3 - 11E SALADE DE LENTILLES NOIRES, EDAMAME, FETA ET GRAINES GRILLÉES. (V)(43950)',\n  Decimal('37.00000')],\n ['Woluwe',\n  '4 - 7E SALADE DE LENTILLES VERTES DU PUY ET DUXELLES DE LÉGUMES. (GF)(V)(43973)',\n  Decimal('37.00000')],\n ['Woluwe',\n  'LIVRAISON BXL COMMANDE INFERIEURE 100 EUROS(19486)',\n  Decimal('36.30000')],\n ['Woluwe',\n  'BARRIERE FRERES - CHATEAU TRUQUET 75 CL(40476)',\n  Decimal('36.10000')],\n ['Woluwe', 'POULET CUISSE CAJUN(51446)', Decimal('36.09224')],\n ['Woluwe',\n  'POTAGE AUX POIREAUX ET NOIX DE MUSCADE 1/2L(50724)',\n  Decimal('36.0000000')],\n ['Woluwe',\n  '1 - 2E VELOUTÉ DE POIVRONS DOUX. (GF)(V)(43830)',\n  Decimal('36.00000')],\n ['Woluwe',\n  'FILET DE DINDE FARCI AU FRUIT HIVER CUIT (2 PERS.)(55450)',\n  Decimal('36.00000')],\n ['Woluwe',\n  '1 - 8E POTAGE DE CHOU FLEUR AU CURRY DOUX. (GF)(V)(43836)',\n  Decimal('36.00000')],\n ['Woluwe', 'SALADE TREVISE / CHICON(51415)', Decimal('35.67480')],\n ['Woluwe', 'ACC 2 : 600G CHAMPIGNONS DES BOIS(55454)', Decimal('35.55000')],\n ['Woluwe', 'PAIN VIANDE TRUFFE(51726)', Decimal('35.07840')],\n ['Woluwe',\n  'COURGETTES FARCIES / COULIS DE TOMATES(51393)',\n  Decimal('34.54920')],\n ['Woluwe', 'CANARD LAQUE(18305)', Decimal('33.63840')],\n ['Woluwe',\n  'NOBLE LATE HARVEST NEDERBURG 37,5 CL(56162)',\n  Decimal('33.50000')],\n ['Woluwe',\n  '2 - 9E SALADE VERTE PROTÉINÉE (LENTILLES, COURGETTE, EDAMAME,…)(43960)',\n  Decimal('33.30000')],\n ['Woluwe',\n  '1 - 5E SALADE DE CHOU FLEUR GRILLÉ, RAISINS, NOIX ET PERSIL PLAT. (GF)(V)(43833)',\n  Decimal('33.30000')],\n ['Woluwe', 'GIGUE DE COCHON DE LAIT (DESOSSE)(51518)', Decimal('32.91780')],\n ['Woluwe', 'COQUELET FARCI CUIT COMPTOIR(38840)', Decimal('32.40000')],\n ['Woluwe',\n  'PUREE DE POMMES DE TERRE / CELERI-RAVE(55795)',\n  Decimal('32.30200')],\n ['Woluwe', 'VELOUTE POTIRON AU LAIT DE COCO 1L(44066)', Decimal('32.00000')],\n ['Woluwe', 'POTAGE FENOUIL ET AZUKI 1L(56075)', Decimal('32.00000')],\n ['Woluwe', 'BOUILLON AU MISO ET ENOKI 1L(52787)', Decimal('32.0000000')],\n ['Woluwe', 'CHAMPIGNONS DES BOIS SAUTES(51533)', Decimal('31.96000')],\n ['Woluwe', 'COFFRET FONTEYNE(56282)', Decimal('31.95000')],\n ['Woluwe', 'DEMI HOMARD CHAUD ET SA GARNITURE(53429)', Decimal('31.60000')],\n ['Woluwe', 'FINANCIER 250G(55546)', Decimal('31.60000')],\n ['Woluwe', 'FINANCIER 250G(55891)', Decimal('31.60000')],\n ['Woluwe', 'DEMI HOMARD COMPTOIR(55580)', Decimal('31.60000')],\n ['Woluwe', 'FINANCIER 250G(56166)', Decimal('31.60000')],\n ['Woluwe', 'VINAIGRETTE YOGHURT 250ML(18974)', Decimal('31.60000')],\n ['Woluwe', 'FINANCIER 250G(55687)', Decimal('31.60000')],\n ['Woluwe', 'CHIPS SHIITAKE 75G(43743)', Decimal('31.2500000')],\n ['Woluwe', 'LINGUINI CHAMPIGNONS DES BOIS(39109)', Decimal('30.87360')],\n ['Woluwe', 'ULTIMATE PARTY CLASSIC PRIX/PERS.(52272)', Decimal('30.00000')],\n ['Woluwe',\n  'CIVET DE BICHE CUIT / CHAMPIGNONS DES BOIS / MOUTARDE TIERENTEYN 300G - (1 PERS.)(50097)',\n  Decimal('29.79000')],\n ['Woluwe', 'ESCALOPE PANEE COMPTOIR(55944)', Decimal('29.68940')],\n ['Woluwe',\n  '2 - 4P SAUCISSE DE VOLAILLE, JUS BRUN À LA MOUTARDE, POIRES AUX NOIX ET AU THYM, PURÉE DE CÉLERI-RAVE. (43988)',\n  Decimal('29.67000')],\n ['Woluwe',\n  '4 - 11E SALADE VERTE PROTÉINÉE (LENTILLES, COURGETTE, EDAMAME, POIS CHICHES)(44003)',\n  Decimal('29.60000')],\n ['Woluwe', 'BLANC DE POIREAUX / TAHINI(55642)', Decimal('29.55540')],\n ['Woluwe', 'SAUCE VEGAN 500G(56448)', Decimal('29.25000')],\n ['Woluwe',\n  'LEMONGRASS / RAISINS / CORIANDRE / CITRONNELLE(51459)',\n  Decimal('28.95480')],\n ['Woluwe',\n  '1 - 13P ROGAN JOSH D’AGNEAU, DUXELLES DE LÉGUMES, ORZO ET PERSILLADE PIQUANTE(43855)',\n  Decimal('28.44000')],\n ['Woluwe',\n  '1 - 11P LINGUINE AUX CHAMPIGNONS DES BOIS, SALSA TARTUFATA, PARMESAN. (V)(43853)',\n  Decimal('28.44000')],\n ['Woluwe',\n  '1 - 5P BEIRUT CHICKPEA BALLS, SAUCE AU CURRY VERT, B TONNETS DE COURGETTES À  L’ÉCHALOTE, RIZ BASMATI AUX ÉPICES(43847)',\n  Decimal('28.44000')],\n ['Woluwe', 'MIJOTE AGNEAU + RIZ(53759)', Decimal('28.44000')],\n ['Woluwe', 'COOKIES CHOCOLAT BLANC CAJOU 4PCS(18972)', Decimal('28.40000')],\n ['Woluwe',\n  '2 - 2E POTAGE DE CAROTTES AU LAIT DE COCO. (GF)(V)(43943)',\n  Decimal('28.00000')],\n ['Woluwe',\n  '3 - 6E POTAGE DE POIREAUX ET NOIX DE MUSCADE. (GF)(V)(43937)',\n  Decimal('28.00000')],\n ['Woluwe',\n  '4 - 14E VELOUTÉ DE POIVRONS JAUNES ET BASILIC. (GF)(V)(44007)',\n  Decimal('28.00000')],\n ['Woluwe', 'BONBON MELI MELO 480G(36754)', Decimal('27.60000')],\n ['Woluwe', 'BONBON SOURIS NOIRES BOUTEILLE 430G(36758)', Decimal('27.60000')],\n ['Woluwe', 'BONBON OURS S/SUCRE BOUTEILLE 380G(36765)', Decimal('27.60000')],\n ['Woluwe',\n  'DES DE POULET / LAIT DE COCO / SAUCE CURRY VERT(51498)',\n  Decimal('27.53940')],\n ['Woluwe', 'MONT BLANC JETABLE(51591)', Decimal('27.20000')],\n ['Woluwe',\n  'BLINIS 12PCS / ELBOT ET CREME DE RAIFORT(19594)',\n  Decimal('27.2000000')],\n ['Woluwe', 'AUBERGINES FARCIES A LA LIBANAISE(55575)', Decimal('27.10260')],\n ['Woluwe', 'DIPS TZATZIKI 250G(40314)', Decimal('27.10000')],\n ['Woluwe', 'DIPS CREMA TONNATA 250G(54393)', Decimal('27.10000')],\n ['Woluwe', 'FILET DE POULET SLOW COOKED(51478)', Decimal('26.97420')],\n ['Woluwe', 'SALADE THAI POULET 400G(19110)', Decimal('26.9400000')],\n ['Woluwe', 'LEGUMES / SALADES 21,7 EURO/KG(54420)', Decimal('26.51740')],\n ['Woluwe',\n  'TERRINE DE FAISAN / CHAMPIGNONS DES BOIS(34759)',\n  Decimal('26.40000')],\n ['Woluwe', 'GRANOLA DE SAISON 340G(55693)', Decimal('26.00000')],\n ['Woluwe',\n  '1 - 11E SALADE DE FREEKEH, POTIRON, FETA, AIRELLES ET GRAINES GRILLÉES. (V)(43839)',\n  Decimal('25.90000')],\n ['Woluwe',\n  '1 - 3E QUINOA AUX CAROTTES, RAISINS, TOMATES CERISE, GRAINES GRILLÉES ET HERBES VERTES. (V)(43831)',\n  Decimal('25.90000')],\n ['Woluwe', 'JUS DE FRUITS FRAIS 250 ML(55926)', Decimal('25.60000')],\n ['Woluwe', 'EL ARITZA TEMPRANILLO 75CL(55948)', Decimal('25.40000')],\n ['Woluwe', 'TARTANA BODEGAS FARINA 75CL(55945)', Decimal('25.00000')],\n ['Woluwe', 'TERRINE DE LIEVRE / NOIX / THYM(18658)', Decimal('24.47200')],\n ['Woluwe',\n  'LIVRAISON BXL COMMANDE SUPERIEURE 100 EUROS(19455)',\n  Decimal('24.2000')],\n ['Woluwe', 'SUPPLEMENT SALADE(34429)', Decimal('24.0000')],\n ['Woluwe',\n  '2 - 14E VELOUTÉ DE TOMATES ET BASILIC. (GF)(V)(43968)',\n  Decimal('24.00000')],\n ['Woluwe',\n  '2 - 8E MINESTRONE VERDE AUX LENTILLES. (GF)(V)(43958)',\n  Decimal('24.00000')],\n ['Woluwe',\n  '3 - 12E POTAGE DE COURGETTES ET ÉPINARDS.(GF)(V)(43952)',\n  Decimal('24.00000')],\n ['Woluwe',\n  'POTAGE MINESTRONE VERDE / LENTILLES (1L)(38586)',\n  Decimal('24.0000000')],\n ['Woluwe', 'VELOUTÉ DE POTIRON(50258)', Decimal('24.00000')],\n ['Woluwe', 'POTAGE TOMATE ET LAIT DE COCO(56168)', Decimal('24.00000')],\n ['Woluwe',\n  'PLATEAU CRUDITES (GF) (V) (prix/pers)(19406)',\n  Decimal('24.00000')],\n ['Woluwe', 'DESSERT EN VERRE (HORS CAUTION)(20249)', Decimal('23.2500000')],\n ['Woluwe',\n  '3 GROSSES CREVETTES BODY PEEL / BOULGOUR AUX HERBES / SESAME(38801)',\n  Decimal('23.20000')],\n ['Woluwe', 'MOUSSE CHOCOLAT DUO(51236)', Decimal('23.0000000')],\n ['Woluwe', \"POULET A L'ITALIENNE(53796)\", Decimal('22.99836')],\n ['Woluwe',\n  'NARCISSUS / TIRADITO DE THON - MARINADE AU SESAME, PIMENTS ET HERBES, TOMATES SECHEES ET CORIANDRE(54526)',\n  Decimal('22.80000')],\n ['Woluwe', 'LINGUINI NATURE(40624)', Decimal('22.6226000')],\n ['Woluwe', 'MINESTRONE (51762)', Decimal('22.5000000')],\n ['Woluwe',\n  '4 - 13E SALADE DE CHOU BLANC ET WAKAMÉ, VINAIGRETTE WASABI.(GF)(V)(44005)',\n  Decimal('22.20000')],\n ['Woluwe',\n  '4 - 3E TABOULÉ LIBANAIS, TOMATES ET HERBES VERTES. (V)(43963)',\n  Decimal('22.20000')],\n ['Woluwe',\n  '4 - 5E SALADE DE PÂTES GRECQUES, OLIVES, TOMATES SÉCHÉES ET FETA. (V)(43969)',\n  Decimal('22.20000')],\n ['Woluwe', 'BOUDIN BLANC / NOIR (19938)', Decimal('22.13042')],\n ['Woluwe',\n  'FILET DE CABILLAUD / SAUCE MOUSSELINE / CREVETTES GRISES / PURÉE AUX POIREAUX / CHICONS CONFITS (Gluten Free)(34806)',\n  Decimal('22.10000')],\n ['Woluwe', 'LINGUINE AUX LENTILLES ET LARDONS(54405)', Decimal('22.10000')],\n ['Woluwe',\n  'TORTELLONI RICOTTA / EPINARD / CHAMPIGNONS DES BOIS(56150)',\n  Decimal('22.0116000')],\n ['Woluwe', 'SALADE CREVETTES 450G(19072)', Decimal('21.9600000')],\n ['Woluwe',\n  'ACC 1 : 2 POMMES AIRELLES / 2 CHICONS / 200 LEGUMES(55420)',\n  Decimal('21.86000')],\n ['Woluwe', 'DIPS SAUCE CHERMOULAH 250G(53777)', Decimal('21.68000')],\n ['Woluwe', 'STOEMP DE POIREAUX(55793)', Decimal('21.39000')],\n ['Woluwe',\n  'HARICOTS PRINCESSES AUX OIGNONS SAUTES ET NOIX DE MUSCADE(50666)',\n  Decimal('21.29140')],\n ['Woluwe', 'ECRASE DE PDT AU CITRON(34115)', Decimal('21.2476000')],\n ['Woluwe',\n  'RISOTTO AUX FEUILLES DE CITRONNIER(18584)',\n  Decimal('21.1970000')],\n ['Woluwe', 'BONBON BATON ACIDULE BOUTEILLE 340G(36761)', Decimal('20.70000')],\n ['Woluwe', 'CRUDITE MINI(19956)', Decimal('20.7000000')],\n ['Woluwe', 'BEURRE ARTISANAL DOUX 250G(39002)', Decimal('20.34000')],\n ['Woluwe', 'COQUELET NATURE CUIT(18869)', Decimal('20.25000')],\n ['Woluwe', 'CAILLE FARCIE CUITE + SAUCE(19160)', Decimal('20.10000')],\n ['Woluwe', 'EAU PLATE 50CL(38497)', Decimal('20.0000000')],\n ['Woluwe',\n  '1 - 10E VELOUTÉ DE BETTERAVE ROUGE. (GF)(V)(43838)',\n  Decimal('20.00000')],\n ['Woluwe',\n  '4 - 6E POTAGE DE COURGETTES AUX ÉPINARDS. (GF)(V)(43971)',\n  Decimal('20.00000')],\n ['Woluwe', 'SPAGHETTI BOLO (34385)', Decimal('19.8000')],\n ['Woluwe',\n  '1 - 8P CHICONS AU GRATIN, PURÉE DE POMMES DE TERRE(43938)',\n  Decimal('19.78000')],\n ['Woluwe',\n  '1 - 10P BOULETTE DE VOLAILLE, SAUCE BRUNE A LA MOUTARDE, CHOU-FLEUR A LA BECHAMEL, PURÉE NATURE.(43947)',\n  Decimal('19.78000')],\n ['Woluwe', 'SALADE MESCLUN PARMESAN(35815)', Decimal('19.71060')],\n ['Woluwe', 'COULIS FRUITS ROUGES 500ML(38102)', Decimal('19.7000000')],\n ['Woluwe',\n  'TIRADITO DE THON ALBACORE / SESAME / PIMENTS(53785)',\n  Decimal('19.59200')],\n ['Woluwe', 'MERINGUE(51577)', Decimal('19.5200000')],\n ['Woluwe', 'GRANOLA 340G(19911)', Decimal('19.5000')],\n ['Woluwe', 'WASABI PEAS 300G(20282)', Decimal('19.5000')],\n ['Woluwe', 'SAC ISO FTK GRIS/BLANC(36594)', Decimal('19.5000000')],\n ['Woluwe', 'SALADE BOULGOUR (18043)', Decimal('19.35640')],\n ['Woluwe', 'SALADE CREVETTES(18093)', Decimal('18.9720000')],\n ['Woluwe', 'TERRINE DE CANARD AU FOIE GRAS (50106)', Decimal('18.60000')],\n ['Woluwe',\n  '2 - 3E SALADE DE CÉLERI-RAVE, CHOU BLANC ET CAROTTES AU SÉSAME NOIR ET PIMENTS. (GF)(V)(43946)',\n  Decimal('18.50000')],\n ['Woluwe',\n  '2 - 7E SALADE DE PATES GRECQUES, OLIVES, TOMATES SÉCHÉES, ET FETA. (V)(43957)',\n  Decimal('18.50000')],\n ['Woluwe',\n  '3 - 3E BOULGOUR, POIS CHICHES, EDAMAME, POTIRON GRILLÉ ET GRENADE. (V)(43930)',\n  Decimal('18.50000')],\n ['Woluwe', 'COOKIE 1PCE(38737)', Decimal('18.1500000')],\n ['Woluwe', 'BISQUE DE HOMARD 1/2L(19556)', Decimal('18.0000000')],\n ['Woluwe', 'MIGNARDISE HARICOTS BLANCS(40397)', Decimal('18.0000000')],\n ['Woluwe',\n  'POTAGE CHAMPIGNONS DES BOIS / CREME ALLEGEE 1L(44067)',\n  Decimal('18.0000000')],\n ['Woluwe',\n  'SALADE DE PATES ORZO / TOMATES SECHEES / FETA 180G(51760)',\n  Decimal('18.0000000')],\n ['Woluwe',\n  'SALADE DE POMMES DE TERRE / CIBOULETTE / OIGNONS(18645)',\n  Decimal('17.81040')],\n ['Woluwe', '(53047)', Decimal('17.7840000')],\n ['Woluwe',\n  'COQUELET CUIT PERSILLADE AU CITRON 2PCS(56152)',\n  Decimal('17.40000')],\n ['Woluwe', 'WASABI NUTS PETIT POT(18875)', Decimal('17.10000')],\n ['Woluwe', 'COOKIES CHOCOLAT NOIR 4PCS(51179)', Decimal('17.0400000')],\n ['Woluwe', '8 BLANCS MINIS MELOCAKES ARTISANAL(56018)', Decimal('17.00000')],\n ['Woluwe',\n  'SALADE DE QUINOA / POIS CHICHES / HARICOTS ROUGES / AZUKI / TOMATES SECHEES  / KALE(54493)',\n  Decimal('16.96940')],\n ['Woluwe',\n  'TARTE GANACHE CHOCOLAT / CREME VANILLE ET ROCHER COCO 4PERS(53816)',\n  Decimal('16.90000')],\n ['Woluwe',\n  'CELERI-RAVE / CHAMPIGNONS DES BOIS / STRACCIATELLA - 1 Pers.(56257)',\n  Decimal('16.60000')],\n ['Woluwe', 'COOKIE CHOCOLAT NOIR 1PCE(51180)', Decimal('16.2800000')],\n ['Woluwe', 'DIPS BABAGANOUSH 250G(53650)', Decimal('16.26000')],\n ['Woluwe',\n  \"COQUELET FARCI AUX FRUITS D'HIVER (2 PERS.)(51922)\",\n  Decimal('16.20000')],\n ['Woluwe',\n  'COQUELET FARCI TRUFFE AUX CHAMPIGNONS DES BOIS (2 PERS.)(51924)',\n  Decimal('16.20000')],\n ['Woluwe',\n  'VELOUTE POTIRON AU LAIT DE COCO 1/2L (44065)',\n  Decimal('16.00000')],\n ['Woluwe',\n  'VELOUTÉ DE POIVRONS DOUX / MASCARPONE (50735)',\n  Decimal('16.00000')],\n ['Woluwe',\n  'POTAGE AUX CAROTTES / LAIT DE COCO (1/2L)(19575)',\n  Decimal('16.0000000')],\n ['Woluwe', 'POTAGE DETOX POTIRON 1L(50713)', Decimal('16.00000')],\n ['Woluwe',\n  '1 - 14E VELOUTÉ DE CÉLERI-RAVE. (GF)(V)(43842)',\n  Decimal('16.00000')],\n ['Woluwe',\n  'COQUELET AU MIEL, SALADE VERTE, PDT AU SEL ET ROMARIN(40817)',\n  Decimal('16.0000000')],\n ['Woluwe', '1 - 6E MINESTRONE. (GF)(V)(43834)', Decimal('16.00000')],\n ['Woluwe', 'FIGUIERE MEDITERRANEE ROSE 75CL(55949)', Decimal('16.00000')],\n ['Woluwe',\n  'VELOUTE DE POIVRONS JAUNES / BASILIC (1/2L)(55756)',\n  Decimal('16.00000')],\n ['Woluwe',\n  'VELOUTE DE TOMATES AU BASILIC 1/2L(19569)',\n  Decimal('16.0000000')],\n ['Woluwe',\n  '3 - 2E POTAGE DE CHOU FLEUR DU BARRY. (GF)(V)(43928)',\n  Decimal('16.00000')],\n ['Woluwe',\n  'SALADE THAI AUX SCAMPIS / CAROTTES / SOJA / POIVRONS(52978)',\n  Decimal('16.00000')],\n ['Woluwe', '2 - 4E VELOUTÉ DE CHICONS. (GF)(V)(43948)', Decimal('16.00000')],\n ['Woluwe',\n  '3 - 8E CHICKEN SOUP FOR THE SOUL. (GF)(43942)',\n  Decimal('16.00000')],\n ['Woluwe', 'UNION SQUARE CAFE NUTS 350G(50452)', Decimal('15.9000000')],\n ['Woluwe', 'AMANDE GROS SEL ET THYM 350G(55766)', Decimal('15.90000')],\n ['Woluwe',\n  'ACC 2 : 400G PUREE + 400G CHAMPIGNON DES BOIS(55452)',\n  Decimal('15.80000')],\n ['Woluwe', 'VINAIGRETTE WASABI 250ML(18975)', Decimal('15.80000')],\n ['Woluwe', 'VINAIGRETTE MIEL BALSAMIQUE 250ML(18987)', Decimal('15.80000')],\n ['Woluwe',\n  'DIPS : CREME CARDAMOME / CITRON (180g)(36780)',\n  Decimal('15.60000')],\n ['Woluwe',\n  'PAIN CIABATTA NATURE HUILE OLIVE 180G(51408)',\n  Decimal('15.60000')],\n ['Woluwe',\n  '4 - 1E SALADE DE CÉLERI-RAVE, CHOU BLANC, CAROTTES, SÉSAME NOIR ET PIMENTS. (GF)(V)(43959)',\n  Decimal('14.80000')],\n ['Woluwe', 'PARMESAN - COPEAU/RAPE(18671)', Decimal('14.7186000')],\n ['Woluwe',\n  'SALADE POIS CHICHE LENTILLES VERTES LIME PIMENTS(55712)',\n  Decimal('14.36540')],\n ['Woluwe',\n  'SALADE GRECQUE : TOMATES / CONCOMBRES / OLIVES / FETA(18001)',\n  Decimal('14.32200')],\n ['Woluwe',\n  'BATONNET POULET CUIT LAQUE MIEL ET SOJA(54477)',\n  Decimal('14.09460')],\n ['Woluwe', 'SAUCE COMPTOIR FROIDE(38022)', Decimal('14.06160')],\n ['Woluwe', 'POTAGE DU JOUR A EMPORTER 7 EURO(35027)', Decimal('14.0000000')],\n ['Woluwe', 'BRIOCHE(20062)', Decimal('13.9000000')],\n ['Woluwe', 'PLAT DU JOUR 13.90(19319)', Decimal('13.90000')],\n ['Woluwe', 'BONBON CITROS BOUTEILLE 340G(36752)', Decimal('13.80000')],\n ['Woluwe', 'PUREE CHOU VERT LARDON(55801)', Decimal('13.77650')],\n ['Woluwe', 'MONT MARRON JETABLE(51860)', Decimal('13.60000')],\n ['Woluwe', 'BEURRE ARTISANAL SALE 250G(39003)', Decimal('13.56000')],\n ['Woluwe',\n  'PUREE AUX CAROTTES / EPICES RAZ EL HANOUT(55791)',\n  Decimal('13.51100')],\n ['Woluwe', 'SALADE TIKKA POULET 180G (51761)', Decimal('13.5000000')],\n ['Woluwe', 'TERRINE DE CANARD AUX CERISES(55677)', Decimal('13.14800')],\n ['Woluwe', 'GRANOLA DE SAISON 340G(55692)', Decimal('13.00000')],\n ['Woluwe', 'HAMBURGER DE VOLAILLE / THYM(50730)', Decimal('12.54960')],\n ['Woluwe', 'PDT GRENAILLE CITRON ET ORIGAN(55889)', Decimal('12.44100')],\n ['Woluwe', 'TURDUCKEN CUIT(18333)', Decimal('12.34800')],\n ['Woluwe',\n  'SARRASIN / HARICOTS ROUGES / POTIRON / SESAME ET PERSIL(56136)',\n  Decimal('12.19540')],\n ['Woluwe',\n  'VELOUTE DE PATATES DOUCES AU LAIT DE COCO + ACC 1L(54530)',\n  Decimal('12.00000')],\n ['Woluwe',\n  '4 - 10E VELOUTÉ DE CHAMPIGNONS DE PARIS AU THYM. (GF)(V)(43981)',\n  Decimal('12.00000')],\n ['Woluwe', '4 - 8E MINESTRONE. (GF)(V)(43977)', Decimal('12.00000')],\n ['Woluwe', 'MIGNARDISE AMANDAS DULCEY(33691)', Decimal('12.0000000')],\n ['Woluwe', 'MIGNARDISE AMANDE GIANDUJA CACAO(33690)', Decimal('12.0000000')],\n ['Woluwe',\n  'POTAGE AUX CHAMPIGNONS DES BOIS 1L (Gluten Free)(54532)',\n  Decimal('12.00000')],\n ['Woluwe', 'VELOUTE POTIRON CREME 1/2L(19560)', Decimal('12.0000000')],\n ['Woluwe', 'SAUCE JUS BRUN AU THYM 200ML(55464)', Decimal('11.70000')],\n ['Woluwe', '(54453)', Decimal('11.50100')],\n ['Woluwe', 'PETIT SAPIN SABLE(54541)', Decimal('11.50000')],\n ['Woluwe',\n  '4 - 9E SALADE DE POTIRON GRILLÉ, CHÈVRE, FIGUES, NOIX ET GRENADE. (V)(43979)',\n  Decimal('11.10000')],\n ['Woluwe', 'GRAND CIABATTA FTK 350G(38094)', Decimal('10.8000000')],\n ['Woluwe', 'MONT BLANC EN VERRE (+ caution)(34091)', Decimal('10.50000')],\n ['Woluwe', 'RAVIER GRANA PADANO COPEAU 150G(55757)', Decimal('10.05000')],\n ['Woluwe',\n  'BOULETTES DE VOLAILLE AU CITRON / GINGEMBRE / PIMENTS(55555)',\n  Decimal('9.97920')],\n ['Woluwe', 'TARTARE DE SAUMON AU WAKAME 200G(20221)', Decimal('9.95000')],\n ['Woluwe',\n  '1 - 9P CUISSE DE POULET DÉSOSSÉE AU MISO ET CACAHUETES, CHICONS CONFITS AUX OIGNONS, POMMES DE TERRE AU ROMARIN. (43944)',\n  Decimal('9.89000')],\n ['Woluwe', 'YAOURT BIO 212ML(56271)', Decimal('9.80000')],\n ['Woluwe', 'KEFTA + SAUCE(51476)', Decimal('9.63560')],\n ['Woluwe', 'CONFITURE FRAISE FTK(38888)', Decimal('9.5800000')],\n ['Woluwe', '(53423)', Decimal('9.40000')],\n ['Woluwe',\n  'POIS CHICHES GRILLES AU RIZ NOIR / MISO / GRAINE DE SESAME(56138)',\n  Decimal('9.33100')],\n ['Woluwe', 'DOMODO PRIMITIVO 75CL(55952)', Decimal('9.15000')],\n ['Woluwe', 'PLAT DU JOUR VEGE BOT(56033)', Decimal('9.00000')],\n ['Woluwe', 'PLAT DU JOUR TGTG 9,90 EURO(53612)', Decimal('9.0000000')],\n ['Woluwe', 'GLACE CHOCOLAT 500ML(40921)', Decimal('9.00000')],\n ['Woluwe', 'VELOUTE CHAMPIGNONS DES BOIS 1/2L(38202)', Decimal('9.0000000')],\n ['Woluwe', '(53113)', Decimal('8.79580')],\n ['Woluwe', 'CACAHUETE MIEL CRANBERRY 200G(20255)', Decimal('8.70000')],\n ['Woluwe',\n  'COQUELET CUIT PERSILLADE AU CITRON 1PCE(50728)',\n  Decimal('8.70000')],\n ['Woluwe', 'CHIPS DE LEGUMES(51430)', Decimal('8.6000000')],\n ['Woluwe', 'ACC 1 : 300G LEGUMES + 3 CHICONS(55423)', Decimal('8.60000')],\n ['Woluwe', 'BAGUETTE A L ANCIENNE(52047)', Decimal('8.4000000')],\n ['Woluwe', 'MERINGUE(51578)', Decimal('8.3840000')],\n ['Woluwe', 'CRUNCHY ALMONDS 60G(55513)', Decimal('8.30000')],\n ['Woluwe', 'AIRELLE MAISON 200G(19290)', Decimal('8.19000')],\n ['Woluwe', 'AUBERGINES À LA PARMIGIANA(50590)', Decimal('8.0886')],\n ['Woluwe',\n  'CUISSE DE POULET DESOSSEE CUITE AU MISO BLANC(44074)',\n  Decimal('8.06400')],\n ['Woluwe',\n  'POTAGE BOUILLON POULE LEGUMES DE SAISON ET CURCUMA(39116)',\n  Decimal('8.00000')],\n ['Woluwe', 'BOUILLON AU MISO ET ENOKI 1/2L(52765)', Decimal('8.0000000')],\n ['Woluwe', 'POTAGE TOMATE ET LAIT DE COCO(56169)', Decimal('8.00000')],\n ['Woluwe', 'POTAGE DETOX POTIRON 1/2L(50758)', Decimal('8.00000')],\n ['Woluwe',\n  '4 - 2E VELOUTÉ DE CÉLERI-RAVE. (GF)(V)(43961)',\n  Decimal('8.00000')],\n ['Woluwe', 'POTAGE AU FENOUIL ET TOMATES 1/2L(40680)', Decimal('8.0000000')],\n ['Woluwe',\n  'POTAGE CHOU FLEUR/ COCO/ CITRONNELLE 1L(51190)',\n  Decimal('8.0000000')],\n ['Woluwe', 'VELOUTE DE BETTERAVE 1L(56118)', Decimal('8.00000')],\n ['Woluwe', 'POTAGE CREME PARMESAN 1L(39117)', Decimal('8.0000000')],\n ['Woluwe', 'TARTARE DE SAUMON AU WAKAME 100G(55840)', Decimal('7.95000')],\n ['Woluwe', 'VINAIGRETTE THAI 250ML(18977)', Decimal('7.90000')],\n ['Woluwe', 'NOEL : 5 PETITES BOULES CHOCOLAT(38354)', Decimal('7.90000')],\n ['Woluwe',\n  'VINAIGRETTE SESAME LEMON POMEGRANATE 250ML(54496)',\n  Decimal('7.90000')],\n ['Woluwe', 'BICHE FILET CRU + BARDE(34095)', Decimal('7.84608')],\n ['Woluwe', 'SACHET HEALTHY 150G(55968)', Decimal('7.80000')],\n ['Woluwe', 'SAUCE VIN BLANC CREME 400ML(54563)', Decimal('7.80000')],\n ['Woluwe',\n  'SAUCE BRUNE AIRELLES/THYM/TAMARIN 400ML(50132)',\n  Decimal('7.80000')],\n ['Woluwe', 'SAUCE CREME POIVRE VERT 400ML(53420)', Decimal('7.80000')],\n ['Woluwe',\n  'TACCHINO / SALSA TONNATA / ANCHOIS / CAPRES(18784)',\n  Decimal('7.7280000')],\n ['Woluwe', 'CIABATTA 1/2 (PCE)(36492)', Decimal('7.7000000')],\n ['Woluwe', 'COQ AU VIN : CUISSE(51515)', Decimal('7.51400')],\n ['Woluwe',\n  'PORTOBELLO CHILI SIN CARNE RICOTTA PARMESAN(40760)',\n  Decimal('7.42560')],\n ['Woluwe',\n  '2 - 11E SALADE DE LÉGUMES PROVENÇAUX, QUINOA, POIS CHICHES ET CHERMOULA. (GF)(V)(43964)',\n  Decimal('7.40000')],\n ['Woluwe',\n  '1 - 7E BOULGOUR, POIS CHICHES, EDAMAME, POTIRON GRILLÉ ET GRENADE. (V)(43835)',\n  Decimal('7.40000')],\n ['Woluwe', 'POTAGE DE POISSONS (1/2L)(40690)', Decimal('7.00000')],\n ['Woluwe', 'BOL BRUSCHETTE NATURE(36809)', Decimal('6.90000')],\n ['Woluwe', 'MONT MARRON EN VASE(40417)', Decimal('6.80000')],\n ['Woluwe',\n  'SALADE LENTILLES NOIRES ET VERTES FETA PETITS POIS(55710)',\n  Decimal('6.77040')],\n ['Woluwe', 'BUTTER CHICKEN(55573)', Decimal('6.32460')],\n ['Woluwe',\n  'KORMA DE LEGUMES DE SAISON ET NOIX DE CAJOU(54461)',\n  Decimal('6.18800')],\n ['Woluwe',\n  'CHAMPIGNONS DE PARIS SAUTES / OIGNONS / HUILE AU PAPRIKA / BASILIC(54426)',\n  Decimal('6.16200')],\n ['Woluwe',\n  'SALADE FREGOLA PANAIS CAROTTE AIRELLE(54492)',\n  Decimal('6.11940')],\n ['Woluwe', 'MIGNARDISE AMANDE GIANDUJA SUCRE(33689)', Decimal('6.0000000')],\n ['Woluwe', 'MIGNARDISE GRAIN CAFE (38905)', Decimal('6.0000000')],\n ['Woluwe', 'SACHET DE CUBERDON(19814)', Decimal('6.0000')],\n ['Woluwe', 'BRU PETILLANTE PLASTIQUE 50 CL(19866)', Decimal('6.00000')],\n ['Woluwe', 'None(51791)', Decimal('5.90000')],\n ['Woluwe',\n  'COMPOTE DE POMMES / FRAISES / RHUBARBE 400G(19263)',\n  Decimal('5.85000')],\n ['Woluwe',\n  'ESCALOPE DE DINDE / GRUYERE / LARD / PARMESAN(54414)',\n  Decimal('5.76000')],\n ['Woluwe', 'WASABI PEAS 90G(20283)', Decimal('5.70000')],\n ['Woluwe', 'SALADE FRUIT SAISON (18708)', Decimal('5.6922000')],\n ['Woluwe',\n  'BOULETTES SAUCE BRUNE AUX PRUNES ET AIRELLES(55590)',\n  Decimal('5.61100')],\n ['Woluwe', 'BATONNET POULET CUIT MISO CACAHUETE(51834)', Decimal('5.61080')],\n ['Woluwe', 'ACC 1  :  2 POMMES AIRELLES(38073)', Decimal('5.2000000')],\n ['Woluwe', 'CREMA TONNATA(52363)', Decimal('5.18700')],\n ['Woluwe', 'GRUYERE/EMMENTAL(18673)', Decimal('5.03880')],\n ['Woluwe', 'FENOUIL CELERI ET PDT(51483)', Decimal('5.03100')],\n ['Woluwe', 'YAOURT BIO 212ML(56270)', Decimal('4.90000')],\n ['Woluwe', 'SALADE QUINOA(18059)', Decimal('4.86080')],\n ['Woluwe', 'PAVLOVA ON THE GO(38903)', Decimal('4.85000')],\n ['Woluwe', 'CONFITURE ORANGE FTK(38890)', Decimal('4.7900000')],\n ['Woluwe', 'CONFITURE CERISE FTK(38891)', Decimal('4.7900000')],\n ['Woluwe', 'CONFITURE ABRICOT FTK(38892)', Decimal('4.7900000')],\n ['Woluwe', 'CONFITURE FRAMBOISE FTK(38894)', Decimal('4.7900000')],\n ['Woluwe', 'SABLE POIRE CREME AMANDE PORTION(19717)', Decimal('4.55000')],\n ['Woluwe', 'MINI SATE POULET SAUCE CACAHUETE(18731)', Decimal('4.5319200')],\n ['Woluwe', 'BOUILLON THAI (19122)', Decimal('4.5000')],\n ['Woluwe',\n  'SALADE DE POMMES DE TERRE AU RAIFORT ET A LA CIBOULETTE(52984)',\n  Decimal('4.48880')],\n ['Woluwe', 'COOKIE CHOCOLAT BLANC CAJOU 1PCE(18973)', Decimal('4.44000')],\n ['Woluwe',\n  'SALADE FREGOLA PANAIS CAROTTE AIRELLE(54491)',\n  Decimal('4.38340')],\n ['Woluwe', 'DIPS CREME DE RAIFORT 200G(54394)', Decimal('4.34000')],\n ['Woluwe', 'SANDWICH SUEDOIS GD (SAUMON)(20053)', Decimal('4.25000')],\n ['Woluwe', 'RIZ BASMATI NATURE(18583)', Decimal('4.16392')],\n ['Woluwe',\n  'CANNELLONI BOLOGNAISE / TOMATES / CAROTTES / FENOUIL / OIGNONS(51540)',\n  Decimal('4.15480')],\n ['Woluwe', 'HOMEMADE CRACKERS 100G(56106)', Decimal('4.15000')],\n ['Woluwe', 'CHICKEN SOUP FOR THE SOUL 1/2L(40564)', Decimal('4.0000000')],\n ['Woluwe', 'POTAGE LEGUMES DU MARCHE 1/2L(19544)', Decimal('4.0000000')],\n ['Woluwe',\n  '4 - 12E BOUILLON THAÏ AUX DÉS DE TOMATES. (GF)(V)(44004)',\n  Decimal('4.00000')],\n ['Woluwe',\n  '2 - 12E BOUILLON AU MISO ET ENOKI. (GF)(V)(43966)',\n  Decimal('4.00000')],\n ['Woluwe',\n  '3 - 10E VELOUTÉ DE BETTERAVE ROUGE. (GF)(V)(43925)',\n  Decimal('4.00000')],\n ['Woluwe', 'TARTARE DE DAURADE AU WAKAME 100G(56474)', Decimal('3.99000')],\n ['Woluwe', 'VINAIGRETTE MOUTARDE 250ML(19202)', Decimal('3.95000')],\n ['Woluwe', 'PAVLOVA FRUIT ROUGE(52139)', Decimal('3.9500000')],\n ['Woluwe', 'VINAIGRETTE BUSABA 250ML(18985)', Decimal('3.95000')],\n ['Woluwe', 'SAUCE GRAND VENEUR 200ML(50058)', Decimal('3.90000')],\n ['Woluwe',\n  '2 - 5E  SALADE DE POIS CHICHES GRILLÉS, RIZ NOIR, MISO ET GRAINES DE SÉSAME. (V)(43951)',\n  Decimal('3.70000')],\n ['Woluwe',\n  '1 - 13E SALADE DE FREGOLA, PANAIS, CAROTTES ET AIRELLES. (V)(43841)',\n  Decimal('3.70000')],\n ['Woluwe',\n  '2 - 1E SALADE DE POTIRON, CHÈVRE, FIGUES ET NOIX, VINAIGRETTE À LA GRENADE. (GF)(V)(43940)',\n  Decimal('3.70000')],\n ['Woluwe',\n  '1 - 9E SALADE DE CHOU BLANC ET WAKAMÉ, VINAIGRETTE AU WASABI. (GF)(V)(43837)',\n  Decimal('3.70000')],\n ['Woluwe',\n  '3 - 13E SALADE DE CHOU BLANC ET WAKAMÉ, VINAIGRETTE WASABI. (GF)(V)(43955)',\n  Decimal('3.70000')],\n ['Woluwe',\n  '3 - 7E TABOULÉ LIBANAIS AUX TOMATES ET HERBES VERTES. (V)(51271)',\n  Decimal('3.70000')],\n ['Woluwe', 'BAGUETTE PARISIENNE(19870)', Decimal('3.6000')],\n ['Woluwe', 'TIRAMISU SPECULOOS 110G(40976)', Decimal('3.5000000')],\n ['Woluwe', 'MOUSSE CHOCOLAT 110G(40977)', Decimal('3.5000000')],\n ['Woluwe', 'MOUSSE CHOCOLAT EN VERRE(40404)', Decimal('3.5000000')],\n ['Woluwe', 'RAVIER GRANA PADANO MOULU 150G(55758)', Decimal('3.35000')],\n ['Woluwe', 'ASSIETTE ARCOPAL ZELIE 20 CM(56039)', Decimal('3.00000')],\n ['Woluwe', 'SAUCE ESTRAGON/DÉS DE TOMATE(51212)', Decimal('2.92500')],\n ['Woluwe',\n  'SALADE RIZ SAUVAGE AUX AMANDES / HERBES(55624)',\n  Decimal('2.90780')],\n ['Woluwe', 'BATONNETS DE COURGETTES ROTIS(55638)', Decimal('2.85980')],\n ['Woluwe', 'COCA COLA REGULAR 33 CL(53300)', Decimal('2.80000')],\n ['Woluwe', 'SALADE POULET AUX HERBES(18134)', Decimal('2.7150000')],\n ['Woluwe', 'COCA NORMAL 20CL VERRE(34611)', Decimal('2.7000000')],\n ['Woluwe', 'EAU PETILLANTE BRU 50CL TAKE OUT(52629)', Decimal('2.6000000')],\n ['Woluwe', 'YAOURT BIO 212ML(56269)', Decimal('2.45000')],\n ['Woluwe', 'YAOURT BIO 212ML(56268)', Decimal('2.45000')],\n ['Woluwe', 'SAUCE CREME VIN BLANC / CITRON(52367)', Decimal('2.41800')],\n ['Woluwe', 'COCA COLA (51766)', Decimal('2.0000000')],\n ['Woluwe', 'COCA ZERO(51767)', Decimal('2.0000000')],\n ['Woluwe', 'None(53271)', Decimal('1.6000000')],\n ['Woluwe', 'SACHET HEALTHY 40G(55973)', Decimal('1.25000')],\n ['Woluwe', 'ENCAISSEMENT POUR ATELIER(35119)', Decimal('1.0000')],\n ['Woluwe', 'BRIOCHE TETE CUITE (40315)', Decimal('1.0000000')],\n ['Woluwe', 'VENTE COMPTOIR FETE 6%(38404)', Decimal('0.00000')],\n ['Woluwe', 'VENTE CAUTIONS FETE 0%(34700)', Decimal('0.00000')],\n ['Woluwe', 'POINT DE FIDELITE(34721)', Decimal('0.0000')],\n ['Woluwe', '(52850)', Decimal('-6.00000')],\n ['Woluwe',\n  \"DINDONNEAU FARCI AUX FRUITS D'HIVER / JUS BRUN LEGEREMENT CREME (4 PERS.)(54536)\",\n  Decimal('-54.80000')],\n ['Woluwe', 'CAUTION VERRE 6CM(19937)', Decimal('-118.00000')],\n ['Woluwe', 'CAUTION VERRINE/JATTE(19939)', Decimal('-165.5000000')],\n ['Woluwe', 'CAUTION VASE DONAU GRAND 35 CM(19941)', Decimal('-350.0000000')],\n ['Woluwe', 'CAUTION VASE DONAU PETIT 18 CM(19943)', Decimal('-560.0000000')],\n ['Woluwe', 'Discount(20548)', Decimal('-853.62000')],\n ['Woluwe', 'CAUTION VASE DONAU MOYEN 28 CM(19942)', Decimal('-1785.0000000')]]\n\n\n\ndef get_last_week_best_selling_products(shops=[]):\n    today = datetime.datetime.now().date()\n    start_date = (today - datetime.timedelta(days=7)).strftime(\"%Y-%m-%d\")\n    end_date = today.strftime(\"%Y-%m-%d\")    \n    return get_best_selling_products(start_date, end_date, shops)\n\n\ndisplay_top_selling_products_per_column(shops=['Fort Jaco','Wemmel','La Hulpe','CHATELAIN','Woluwe', 'LATEM'], top_n=20)\n\n\n\n\n\n\n \nrank\nFort Jaco\nWemmel\nLa Hulpe\nCHATELAIN\nWoluwe\nLATEM\n\n\n\n\n0\n1\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\nLEGUMES / SALADES 21,7 EURO/KG(54420)\nLEGUMES / SALADES 21,7 EURO/KG(54420)\nDIVERS PIECE BALANCE(54437)\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\nLEGUMES / SALADES 21,7 EURO/KG(54420)\n\n\n1\n2\nPOULET AU ROMARIN (18191)\nPAVLOVA AUX FRUITS ROUGES EN VASE(19842)\nLOTTE EPICEE(51181)\nDIVERS POIDS BALANCE(53935)\nPOULET AU ROMARIN (18191)\nTARTIFLETTE(57765)\n\n\n2\n3\nGAMBAS GEANTES (50610)\nBAR EPICE(50689)\nBAR EPICE(50689)\nPLAT DU JOUR 10.9(19322)\nLEGUMES / SALADES 21,7 EURO/KG(54420)\nDOS DE CABILLAUD EPICE(53764)\n\n\n3\n4\nASPERGE VERTE ET SUGAR SNAPS (40762)\nWHOLE MONTH (1PERS)(36743)\nPAVLOVA AUX FRUITS ROUGES EN VASE(19842)\nGAMBAS GEANTES (50610)\nBAR EPICE(50689)\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\n\n\n4\n5\nTIRADITO DE SAUMON / SESAME / PIMENTS(53784)\nTARTIFLETTE(57765)\nSCAMPIS / OIGNONS / TOMATES SECHEES(50615)\nSCAMPIS / OIGNONS / TOMATES SECHEES(50615)\nCOQUELET CUIT + SAUCE COMPTOIR(55577)\nASPERGE VERTE ET SUGAR SNAPS (40762)\n\n\n5\n6\nLEGUMES / SALADES 21,7 EURO/KG(54420)\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\nCOQUELET CUIT + SAUCE COMPTOIR(55577)\nTOMATE CREVETTES GRISES(18655)\nSALADE GO GREEN SUCRINE / HARICOTS VERTS / COURGETTES / EDAMAME / AVOCATS(52986)\nHOT BAR FTK(57206)\n\n\n6\n7\nSCAMPIS / OIGNONS / TOMATES SECHEES(50615)\nPOULET AU ROMARIN (18191)\nPOULET AU ROMARIN (18191)\nASPERGE VERTE ET SUGAR SNAPS (40762)\nPAVLOVA AUX FRUITS ROUGES EN VASE(19842)\nFILET DE BOEUF / CROUTE D'HERBES / GRAINES DE MOUTARDE(40750)\n\n\n7\n8\nBUFFET DOLCE FARNIENTE (prix/pers)(19531)\nSCAMPIS / OIGNONS / TOMATES SECHEES(50615)\nMELI MELO HARICOTS VERTS ET BEURRE(40768)\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\nSUPREME DE POULET / STRACCIATELLA DI BUFALA / CHAMPIGNONS / ESTRAGON(55643)\nPOMMES DE TERRE AU PARMESAN(50645)\n\n\n8\n9\nPAIN DE VIANDE NATURE(51722)\nPOMMES DE TERRE AU PARMESAN(50645)\nTARTIFLETTE(57765)\nLEGUMES / SALADES 24,7 EURO/KG(54419)\nBELLES DE FONTENAY / GROS SEL / ROMARIN(18602)\nJARDINIERE LEGUMES MARCHE / AIL / HERBES / CITRON(18521)\n\n\n9\n10\nPLAT DU JOUR 9.9 COMPTOIR(34712)\nBELLES DE FONTENAY / GROS SEL / ROMARIN(18602)\nGET TOGETHER CLASSIC - PAIN SURPRISE(53070)\nLEGUMES PROVENCAUX(18517)\nTIRADITO DE SAUMON / SESAME / PIMENTS(53784)\nBAR EPICE(50689)\n\n\n10\n11\nCOQUELET CUIT + SAUCE COMPTOIR(55577)\nCIVET DE MARCASSIN / SAUCE AU POIVRE VERT DE MADAGASCAR (51521)\nPAVLOVA AUX FRUITS ROUGES JETABLE(36501)\nTARTIFLETTE(57765)\nPOMMES DE TERRE AU PARMESAN(50645)\nPAVLOVA AUX FRUITS ROUGES EN VASE(19842)\n\n\n11\n12\nDOS DE CABILLAUD EPICE(53764)\nLOTTE EPICEE(51181)\nMAGRET DE CANARD EN SAUCE(40752)\nCHAMPIGNONS DES BOIS SAUTES(51532)\nSESAMISO CHICKEN TENDERS(56933)\nCOQUELET LAQUE (1PCE)(40466)\n\n\n12\n13\nCHAMPIGNONS DES BOIS SAUTES(51532)\nSAUCE COMPTOIR CHAUDE(38021)\nFILET DE BOEUF / CROUTE D'HERBES / GRAINES DE MOUTARDE(40750)\nTHON ALBACORE EPICE CUIT(18440)\nCHAMPIGNONS DES BOIS SAUTES(51532)\nTIRADITO DE SAUMON / SESAME / PIMENTS(53784)\n\n\n13\n14\nPUREE NATURE 400G(19281)\nSAUMON MI-CUIT LAQUE AU SOJA / SESAME(40729)\nSAUMON MI CUIT EPICE(53011)\nBELLES DE FONTENAY / GROS SEL / ROMARIN(18602)\nLOTTE EPICEE(51181)\nFILET DE VEAU CUIT (40758)\n\n\n14\n15\nBELLES DE FONTENAY / GROS SEL / ROMARIN(18602)\nLEGUMES / SALADES 24,7 EURO/KG(54419)\nCAILLE DESOSSEE CUITE FOIE GRAS(34621)\nPOULET AU ROMARIN (18191)\nSAUMON MI CUIT EPICE(53011)\nSAUMON MI CUIT EPICE(53011)\n\n\n15\n16\nSALADE THAI(52963)\nCHAMPIGNONS DES BOIS SAUTES(51532)\nLEGUMES PROVENCAUX(18517)\nBAR EPICE(50689)\nCHICONS BRAISES / UNION SQUARE NUTS / OIGNONS(51524)\nLOTTE EPICEE(51181)\n\n\n16\n17\nFILET D'AGNEAU / CROUTES D'HERBES / GRAINES DE MOUTARDE(52808)\nLEGUMES PROVENCAUX(18517)\nSAUCE COMPTOIR CHAUDE(38021)\nPLAT DU JOUR 12.90(19320)\nSAUCE COMPTOIR CHAUDE(38021)\nBELLES DE FONTENAY / GROS SEL / ROMARIN(18602)\n\n\n17\n18\nJARDINIERE LEGUMES MARCHE / AIL / HERBES / CITRON(18521)\nTARTARE DE SAUMON / SESAME NOIRE / WAKAME 400G (Gluten Free)(55885)\nGAMBAS GEANTES (50610)\nPLAT DU JOUR 11.9(19321)\nASPERGE VERTE ET SUGAR SNAPS (40762)\nRADIATORI JAMBON FROMAGE 400G(53690)\n\n\n18\n19\nLEGUMES PROVENCAUX(18517)\nDOS DE CABILLAUD EPICE(53764)\nGET TOGETHER DELUXE - PAIN SURPRISE(20035)\nTARTARE DE SAUMON / SESAME NOIRE / WAKAME - 200G(43712)\nTARTIFLETTE(57765)\nWATERZOOI POISSON(51330)\n\n\n19\n20\nSALADE TIKKA AU POULET / CONCOMBRE / VINAIGRETTE / WASABI (52973)\nPOULPE A L'ITALIENNE(44072)\nJARDINIERE LEGUMES MARCHE / AIL / HERBES / CITRON(18521)\nPUREE NATURE 400G(19281)\nFILET DE BOEUF / CROUTE D'HERBES / GRAINES DE MOUTARDE(40750)\nTARTE MOELLEUX CHOCOLAT PORTION(19723)"
  },
  {
    "objectID": "re wpp.html",
    "href": "re wpp.html",
    "title": "WPP products solds last n days",
    "section": "",
    "text": "import foodcosts.core as core\nimport datetime as datetime\n\n\nstart_date = core.get_previous_n_day(7)\nend_date = datetime.datetime.now().strftime('%Y-%m-%d')\n\ndef get_totals_of_products_sold_at_wpp(start_date, end_date):\n    return core.get_query_res_as_pd(f\"\"\"\n    SELECT \n        vre.name as re_name,\n        vp.name as product_name,\n        sum(vpol.quantity) as qty_sold,\n        sum(vpol.quantity*vp.price) as total\n    FROM v_pos_order_line as vpol\n        left join v_pos_order as vpo on vpo.id = vpol.order_id\n        left join v_pos_session as vs on vs.id = vpo.session_id\n        left join v_pos as vpos on vpos.id = vs.pos_id\n        left join v_resto_entreprise as vre on vpos.shop_id = vre.id\n        left join v_product as vp on vp.id = vpol.product_id\n    WHERE\n        vre.name = 'R.E WPP'\n        AND (vpo.created_at between '{start_date} 00:00' and '{end_date} 23:59')\n    GROUP BY vp.name, vre.name\n    ORDER BY total desc;\n    \"\"\")\n\n\nsales_wpp_df=get_totals_of_products_sold_at_wpp(start_date, end_date)\n\n\ncumul_sum = sales_wpp_df.total.cumsum()/sales_wpp_df.total.sum()\n\n\ncumul_sum\n\n0     0.215209\n1     0.327831\n2     0.422935\n3     0.491509\n4     0.559037\n5     0.626383\n6     0.680532\n7     0.727231\n8     0.769702\n9     0.791544\n10    0.812736\n11    0.832849\n12    0.850595\n13    0.867750\n14    0.881553\n15    0.892019\n16    0.901423\n17    0.908325\n18    0.915150\n19    0.921521\n20    0.927709\n21    0.933352\n22    0.938282\n23    0.943135\n24    0.947777\n25    0.951902\n26    0.955664\n27    0.959304\n28    0.962945\n29    0.966130\n30    0.969285\n31    0.972318\n32    0.975231\n33    0.977961\n34    0.980357\n35    0.982724\n36    0.984817\n37    0.986758\n38    0.988639\n39    0.990520\n40    0.991900\n41    0.993281\n42    0.994433\n43    0.995450\n44    0.996466\n45    0.997452\n46    0.998316\n47    0.999075\n48    0.999803\n49    1.000000\nName: total, dtype: float64\n\n\n\ndisplay(sales_wpp_df.head(n=55))\n\n\n\n\n\n\n\n\nre_name\nproduct_name\nqty_sold\ntotal\n\n\n\n\n0\nR.E WPP\nSALADE BASE (Vegan/Veggie/Poulet)\n79.0\n709.42\n\n\n1\nR.E WPP\nSANDWICH DELUXE 1\n75.0\n371.25\n\n\n2\nR.E WPP\nCAFE LATTE\n95.0\n313.50\n\n\n3\nR.E WPP\nCOOKIE 1PCE\n137.0\n226.05\n\n\n4\nR.E WPP\nSANDWICH CLASSIQUE CLUB\n53.0\n222.60\n\n\n5\nR.E WPP\nPOTAGE DU JOUR PETIT\n74.0\n222.00\n\n\n6\nR.E WPP\nPAIN CHOCOLAT\n119.0\n178.50\n\n\n7\nR.E WPP\nSANDWICH BASE\n43.0\n153.94\n\n\n8\nR.E WPP\nCAPPUCCINO\n70.0\n140.00\n\n\n9\nR.E WPP\nCROISSANT\n48.0\n72.00\n\n\n10\nR.E WPP\nSALADE BASE (Saumon)\n7.0\n69.86\n\n\n11\nR.E WPP\nCAFE NORMAL\n39.0\n66.30\n\n\n12\nR.E WPP\nCOCA ZERO 50CL PET\n39.0\n58.50\n\n\n13\nR.E WPP\nHOMEMADE CAKE CITRON 1 PCE\n29.0\n56.55\n\n\n14\nR.E WPP\nHOMEMADE GRANOLA / YOGHURT\n13.0\n45.50\n\n\n15\nR.E WPP\nCOCA COLA REGULAR 50CL\n23.0\n34.50\n\n\n16\nR.E WPP\nCONFITURE/MIEL/CHOCO/LAIT\n62.0\n31.00\n\n\n17\nR.E WPP\nTARTE AU RIZ PORTION\n5.0\n22.75\n\n\n18\nR.E WPP\nSANDWICH BREAKFAST (Jambon fromage)\n9.0\n22.50\n\n\n19\nR.E WPP\nTHE DAMMAN\n6.0\n21.00\n\n\n20\nR.E WPP\nICE TEA 50 CL\n12.0\n20.40\n\n\n21\nR.E WPP\nTIRAMISU SPECULOOS 110G\n6.0\n18.60\n\n\n22\nR.E WPP\nNATURAL LIMONADE FTK (Citron)\n5.0\n16.25\n\n\n23\nR.E WPP\nJUS DE FRUITS FRAIS 250 ML (Orange)\n5.0\n16.00\n\n\n24\nR.E WPP\nEXPRESSO\n9.0\n15.30\n\n\n25\nR.E WPP\nEXPRESSO DOUBLE\n4.0\n13.60\n\n\n26\nR.E WPP\nMOUSSE CHOCOLAT 110G\n4.0\n12.40\n\n\n27\nR.E WPP\nSACHET DE CUBERDON\n2.0\n12.00\n\n\n28\nR.E WPP\nMIGNARDISE AMANDE GIANDUJA CACAO\n2.0\n12.00\n\n\n29\nR.E WPP\nFANTA ORANGE 50 CL\n7.0\n10.50\n\n\n30\nR.E WPP\nSPA REINE BLEU PET 50CL\n8.0\n10.40\n\n\n31\nR.E WPP\nSANDWICH BREAKFAST (chocolat)\n4.0\n10.00\n\n\n32\nR.E WPP\nJUS DE FRUITS FRAIS 250 ML (Fraise Citron)\n3.0\n9.60\n\n\n33\nR.E WPP\nPAIN + BEURRE\n12.0\n9.00\n\n\n34\nR.E WPP\nFINANCIER 250G (Pistache)\n1.0\n7.90\n\n\n35\nR.E WPP\nPORRIDGE POMME CANNELLE\n2.0\n7.80\n\n\n36\nR.E WPP\nBONBON CONFETTI SANS SUCRE 450G\n1.0\n6.90\n\n\n37\nR.E WPP\nJUS DE FRUITS FRAIS 250 ML (Banane Citron)\n2.0\n6.40\n\n\n38\nR.E WPP\nTIRAMISU CLASSIQUE 110G\n2.0\n6.20\n\n\n39\nR.E WPP\nPANNA COTTA (Coulis de fruits rouges)\n2.0\n6.20\n\n\n40\nR.E WPP\nTARTE MOELLEUX CHOCOLAT PORTION\n1.0\n4.55\n\n\n41\nR.E WPP\nSABLE POIRE CREME AMANDE PORTION\n1.0\n4.55\n\n\n42\nR.E WPP\nRIZ AU LAIT 150G\n2.0\n3.80\n\n\n43\nR.E WPP\nBONBON SUCRE COEUR 100G\n1.0\n3.35\n\n\n44\nR.E WPP\nSOUFFLE AU POIVRE NOIR 100G\n1.0\n3.35\n\n\n45\nR.E WPP\nNATURAL LIMONADE FTK (Hibiscus)\n1.0\n3.25\n\n\n46\nR.E WPP\nWASABI NUTS PETIT POT\n1.0\n2.85\n\n\n47\nR.E WPP\nSANDWICH BREAKFAST (Beurre et fromage)\n1.0\n2.50\n\n\n48\nR.E WPP\nINFUSION CAMOMILLE / CITRON\n2.0\n2.40\n\n\n49\nR.E WPP\nFRUIT FRAIS PIECE\n1.0\n0.65\n\n\n\n\n\n\n\n\nsales_wpp_df.total.sum()\n\n3296.42\n\n\n\nEvolution of sales WPP\n\n# groups by date (day )\n# date_trunc works with postgres\n# \ndef get_evolution_of_sales_wpp(start_date, end_date):\n     return core.get_query_res_as_pd(f\"\"\"\n    SELECT \n        date_trunc('day', vpo.created_at) as date,\n        sum(vpol.quantity) as qty_sold,\n        sum(vpol.quantity*vp.price) as total\n    FROM v_pos_order_line as vpol\n        left join v_pos_order as vpo on vpo.id = vpol.order_id\n        left join v_pos_session as vs on vs.id = vpo.session_id\n        left join v_pos as vpos on vpos.id = vs.pos_id\n        left join v_resto_entreprise as vre on vpos.shop_id = vre.id\n        left join v_product as vp on vp.id = vpol.product_id\n    WHERE\n        vre.name = 'R.E WPP'\n        AND (vpo.created_at between '{start_date} 00:00' and '{end_date} 23:59')\n    GROUP BY \n        date_trunc('day', vpo.created_at)\n    ORDER BY total desc;\n    \"\"\")\n\n\n# core.get_previous_n_day??\n\n\nevolution_sales_wpp_df = get_evolution_of_sales_wpp(core.get_previous_n_day(60), datetime.datetime.now().strftime('%Y-%m-%d'))\n\n\nevolution_sales_wpp_df.index = evolution_sales_wpp_df.date\n\n\nevol_plot = evolution_sales_wpp_df.total.plot()\nevol_plot.set_xlabel('Last 2 weeks')\nevol_plot.set_ylabel('EUR')\nevol_plot.set_title('Evol. sales at WPP')\n\nText(0.5, 1.0, 'Evol. sales at WPP')\n\n\n\n\n\n\nprint(\"Average daily sales is {} EUR\".format(evolution_sales_wpp_df.total.mean().round(2)))\nprint(\"Total sales is {} EUR\".format(evolution_sales_wpp_df.total.sum().round(2)))\n\nAverage daily sales is 728.44 EUR\nTotal sales is 10198.12 EUR\n\n\n\nevolution_sales_wpp_df.groupby(evolution_sales_wpp_df.index.dayofweek).mean().total.round(2)\n\n/var/folders/3s/8thx9yjd15l2g2jfkpzcxpzw0000gn/T/ipykernel_61830/1846917817.py:1: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n  evolution_sales_wpp_df.groupby(evolution_sales_wpp_df.index.dayofweek).mean().total.round(2)\n\n\ndate\n0    640.76\n1    644.79\n2    702.88\n3    897.01\nName: total, dtype: float64"
  }
]